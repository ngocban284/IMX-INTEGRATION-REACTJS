{"ast":null,"code":"import { fromRefinement } from './fromRefinement';\n\nvar isRegExp = function (u) {\n  return Object.prototype.toString.call(u) === '[object RegExp]';\n};\n/**\n * @example\n * import { regexp } from 'io-ts-types/es6/regexp'\n * import { right } from 'fp-ts/es6/Either'\n *\n * const input1 = /\\w+/\n * const input2 = new RegExp('\\\\w+')\n * assert.deepStrictEqual(regexp.decode(input1), right(input1))\n * assert.deepStrictEqual(regexp.decode(input2), right(input2))\n *\n * @since 0.4.4\n */\n\n\nexport var regexp = fromRefinement('RegExp', isRegExp);","map":{"version":3,"names":["fromRefinement","isRegExp","u","Object","prototype","toString","call","regexp"],"sources":["/Users/ngocban/Desktop/imx-integration-reactjs/node_modules/io-ts-types/es6/regexp.js"],"sourcesContent":["import { fromRefinement } from './fromRefinement';\nvar isRegExp = function (u) { return Object.prototype.toString.call(u) === '[object RegExp]'; };\n/**\n * @example\n * import { regexp } from 'io-ts-types/es6/regexp'\n * import { right } from 'fp-ts/es6/Either'\n *\n * const input1 = /\\w+/\n * const input2 = new RegExp('\\\\w+')\n * assert.deepStrictEqual(regexp.decode(input1), right(input1))\n * assert.deepStrictEqual(regexp.decode(input2), right(input2))\n *\n * @since 0.4.4\n */\nexport var regexp = fromRefinement('RegExp', isRegExp);\n"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;;AACA,IAAIC,QAAQ,GAAG,UAAUC,CAAV,EAAa;EAAE,OAAOC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,CAA/B,MAAsC,iBAA7C;AAAiE,CAA/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,IAAIK,MAAM,GAAGP,cAAc,CAAC,QAAD,EAAWC,QAAX,CAA3B"},"metadata":{},"sourceType":"module"}