{"ast":null,"code":"import { pipe, bind_, bindTo_, flow } from './function';\nimport { none, some } from './Option';\nimport * as RA from './ReadonlyArray';\nimport { getJoinSemigroup, getMeetSemigroup } from './Semigroup';\n/**\n * Append an element to the front of an array, creating a new non empty array\n *\n * @example\n * import { cons } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(cons(1, [2, 3, 4]), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.5.0\n */\n\nexport var cons = RA.cons;\n/**\n * Append an element to the end of an array, creating a new non empty array\n *\n * @example\n * import { snoc } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(snoc([1, 2, 3], 4), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.5.0\n */\n\nexport var snoc = RA.snoc;\n/**\n * Builds a `ReadonlyNonEmptyArray` from an array returning `none` if `as` is an empty array\n *\n * @category constructors\n * @since 2.5.0\n */\n\nexport function fromReadonlyArray(as) {\n  return RA.isNonEmpty(as) ? some(as) : none;\n}\n/**\n * @category constructors\n * @since 2.5.0\n */\n// tslint:disable-next-line: readonly-array\n\nexport function fromArray(as) {\n  return fromReadonlyArray(RA.fromArray(as));\n}\n/**\n * Produces a couple of the first element of the array, and a new array of the remaining elements, if any\n *\n * @example\n * import { cons, uncons } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(uncons(cons(1, [2, 3, 4])), [1, [2, 3, 4]])\n *\n * @category destructors\n * @since 2.9.0\n */\n\nexport function uncons(nea) {\n  return [nea[0], nea.slice(1)];\n}\n/**\n * Produces a couple of a copy of the array without its last element, and that last element\n *\n * @example\n * import { snoc, unsnoc } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(unsnoc(snoc([1, 2, 3], 4)), [[1, 2, 3], 4])\n *\n * @category destructors\n * @since 2.9.0\n */\n\nexport function unsnoc(nea) {\n  var l = nea.length - 1;\n  return [nea.slice(0, l), nea[l]];\n}\n/**\n * @category instances\n * @since 2.5.0\n */\n\nexport var getShow = RA.getShow;\n/**\n * @since 2.5.0\n */\n\nexport function head(nea) {\n  return nea[0];\n}\n/**\n * @since 2.5.0\n */\n\nexport function tail(nea) {\n  return nea.slice(1);\n}\n/**\n * @category combinators\n * @since 2.5.0\n */\n\nexport var reverse = RA.reverse;\n/**\n * @since 2.5.0\n */\n\nexport function min(ord) {\n  var S = getMeetSemigroup(ord);\n  return function (nea) {\n    return nea.reduce(S.concat);\n  };\n}\n/**\n * @since 2.5.0\n */\n\nexport function max(ord) {\n  var S = getJoinSemigroup(ord);\n  return function (nea) {\n    return nea.reduce(S.concat);\n  };\n}\n/**\n * Builds a `Semigroup` instance for `ReadonlyNonEmptyArray`\n *\n * @category instances\n * @since 2.5.0\n */\n\nexport function getSemigroup() {\n  return {\n    concat: concat\n  };\n}\n/**\n * @example\n * import { getEq, cons } from 'fp-ts/ReadonlyNonEmptyArray'\n * import { eqNumber } from 'fp-ts/Eq'\n *\n * const E = getEq(eqNumber)\n * assert.strictEqual(E.equals(cons(1, [2]), [1, 2]), true)\n * assert.strictEqual(E.equals(cons(1, [2]), [1, 3]), false)\n *\n * @category instances\n * @since 2.5.0\n */\n\nexport var getEq = RA.getEq;\nexport function group(E) {\n  return function (as) {\n    var len = as.length;\n\n    if (len === 0) {\n      return RA.empty;\n    } // tslint:disable-next-line: readonly-array\n\n\n    var r = [];\n    var head = as[0];\n    var nea = [head];\n\n    for (var i = 1; i < len; i++) {\n      var x = as[i];\n\n      if (E.equals(x, head)) {\n        nea.push(x);\n      } else {\n        r.push(nea);\n        head = x;\n        nea = [head];\n      }\n    }\n\n    r.push(nea);\n    return r;\n  };\n}\nexport function groupSort(O) {\n  var sortO = RA.sort(O);\n  var groupO = group(O);\n  return function (as) {\n    return groupO(sortO(as));\n  };\n}\n/**\n * Splits an array into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n * function on each element, and grouping the results according to values returned\n *\n * @example\n * import { cons, groupBy } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(groupBy((s: string) => String(s.length))(['foo', 'bar', 'foobar']), {\n *   '3': cons('foo', ['bar']),\n *   '6': cons('foobar', [])\n * })\n *\n * @category constructors\n * @since 2.5.0\n */\n\nexport function groupBy(f) {\n  return function (as) {\n    var r = {};\n\n    for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n      var a = as_1[_i];\n      var k = f(a);\n\n      if (r.hasOwnProperty(k)) {\n        r[k].push(a);\n      } else {\n        r[k] = [a];\n      }\n    }\n\n    return r;\n  };\n}\n/**\n * @since 2.5.0\n */\n\nexport function last(nea) {\n  return nea[nea.length - 1];\n}\n/**\n * Get all but the last element of a non empty array, creating a new array.\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), [1, 2])\n * assert.deepStrictEqual(init([1]), [])\n *\n * @since 2.5.0\n */\n\nexport function init(nea) {\n  return nea.slice(0, -1);\n}\n/**\n * @category combinators\n * @since 2.5.0\n */\n\nexport function sort(O) {\n  return RA.sort(O);\n}\n/**\n * @since 2.5.0\n */\n\nexport function insertAt(i, a) {\n  return RA.insertAt(i, a);\n}\n/**\n * @since 2.5.0\n */\n\nexport function updateAt(i, a) {\n  return RA.updateAt(i, a);\n}\n/**\n * @since 2.5.0\n */\n\nexport function modifyAt(i, f) {\n  return RA.modifyAt(i, f);\n}\nexport function filter(predicate) {\n  return filterWithIndex(function (_, a) {\n    return predicate(a);\n  });\n}\n/**\n * @since 2.5.0\n */\n\nexport function filterWithIndex(predicate) {\n  return function (nea) {\n    return fromReadonlyArray(nea.filter(function (a, i) {\n      return predicate(i, a);\n    }));\n  };\n}\n/**\n * Wrap a value into the type constructor.\n *\n * @category Applicative\n * @since 2.5.0\n */\n\nexport var of = RA.of;\nexport function concat(fx, fy) {\n  return fx.concat(fy);\n}\n/**\n * @since 2.5.0\n */\n\nexport function fold(S) {\n  return function (fa) {\n    return fa.reduce(S.concat);\n  };\n}\n/**\n * @category combinators\n * @since 2.5.1\n */\n\nexport var zipWith = RA.zipWith;\n/**\n * @category combinators\n * @since 2.5.1\n */\n\nexport var zip = RA.zip;\n/**\n * @since 2.5.1\n */\n\nexport var unzip = RA.unzip;\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { cons, prependToAll } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(prependToAll(9)(cons(1, [2, 3, 4])), cons(9, [1, 9, 2, 9, 3, 9, 4]))\n *\n * @category combinators\n * @since 2.9.0\n */\n\nexport var prependToAll = RA.prependToAll;\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { cons, intersperse } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(intersperse(9)(cons(1, [2, 3, 4])), cons(1, [9, 2, 9, 3, 9, 4]))\n *\n * @category combinators\n * @since 2.9.0\n */\n\nexport var intersperse = RA.intersperse; // -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n\nvar map_ = RA.Functor.map;\nvar mapWithIndex_ = RA.FunctorWithIndex.mapWithIndex;\nvar ap_ = RA.Applicative.ap;\nvar chain_ = RA.Monad.chain;\nvar extend_ = RA.Extend.extend;\nvar reduce_ = RA.Foldable.reduce;\nvar foldMap_ = RA.Foldable.foldMap;\nvar reduceRight_ = RA.Foldable.reduceRight;\nvar traverse_ = RA.Traversable.traverse;\nvar alt_ = RA.Alt.alt;\nvar reduceWithIndex_ = RA.FoldableWithIndex.reduceWithIndex;\nvar foldMapWithIndex_ = RA.FoldableWithIndex.foldMapWithIndex;\nvar reduceRightWithIndex_ = RA.FoldableWithIndex.reduceRightWithIndex;\nvar traverseWithIndex_ = RA.TraversableWithIndex.traverseWithIndex; // -------------------------------------------------------------------------------------\n// pipeables\n// -------------------------------------------------------------------------------------\n\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\n\nexport var foldMapWithIndex = function (S) {\n  return function (f) {\n    return function (fa) {\n      return fa.slice(1).reduce(function (s, a, i) {\n        return S.concat(s, f(i + 1, a));\n      }, f(0, fa[0]));\n    };\n  };\n};\n/**\n * @category Foldable\n * @since 2.5.0\n */\n\nexport var foldMap = function (S) {\n  return function (f) {\n    return function (fa) {\n      return fa.slice(1).reduce(function (s, a) {\n        return S.concat(s, f(a));\n      }, f(fa[0]));\n    };\n  };\n};\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\n\nexport var altW = RA.altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.6.2\n */\n\nexport var alt = RA.alt;\n/**\n * @category Apply\n * @since 2.5.0\n */\n\nexport var ap = RA.ap;\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var apFirst = RA.apFirst;\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var apSecond = RA.apSecond;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.5.0\n */\n\nexport var chain = RA.chain;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Monad`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var chainFirst = RA.chainFirst;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var duplicate = RA.duplicate;\n/**\n * @category Extend\n * @since 2.5.0\n */\n\nexport var extend = RA.extend;\n/**\n * Derivable from `Monad`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var flatten = RA.flatten;\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.5.0\n */\n\nexport var map = RA.map;\n/**\n * @category FunctorWithIndex\n * @since 2.5.0\n */\n\nexport var mapWithIndex = RA.mapWithIndex;\n/**\n * @category Foldable\n * @since 2.5.0\n */\n\nexport var reduce = RA.reduce;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\n\nexport var reduceWithIndex = RA.reduceWithIndex;\n/**\n * @category Foldable\n * @since 2.5.0\n */\n\nexport var reduceRight = RA.reduceRight;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\n\nexport var reduceRightWithIndex = RA.reduceRightWithIndex;\n/**\n * @since 2.6.3\n */\n\nexport var traverse = RA.traverse;\n/**\n * @since 2.6.3\n */\n\nexport var sequence = RA.sequence;\n/**\n * @since 2.6.3\n */\n\nexport var traverseWithIndex = RA.traverseWithIndex;\n/**\n * @since 2.6.3\n */\n\nexport var extract = head; // -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n\n/**\n * @category instances\n * @since 2.5.0\n */\n\nexport var URI = 'ReadonlyNonEmptyArray';\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Functor = {\n  URI: URI,\n  map: map_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var FunctorWithIndex = {\n  URI: URI,\n  map: map_,\n  mapWithIndex: mapWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Applicative = {\n  URI: URI,\n  map: map_,\n  ap: ap_,\n  of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Monad = {\n  URI: URI,\n  map: map_,\n  ap: ap_,\n  of: of,\n  chain: chain_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Foldable = {\n  URI: URI,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var FoldableWithIndex = {\n  URI: URI,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_,\n  reduceWithIndex: reduceWithIndex_,\n  foldMapWithIndex: foldMapWithIndex_,\n  reduceRightWithIndex: reduceRightWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Traversable = {\n  URI: URI,\n  map: map_,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_,\n  traverse: traverse_,\n  sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var TraversableWithIndex = {\n  URI: URI,\n  map: map_,\n  mapWithIndex: mapWithIndex_,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_,\n  traverse: traverse_,\n  sequence: sequence,\n  reduceWithIndex: reduceWithIndex_,\n  foldMapWithIndex: foldMapWithIndex_,\n  reduceRightWithIndex: reduceRightWithIndex_,\n  traverseWithIndex: traverseWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Alt = {\n  URI: URI,\n  map: map_,\n  alt: alt_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Comonad = {\n  URI: URI,\n  map: map_,\n  extend: extend_,\n  extract: extract\n}; // TODO: remove in v3\n\n/**\n * @category instances\n * @since 2.5.0\n */\n\nexport var readonlyNonEmptyArray = {\n  URI: URI,\n  of: of,\n  map: map_,\n  mapWithIndex: mapWithIndex_,\n  ap: ap_,\n  chain: chain_,\n  extend: extend_,\n  extract: extract,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_,\n  traverse: traverse_,\n  sequence: sequence,\n  reduceWithIndex: reduceWithIndex_,\n  foldMapWithIndex: foldMapWithIndex_,\n  reduceRightWithIndex: reduceRightWithIndex_,\n  traverseWithIndex: traverseWithIndex_,\n  alt: alt_\n}; // -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.9.0\n */\n\nexport var Do = /*#__PURE__*/of({});\n/**\n * @since 2.8.0\n */\n\nexport var bindTo = function (name) {\n  return map(bindTo_(name));\n};\n/**\n * @since 2.8.0\n */\n\nexport var bind = function (name, f) {\n  return chain(function (a) {\n    return pipe(f(a), map(function (b) {\n      return bind_(a, name, b);\n    }));\n  });\n}; // -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.8.0\n */\n\nexport var apS = function (name, fb) {\n  return flow(map(function (a) {\n    return function (b) {\n      return bind_(a, name, b);\n    };\n  }), ap(fb));\n};","map":{"version":3,"names":["pipe","bind_","bindTo_","flow","none","some","RA","getJoinSemigroup","getMeetSemigroup","cons","snoc","fromReadonlyArray","as","isNonEmpty","fromArray","uncons","nea","slice","unsnoc","l","length","getShow","head","tail","reverse","min","ord","S","reduce","concat","max","getSemigroup","getEq","group","E","len","empty","r","i","x","equals","push","groupSort","O","sortO","sort","groupO","groupBy","f","_i","as_1","a","k","hasOwnProperty","last","init","insertAt","updateAt","modifyAt","filter","predicate","filterWithIndex","_","of","fx","fy","fold","fa","zipWith","zip","unzip","prependToAll","intersperse","map_","Functor","map","mapWithIndex_","FunctorWithIndex","mapWithIndex","ap_","Applicative","ap","chain_","Monad","chain","extend_","Extend","extend","reduce_","Foldable","foldMap_","foldMap","reduceRight_","reduceRight","traverse_","Traversable","traverse","alt_","Alt","alt","reduceWithIndex_","FoldableWithIndex","reduceWithIndex","foldMapWithIndex_","foldMapWithIndex","reduceRightWithIndex_","reduceRightWithIndex","traverseWithIndex_","TraversableWithIndex","traverseWithIndex","s","altW","apFirst","apSecond","chainFirst","duplicate","flatten","sequence","extract","URI","Comonad","readonlyNonEmptyArray","Do","bindTo","name","bind","b","apS","fb"],"sources":["/Users/ngocban/Desktop/imx-integration-reactjs/node_modules/fp-ts/es6/ReadonlyNonEmptyArray.js"],"sourcesContent":["import { pipe, bind_, bindTo_, flow } from './function';\nimport { none, some } from './Option';\nimport * as RA from './ReadonlyArray';\nimport { getJoinSemigroup, getMeetSemigroup } from './Semigroup';\n/**\n * Append an element to the front of an array, creating a new non empty array\n *\n * @example\n * import { cons } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(cons(1, [2, 3, 4]), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.5.0\n */\nexport var cons = RA.cons;\n/**\n * Append an element to the end of an array, creating a new non empty array\n *\n * @example\n * import { snoc } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(snoc([1, 2, 3], 4), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.5.0\n */\nexport var snoc = RA.snoc;\n/**\n * Builds a `ReadonlyNonEmptyArray` from an array returning `none` if `as` is an empty array\n *\n * @category constructors\n * @since 2.5.0\n */\nexport function fromReadonlyArray(as) {\n    return RA.isNonEmpty(as) ? some(as) : none;\n}\n/**\n * @category constructors\n * @since 2.5.0\n */\n// tslint:disable-next-line: readonly-array\nexport function fromArray(as) {\n    return fromReadonlyArray(RA.fromArray(as));\n}\n/**\n * Produces a couple of the first element of the array, and a new array of the remaining elements, if any\n *\n * @example\n * import { cons, uncons } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(uncons(cons(1, [2, 3, 4])), [1, [2, 3, 4]])\n *\n * @category destructors\n * @since 2.9.0\n */\nexport function uncons(nea) {\n    return [nea[0], nea.slice(1)];\n}\n/**\n * Produces a couple of a copy of the array without its last element, and that last element\n *\n * @example\n * import { snoc, unsnoc } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(unsnoc(snoc([1, 2, 3], 4)), [[1, 2, 3], 4])\n *\n * @category destructors\n * @since 2.9.0\n */\nexport function unsnoc(nea) {\n    var l = nea.length - 1;\n    return [nea.slice(0, l), nea[l]];\n}\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var getShow = RA.getShow;\n/**\n * @since 2.5.0\n */\nexport function head(nea) {\n    return nea[0];\n}\n/**\n * @since 2.5.0\n */\nexport function tail(nea) {\n    return nea.slice(1);\n}\n/**\n * @category combinators\n * @since 2.5.0\n */\nexport var reverse = RA.reverse;\n/**\n * @since 2.5.0\n */\nexport function min(ord) {\n    var S = getMeetSemigroup(ord);\n    return function (nea) { return nea.reduce(S.concat); };\n}\n/**\n * @since 2.5.0\n */\nexport function max(ord) {\n    var S = getJoinSemigroup(ord);\n    return function (nea) { return nea.reduce(S.concat); };\n}\n/**\n * Builds a `Semigroup` instance for `ReadonlyNonEmptyArray`\n *\n * @category instances\n * @since 2.5.0\n */\nexport function getSemigroup() {\n    return {\n        concat: concat\n    };\n}\n/**\n * @example\n * import { getEq, cons } from 'fp-ts/ReadonlyNonEmptyArray'\n * import { eqNumber } from 'fp-ts/Eq'\n *\n * const E = getEq(eqNumber)\n * assert.strictEqual(E.equals(cons(1, [2]), [1, 2]), true)\n * assert.strictEqual(E.equals(cons(1, [2]), [1, 3]), false)\n *\n * @category instances\n * @since 2.5.0\n */\nexport var getEq = RA.getEq;\nexport function group(E) {\n    return function (as) {\n        var len = as.length;\n        if (len === 0) {\n            return RA.empty;\n        }\n        // tslint:disable-next-line: readonly-array\n        var r = [];\n        var head = as[0];\n        var nea = [head];\n        for (var i = 1; i < len; i++) {\n            var x = as[i];\n            if (E.equals(x, head)) {\n                nea.push(x);\n            }\n            else {\n                r.push(nea);\n                head = x;\n                nea = [head];\n            }\n        }\n        r.push(nea);\n        return r;\n    };\n}\nexport function groupSort(O) {\n    var sortO = RA.sort(O);\n    var groupO = group(O);\n    return function (as) { return groupO(sortO(as)); };\n}\n/**\n * Splits an array into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n * function on each element, and grouping the results according to values returned\n *\n * @example\n * import { cons, groupBy } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(groupBy((s: string) => String(s.length))(['foo', 'bar', 'foobar']), {\n *   '3': cons('foo', ['bar']),\n *   '6': cons('foobar', [])\n * })\n *\n * @category constructors\n * @since 2.5.0\n */\nexport function groupBy(f) {\n    return function (as) {\n        var r = {};\n        for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n            var a = as_1[_i];\n            var k = f(a);\n            if (r.hasOwnProperty(k)) {\n                r[k].push(a);\n            }\n            else {\n                r[k] = [a];\n            }\n        }\n        return r;\n    };\n}\n/**\n * @since 2.5.0\n */\nexport function last(nea) {\n    return nea[nea.length - 1];\n}\n/**\n * Get all but the last element of a non empty array, creating a new array.\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), [1, 2])\n * assert.deepStrictEqual(init([1]), [])\n *\n * @since 2.5.0\n */\nexport function init(nea) {\n    return nea.slice(0, -1);\n}\n/**\n * @category combinators\n * @since 2.5.0\n */\nexport function sort(O) {\n    return RA.sort(O);\n}\n/**\n * @since 2.5.0\n */\nexport function insertAt(i, a) {\n    return RA.insertAt(i, a);\n}\n/**\n * @since 2.5.0\n */\nexport function updateAt(i, a) {\n    return RA.updateAt(i, a);\n}\n/**\n * @since 2.5.0\n */\nexport function modifyAt(i, f) {\n    return RA.modifyAt(i, f);\n}\nexport function filter(predicate) {\n    return filterWithIndex(function (_, a) { return predicate(a); });\n}\n/**\n * @since 2.5.0\n */\nexport function filterWithIndex(predicate) {\n    return function (nea) { return fromReadonlyArray(nea.filter(function (a, i) { return predicate(i, a); })); };\n}\n/**\n * Wrap a value into the type constructor.\n *\n * @category Applicative\n * @since 2.5.0\n */\nexport var of = RA.of;\nexport function concat(fx, fy) {\n    return fx.concat(fy);\n}\n/**\n * @since 2.5.0\n */\nexport function fold(S) {\n    return function (fa) { return fa.reduce(S.concat); };\n}\n/**\n * @category combinators\n * @since 2.5.1\n */\nexport var zipWith = RA.zipWith;\n/**\n * @category combinators\n * @since 2.5.1\n */\nexport var zip = RA.zip;\n/**\n * @since 2.5.1\n */\nexport var unzip = RA.unzip;\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { cons, prependToAll } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(prependToAll(9)(cons(1, [2, 3, 4])), cons(9, [1, 9, 2, 9, 3, 9, 4]))\n *\n * @category combinators\n * @since 2.9.0\n */\nexport var prependToAll = RA.prependToAll;\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { cons, intersperse } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(intersperse(9)(cons(1, [2, 3, 4])), cons(1, [9, 2, 9, 3, 9, 4]))\n *\n * @category combinators\n * @since 2.9.0\n */\nexport var intersperse = RA.intersperse;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar map_ = RA.Functor.map;\nvar mapWithIndex_ = RA.FunctorWithIndex.mapWithIndex;\nvar ap_ = RA.Applicative.ap;\nvar chain_ = RA.Monad.chain;\nvar extend_ = RA.Extend.extend;\nvar reduce_ = RA.Foldable.reduce;\nvar foldMap_ = RA.Foldable.foldMap;\nvar reduceRight_ = RA.Foldable.reduceRight;\nvar traverse_ = RA.Traversable.traverse;\nvar alt_ = RA.Alt.alt;\nvar reduceWithIndex_ = RA.FoldableWithIndex.reduceWithIndex;\nvar foldMapWithIndex_ = RA.FoldableWithIndex\n    .foldMapWithIndex;\nvar reduceRightWithIndex_ = RA.FoldableWithIndex\n    .reduceRightWithIndex;\nvar traverseWithIndex_ = RA.TraversableWithIndex\n    .traverseWithIndex;\n// -------------------------------------------------------------------------------------\n// pipeables\n// -------------------------------------------------------------------------------------\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nexport var foldMapWithIndex = function (S) { return function (f) { return function (fa) { return fa.slice(1).reduce(function (s, a, i) { return S.concat(s, f(i + 1, a)); }, f(0, fa[0])); }; }; };\n/**\n * @category Foldable\n * @since 2.5.0\n */\nexport var foldMap = function (S) { return function (f) { return function (fa) {\n    return fa.slice(1).reduce(function (s, a) { return S.concat(s, f(a)); }, f(fa[0]));\n}; }; };\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nexport var altW = RA.altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.6.2\n */\nexport var alt = RA.alt;\n/**\n * @category Apply\n * @since 2.5.0\n */\nexport var ap = RA.ap;\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var apFirst = RA.apFirst;\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var apSecond = RA.apSecond;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.5.0\n */\nexport var chain = RA.chain;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Monad`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var chainFirst = RA.chainFirst;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var duplicate = RA.duplicate;\n/**\n * @category Extend\n * @since 2.5.0\n */\nexport var extend = RA.extend;\n/**\n * Derivable from `Monad`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var flatten = RA.flatten;\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.5.0\n */\nexport var map = RA.map;\n/**\n * @category FunctorWithIndex\n * @since 2.5.0\n */\nexport var mapWithIndex = RA.mapWithIndex;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nexport var reduce = RA.reduce;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nexport var reduceWithIndex = RA.reduceWithIndex;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nexport var reduceRight = RA.reduceRight;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nexport var reduceRightWithIndex = RA.reduceRightWithIndex;\n/**\n * @since 2.6.3\n */\nexport var traverse = RA.traverse;\n/**\n * @since 2.6.3\n */\nexport var sequence = RA.sequence;\n/**\n * @since 2.6.3\n */\nexport var traverseWithIndex = RA.traverseWithIndex;\n/**\n * @since 2.6.3\n */\nexport var extract = head;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var URI = 'ReadonlyNonEmptyArray';\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: map_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FunctorWithIndex = {\n    URI: URI,\n    map: map_,\n    mapWithIndex: mapWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n    URI: URI,\n    map: map_,\n    ap: ap_,\n    of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n    URI: URI,\n    map: map_,\n    ap: ap_,\n    of: of,\n    chain: chain_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FoldableWithIndex = {\n    URI: URI,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    reduceWithIndex: reduceWithIndex_,\n    foldMapWithIndex: foldMapWithIndex_,\n    reduceRightWithIndex: reduceRightWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n    URI: URI,\n    map: map_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var TraversableWithIndex = {\n    URI: URI,\n    map: map_,\n    mapWithIndex: mapWithIndex_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: sequence,\n    reduceWithIndex: reduceWithIndex_,\n    foldMapWithIndex: foldMapWithIndex_,\n    reduceRightWithIndex: reduceRightWithIndex_,\n    traverseWithIndex: traverseWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n    URI: URI,\n    map: map_,\n    alt: alt_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Comonad = {\n    URI: URI,\n    map: map_,\n    extend: extend_,\n    extract: extract\n};\n// TODO: remove in v3\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var readonlyNonEmptyArray = {\n    URI: URI,\n    of: of,\n    map: map_,\n    mapWithIndex: mapWithIndex_,\n    ap: ap_,\n    chain: chain_,\n    extend: extend_,\n    extract: extract,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: sequence,\n    reduceWithIndex: reduceWithIndex_,\n    foldMapWithIndex: foldMapWithIndex_,\n    reduceRightWithIndex: reduceRightWithIndex_,\n    traverseWithIndex: traverseWithIndex_,\n    alt: alt_\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexport var Do = \n/*#__PURE__*/\nof({});\n/**\n * @since 2.8.0\n */\nexport var bindTo = function (name) { return map(bindTo_(name)); };\n/**\n * @since 2.8.0\n */\nexport var bind = function (name, f) {\n    return chain(function (a) {\n        return pipe(f(a), map(function (b) { return bind_(a, name, b); }));\n    });\n};\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexport var apS = function (name, fb) {\n    return flow(map(function (a) { return function (b) { return bind_(a, name, b); }; }), ap(fb));\n};\n"],"mappings":"AAAA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,OAAtB,EAA+BC,IAA/B,QAA2C,YAA3C;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,UAA3B;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,QAAmD,aAAnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,IAAI,GAAGH,EAAE,CAACG,IAAd;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,IAAI,GAAGJ,EAAE,CAACI,IAAd;AACP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,iBAAT,CAA2BC,EAA3B,EAA+B;EAClC,OAAON,EAAE,CAACO,UAAH,CAAcD,EAAd,IAAoBP,IAAI,CAACO,EAAD,CAAxB,GAA+BR,IAAtC;AACH;AACD;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASU,SAAT,CAAmBF,EAAnB,EAAuB;EAC1B,OAAOD,iBAAiB,CAACL,EAAE,CAACQ,SAAH,CAAaF,EAAb,CAAD,CAAxB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASG,MAAT,CAAgBC,GAAhB,EAAqB;EACxB,OAAO,CAACA,GAAG,CAAC,CAAD,CAAJ,EAASA,GAAG,CAACC,KAAJ,CAAU,CAAV,CAAT,CAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,MAAT,CAAgBF,GAAhB,EAAqB;EACxB,IAAIG,CAAC,GAAGH,GAAG,CAACI,MAAJ,GAAa,CAArB;EACA,OAAO,CAACJ,GAAG,CAACC,KAAJ,CAAU,CAAV,EAAaE,CAAb,CAAD,EAAkBH,GAAG,CAACG,CAAD,CAArB,CAAP;AACH;AACD;AACA;AACA;AACA;;AACA,OAAO,IAAIE,OAAO,GAAGf,EAAE,CAACe,OAAjB;AACP;AACA;AACA;;AACA,OAAO,SAASC,IAAT,CAAcN,GAAd,EAAmB;EACtB,OAAOA,GAAG,CAAC,CAAD,CAAV;AACH;AACD;AACA;AACA;;AACA,OAAO,SAASO,IAAT,CAAcP,GAAd,EAAmB;EACtB,OAAOA,GAAG,CAACC,KAAJ,CAAU,CAAV,CAAP;AACH;AACD;AACA;AACA;AACA;;AACA,OAAO,IAAIO,OAAO,GAAGlB,EAAE,CAACkB,OAAjB;AACP;AACA;AACA;;AACA,OAAO,SAASC,GAAT,CAAaC,GAAb,EAAkB;EACrB,IAAIC,CAAC,GAAGnB,gBAAgB,CAACkB,GAAD,CAAxB;EACA,OAAO,UAAUV,GAAV,EAAe;IAAE,OAAOA,GAAG,CAACY,MAAJ,CAAWD,CAAC,CAACE,MAAb,CAAP;EAA8B,CAAtD;AACH;AACD;AACA;AACA;;AACA,OAAO,SAASC,GAAT,CAAaJ,GAAb,EAAkB;EACrB,IAAIC,CAAC,GAAGpB,gBAAgB,CAACmB,GAAD,CAAxB;EACA,OAAO,UAAUV,GAAV,EAAe;IAAE,OAAOA,GAAG,CAACY,MAAJ,CAAWD,CAAC,CAACE,MAAb,CAAP;EAA8B,CAAtD;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASE,YAAT,GAAwB;EAC3B,OAAO;IACHF,MAAM,EAAEA;EADL,CAAP;AAGH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIG,KAAK,GAAG1B,EAAE,CAAC0B,KAAf;AACP,OAAO,SAASC,KAAT,CAAeC,CAAf,EAAkB;EACrB,OAAO,UAAUtB,EAAV,EAAc;IACjB,IAAIuB,GAAG,GAAGvB,EAAE,CAACQ,MAAb;;IACA,IAAIe,GAAG,KAAK,CAAZ,EAAe;MACX,OAAO7B,EAAE,CAAC8B,KAAV;IACH,CAJgB,CAKjB;;;IACA,IAAIC,CAAC,GAAG,EAAR;IACA,IAAIf,IAAI,GAAGV,EAAE,CAAC,CAAD,CAAb;IACA,IAAII,GAAG,GAAG,CAACM,IAAD,CAAV;;IACA,KAAK,IAAIgB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAApB,EAAyBG,CAAC,EAA1B,EAA8B;MAC1B,IAAIC,CAAC,GAAG3B,EAAE,CAAC0B,CAAD,CAAV;;MACA,IAAIJ,CAAC,CAACM,MAAF,CAASD,CAAT,EAAYjB,IAAZ,CAAJ,EAAuB;QACnBN,GAAG,CAACyB,IAAJ,CAASF,CAAT;MACH,CAFD,MAGK;QACDF,CAAC,CAACI,IAAF,CAAOzB,GAAP;QACAM,IAAI,GAAGiB,CAAP;QACAvB,GAAG,GAAG,CAACM,IAAD,CAAN;MACH;IACJ;;IACDe,CAAC,CAACI,IAAF,CAAOzB,GAAP;IACA,OAAOqB,CAAP;EACH,CAtBD;AAuBH;AACD,OAAO,SAASK,SAAT,CAAmBC,CAAnB,EAAsB;EACzB,IAAIC,KAAK,GAAGtC,EAAE,CAACuC,IAAH,CAAQF,CAAR,CAAZ;EACA,IAAIG,MAAM,GAAGb,KAAK,CAACU,CAAD,CAAlB;EACA,OAAO,UAAU/B,EAAV,EAAc;IAAE,OAAOkC,MAAM,CAACF,KAAK,CAAChC,EAAD,CAAN,CAAb;EAA2B,CAAlD;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASmC,OAAT,CAAiBC,CAAjB,EAAoB;EACvB,OAAO,UAAUpC,EAAV,EAAc;IACjB,IAAIyB,CAAC,GAAG,EAAR;;IACA,KAAK,IAAIY,EAAE,GAAG,CAAT,EAAYC,IAAI,GAAGtC,EAAxB,EAA4BqC,EAAE,GAAGC,IAAI,CAAC9B,MAAtC,EAA8C6B,EAAE,EAAhD,EAAoD;MAChD,IAAIE,CAAC,GAAGD,IAAI,CAACD,EAAD,CAAZ;MACA,IAAIG,CAAC,GAAGJ,CAAC,CAACG,CAAD,CAAT;;MACA,IAAId,CAAC,CAACgB,cAAF,CAAiBD,CAAjB,CAAJ,EAAyB;QACrBf,CAAC,CAACe,CAAD,CAAD,CAAKX,IAAL,CAAUU,CAAV;MACH,CAFD,MAGK;QACDd,CAAC,CAACe,CAAD,CAAD,GAAO,CAACD,CAAD,CAAP;MACH;IACJ;;IACD,OAAOd,CAAP;EACH,CAbD;AAcH;AACD;AACA;AACA;;AACA,OAAO,SAASiB,IAAT,CAActC,GAAd,EAAmB;EACtB,OAAOA,GAAG,CAACA,GAAG,CAACI,MAAJ,GAAa,CAAd,CAAV;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASmC,IAAT,CAAcvC,GAAd,EAAmB;EACtB,OAAOA,GAAG,CAACC,KAAJ,CAAU,CAAV,EAAa,CAAC,CAAd,CAAP;AACH;AACD;AACA;AACA;AACA;;AACA,OAAO,SAAS4B,IAAT,CAAcF,CAAd,EAAiB;EACpB,OAAOrC,EAAE,CAACuC,IAAH,CAAQF,CAAR,CAAP;AACH;AACD;AACA;AACA;;AACA,OAAO,SAASa,QAAT,CAAkBlB,CAAlB,EAAqBa,CAArB,EAAwB;EAC3B,OAAO7C,EAAE,CAACkD,QAAH,CAAYlB,CAAZ,EAAea,CAAf,CAAP;AACH;AACD;AACA;AACA;;AACA,OAAO,SAASM,QAAT,CAAkBnB,CAAlB,EAAqBa,CAArB,EAAwB;EAC3B,OAAO7C,EAAE,CAACmD,QAAH,CAAYnB,CAAZ,EAAea,CAAf,CAAP;AACH;AACD;AACA;AACA;;AACA,OAAO,SAASO,QAAT,CAAkBpB,CAAlB,EAAqBU,CAArB,EAAwB;EAC3B,OAAO1C,EAAE,CAACoD,QAAH,CAAYpB,CAAZ,EAAeU,CAAf,CAAP;AACH;AACD,OAAO,SAASW,MAAT,CAAgBC,SAAhB,EAA2B;EAC9B,OAAOC,eAAe,CAAC,UAAUC,CAAV,EAAaX,CAAb,EAAgB;IAAE,OAAOS,SAAS,CAACT,CAAD,CAAhB;EAAsB,CAAzC,CAAtB;AACH;AACD;AACA;AACA;;AACA,OAAO,SAASU,eAAT,CAAyBD,SAAzB,EAAoC;EACvC,OAAO,UAAU5C,GAAV,EAAe;IAAE,OAAOL,iBAAiB,CAACK,GAAG,CAAC2C,MAAJ,CAAW,UAAUR,CAAV,EAAab,CAAb,EAAgB;MAAE,OAAOsB,SAAS,CAACtB,CAAD,EAAIa,CAAJ,CAAhB;IAAyB,CAAtD,CAAD,CAAxB;EAAoF,CAA5G;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIY,EAAE,GAAGzD,EAAE,CAACyD,EAAZ;AACP,OAAO,SAASlC,MAAT,CAAgBmC,EAAhB,EAAoBC,EAApB,EAAwB;EAC3B,OAAOD,EAAE,CAACnC,MAAH,CAAUoC,EAAV,CAAP;AACH;AACD;AACA;AACA;;AACA,OAAO,SAASC,IAAT,CAAcvC,CAAd,EAAiB;EACpB,OAAO,UAAUwC,EAAV,EAAc;IAAE,OAAOA,EAAE,CAACvC,MAAH,CAAUD,CAAC,CAACE,MAAZ,CAAP;EAA6B,CAApD;AACH;AACD;AACA;AACA;AACA;;AACA,OAAO,IAAIuC,OAAO,GAAG9D,EAAE,CAAC8D,OAAjB;AACP;AACA;AACA;AACA;;AACA,OAAO,IAAIC,GAAG,GAAG/D,EAAE,CAAC+D,GAAb;AACP;AACA;AACA;;AACA,OAAO,IAAIC,KAAK,GAAGhE,EAAE,CAACgE,KAAf;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,YAAY,GAAGjE,EAAE,CAACiE,YAAtB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,WAAW,GAAGlE,EAAE,CAACkE,WAArB,C,CACP;AACA;AACA;;AACA,IAAIC,IAAI,GAAGnE,EAAE,CAACoE,OAAH,CAAWC,GAAtB;AACA,IAAIC,aAAa,GAAGtE,EAAE,CAACuE,gBAAH,CAAoBC,YAAxC;AACA,IAAIC,GAAG,GAAGzE,EAAE,CAAC0E,WAAH,CAAeC,EAAzB;AACA,IAAIC,MAAM,GAAG5E,EAAE,CAAC6E,KAAH,CAASC,KAAtB;AACA,IAAIC,OAAO,GAAG/E,EAAE,CAACgF,MAAH,CAAUC,MAAxB;AACA,IAAIC,OAAO,GAAGlF,EAAE,CAACmF,QAAH,CAAY7D,MAA1B;AACA,IAAI8D,QAAQ,GAAGpF,EAAE,CAACmF,QAAH,CAAYE,OAA3B;AACA,IAAIC,YAAY,GAAGtF,EAAE,CAACmF,QAAH,CAAYI,WAA/B;AACA,IAAIC,SAAS,GAAGxF,EAAE,CAACyF,WAAH,CAAeC,QAA/B;AACA,IAAIC,IAAI,GAAG3F,EAAE,CAAC4F,GAAH,CAAOC,GAAlB;AACA,IAAIC,gBAAgB,GAAG9F,EAAE,CAAC+F,iBAAH,CAAqBC,eAA5C;AACA,IAAIC,iBAAiB,GAAGjG,EAAE,CAAC+F,iBAAH,CACnBG,gBADL;AAEA,IAAIC,qBAAqB,GAAGnG,EAAE,CAAC+F,iBAAH,CACvBK,oBADL;AAEA,IAAIC,kBAAkB,GAAGrG,EAAE,CAACsG,oBAAH,CACpBC,iBADL,C,CAEA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIL,gBAAgB,GAAG,UAAU7E,CAAV,EAAa;EAAE,OAAO,UAAUqB,CAAV,EAAa;IAAE,OAAO,UAAUmB,EAAV,EAAc;MAAE,OAAOA,EAAE,CAAClD,KAAH,CAAS,CAAT,EAAYW,MAAZ,CAAmB,UAAUkF,CAAV,EAAa3D,CAAb,EAAgBb,CAAhB,EAAmB;QAAE,OAAOX,CAAC,CAACE,MAAF,CAASiF,CAAT,EAAY9D,CAAC,CAACV,CAAC,GAAG,CAAL,EAAQa,CAAR,CAAb,CAAP;MAAkC,CAA1E,EAA4EH,CAAC,CAAC,CAAD,EAAImB,EAAE,CAAC,CAAD,CAAN,CAA7E,CAAP;IAAkG,CAAzH;EAA4H,CAAlJ;AAAqJ,CAA3L;AACP;AACA;AACA;AACA;;AACA,OAAO,IAAIwB,OAAO,GAAG,UAAUhE,CAAV,EAAa;EAAE,OAAO,UAAUqB,CAAV,EAAa;IAAE,OAAO,UAAUmB,EAAV,EAAc;MAC3E,OAAOA,EAAE,CAAClD,KAAH,CAAS,CAAT,EAAYW,MAAZ,CAAmB,UAAUkF,CAAV,EAAa3D,CAAb,EAAgB;QAAE,OAAOxB,CAAC,CAACE,MAAF,CAASiF,CAAT,EAAY9D,CAAC,CAACG,CAAD,CAAb,CAAP;MAA2B,CAAhE,EAAkEH,CAAC,CAACmB,EAAE,CAAC,CAAD,CAAH,CAAnE,CAAP;IACH,CAFyD;EAEtD,CAFgC;AAE7B,CAFA;AAGP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAI4C,IAAI,GAAGzG,EAAE,CAACyG,IAAd;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIZ,GAAG,GAAG7F,EAAE,CAAC6F,GAAb;AACP;AACA;AACA;AACA;;AACA,OAAO,IAAIlB,EAAE,GAAG3E,EAAE,CAAC2E,EAAZ;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAI+B,OAAO,GAAG1G,EAAE,CAAC0G,OAAjB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,QAAQ,GAAG3G,EAAE,CAAC2G,QAAlB;AACP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAI7B,KAAK,GAAG9E,EAAE,CAAC8E,KAAf;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAI8B,UAAU,GAAG5G,EAAE,CAAC4G,UAApB;AACP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,SAAS,GAAG7G,EAAE,CAAC6G,SAAnB;AACP;AACA;AACA;AACA;;AACA,OAAO,IAAI5B,MAAM,GAAGjF,EAAE,CAACiF,MAAhB;AACP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAI6B,OAAO,GAAG9G,EAAE,CAAC8G,OAAjB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIzC,GAAG,GAAGrE,EAAE,CAACqE,GAAb;AACP;AACA;AACA;AACA;;AACA,OAAO,IAAIG,YAAY,GAAGxE,EAAE,CAACwE,YAAtB;AACP;AACA;AACA;AACA;;AACA,OAAO,IAAIlD,MAAM,GAAGtB,EAAE,CAACsB,MAAhB;AACP;AACA;AACA;AACA;;AACA,OAAO,IAAI0E,eAAe,GAAGhG,EAAE,CAACgG,eAAzB;AACP;AACA;AACA;AACA;;AACA,OAAO,IAAIT,WAAW,GAAGvF,EAAE,CAACuF,WAArB;AACP;AACA;AACA;AACA;;AACA,OAAO,IAAIa,oBAAoB,GAAGpG,EAAE,CAACoG,oBAA9B;AACP;AACA;AACA;;AACA,OAAO,IAAIV,QAAQ,GAAG1F,EAAE,CAAC0F,QAAlB;AACP;AACA;AACA;;AACA,OAAO,IAAIqB,QAAQ,GAAG/G,EAAE,CAAC+G,QAAlB;AACP;AACA;AACA;;AACA,OAAO,IAAIR,iBAAiB,GAAGvG,EAAE,CAACuG,iBAA3B;AACP;AACA;AACA;;AACA,OAAO,IAAIS,OAAO,GAAGhG,IAAd,C,CACP;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIiG,GAAG,GAAG,uBAAV;AACP;AACA;AACA;AACA;;AACA,OAAO,IAAI7C,OAAO,GAAG;EACjB6C,GAAG,EAAEA,GADY;EAEjB5C,GAAG,EAAEF;AAFY,CAAd;AAIP;AACA;AACA;AACA;;AACA,OAAO,IAAII,gBAAgB,GAAG;EAC1B0C,GAAG,EAAEA,GADqB;EAE1B5C,GAAG,EAAEF,IAFqB;EAG1BK,YAAY,EAAEF;AAHY,CAAvB;AAKP;AACA;AACA;AACA;;AACA,OAAO,IAAII,WAAW,GAAG;EACrBuC,GAAG,EAAEA,GADgB;EAErB5C,GAAG,EAAEF,IAFgB;EAGrBQ,EAAE,EAAEF,GAHiB;EAIrBhB,EAAE,EAAEA;AAJiB,CAAlB;AAMP;AACA;AACA;AACA;;AACA,OAAO,IAAIoB,KAAK,GAAG;EACfoC,GAAG,EAAEA,GADU;EAEf5C,GAAG,EAAEF,IAFU;EAGfQ,EAAE,EAAEF,GAHW;EAIfhB,EAAE,EAAEA,EAJW;EAKfqB,KAAK,EAAEF;AALQ,CAAZ;AAOP;AACA;AACA;AACA;;AACA,OAAO,IAAIO,QAAQ,GAAG;EAClB8B,GAAG,EAAEA,GADa;EAElB3F,MAAM,EAAE4D,OAFU;EAGlBG,OAAO,EAAED,QAHS;EAIlBG,WAAW,EAAED;AAJK,CAAf;AAMP;AACA;AACA;AACA;;AACA,OAAO,IAAIS,iBAAiB,GAAG;EAC3BkB,GAAG,EAAEA,GADsB;EAE3B3F,MAAM,EAAE4D,OAFmB;EAG3BG,OAAO,EAAED,QAHkB;EAI3BG,WAAW,EAAED,YAJc;EAK3BU,eAAe,EAAEF,gBALU;EAM3BI,gBAAgB,EAAED,iBANS;EAO3BG,oBAAoB,EAAED;AAPK,CAAxB;AASP;AACA;AACA;AACA;;AACA,OAAO,IAAIV,WAAW,GAAG;EACrBwB,GAAG,EAAEA,GADgB;EAErB5C,GAAG,EAAEF,IAFgB;EAGrB7C,MAAM,EAAE4D,OAHa;EAIrBG,OAAO,EAAED,QAJY;EAKrBG,WAAW,EAAED,YALQ;EAMrBI,QAAQ,EAAEF,SANW;EAOrBuB,QAAQ,EAAEA;AAPW,CAAlB;AASP;AACA;AACA;AACA;;AACA,OAAO,IAAIT,oBAAoB,GAAG;EAC9BW,GAAG,EAAEA,GADyB;EAE9B5C,GAAG,EAAEF,IAFyB;EAG9BK,YAAY,EAAEF,aAHgB;EAI9BhD,MAAM,EAAE4D,OAJsB;EAK9BG,OAAO,EAAED,QALqB;EAM9BG,WAAW,EAAED,YANiB;EAO9BI,QAAQ,EAAEF,SAPoB;EAQ9BuB,QAAQ,EAAEA,QARoB;EAS9Bf,eAAe,EAAEF,gBATa;EAU9BI,gBAAgB,EAAED,iBAVY;EAW9BG,oBAAoB,EAAED,qBAXQ;EAY9BI,iBAAiB,EAAEF;AAZW,CAA3B;AAcP;AACA;AACA;AACA;;AACA,OAAO,IAAIT,GAAG,GAAG;EACbqB,GAAG,EAAEA,GADQ;EAEb5C,GAAG,EAAEF,IAFQ;EAGb0B,GAAG,EAAEF;AAHQ,CAAV;AAKP;AACA;AACA;AACA;;AACA,OAAO,IAAIuB,OAAO,GAAG;EACjBD,GAAG,EAAEA,GADY;EAEjB5C,GAAG,EAAEF,IAFY;EAGjBc,MAAM,EAAEF,OAHS;EAIjBiC,OAAO,EAAEA;AAJQ,CAAd,C,CAMP;;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIG,qBAAqB,GAAG;EAC/BF,GAAG,EAAEA,GAD0B;EAE/BxD,EAAE,EAAEA,EAF2B;EAG/BY,GAAG,EAAEF,IAH0B;EAI/BK,YAAY,EAAEF,aAJiB;EAK/BK,EAAE,EAAEF,GAL2B;EAM/BK,KAAK,EAAEF,MANwB;EAO/BK,MAAM,EAAEF,OAPuB;EAQ/BiC,OAAO,EAAEA,OARsB;EAS/B1F,MAAM,EAAE4D,OATuB;EAU/BG,OAAO,EAAED,QAVsB;EAW/BG,WAAW,EAAED,YAXkB;EAY/BI,QAAQ,EAAEF,SAZqB;EAa/BuB,QAAQ,EAAEA,QAbqB;EAc/Bf,eAAe,EAAEF,gBAdc;EAe/BI,gBAAgB,EAAED,iBAfa;EAgB/BG,oBAAoB,EAAED,qBAhBS;EAiB/BI,iBAAiB,EAAEF,kBAjBY;EAkB/BR,GAAG,EAAEF;AAlB0B,CAA5B,C,CAoBP;AACA;AACA;;AACA;AACA;AACA;;AACA,OAAO,IAAIyB,EAAE,GACb,aACA3D,EAAE,CAAC,EAAD,CAFK;AAGP;AACA;AACA;;AACA,OAAO,IAAI4D,MAAM,GAAG,UAAUC,IAAV,EAAgB;EAAE,OAAOjD,GAAG,CAACzE,OAAO,CAAC0H,IAAD,CAAR,CAAV;AAA4B,CAA3D;AACP;AACA;AACA;;AACA,OAAO,IAAIC,IAAI,GAAG,UAAUD,IAAV,EAAgB5E,CAAhB,EAAmB;EACjC,OAAOoC,KAAK,CAAC,UAAUjC,CAAV,EAAa;IACtB,OAAOnD,IAAI,CAACgD,CAAC,CAACG,CAAD,CAAF,EAAOwB,GAAG,CAAC,UAAUmD,CAAV,EAAa;MAAE,OAAO7H,KAAK,CAACkD,CAAD,EAAIyE,IAAJ,EAAUE,CAAV,CAAZ;IAA2B,CAA3C,CAAV,CAAX;EACH,CAFW,CAAZ;AAGH,CAJM,C,CAKP;AACA;AACA;;AACA;AACA;AACA;;AACA,OAAO,IAAIC,GAAG,GAAG,UAAUH,IAAV,EAAgBI,EAAhB,EAAoB;EACjC,OAAO7H,IAAI,CAACwE,GAAG,CAAC,UAAUxB,CAAV,EAAa;IAAE,OAAO,UAAU2E,CAAV,EAAa;MAAE,OAAO7H,KAAK,CAACkD,CAAD,EAAIyE,IAAJ,EAAUE,CAAV,CAAZ;IAA2B,CAAjD;EAAoD,CAApE,CAAJ,EAA2E7C,EAAE,CAAC+C,EAAD,CAA7E,CAAX;AACH,CAFM"},"metadata":{},"sourceType":"module"}