{"ast":null,"code":"import buffer from 'buffer';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\n\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n\n  return extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nvar bn = createCommonjsModule(function (module) {\n  (function (module, exports) {\n    // Utils\n    function assert(val, msg) {\n      if (!val) throw new Error(msg || 'Assertion failed');\n    } // Could use `inherits` module, but don't want to move from single file\n    // architecture yet.\n\n\n    function inherits(ctor, superCtor) {\n      ctor.super_ = superCtor;\n\n      var TempCtor = function () {};\n\n      TempCtor.prototype = superCtor.prototype;\n      ctor.prototype = new TempCtor();\n      ctor.prototype.constructor = ctor;\n    } // BN\n\n\n    function BN(number, base, endian) {\n      if (BN.isBN(number)) {\n        return number;\n      }\n\n      this.negative = 0;\n      this.words = null;\n      this.length = 0; // Reduction context\n\n      this.red = null;\n\n      if (number !== null) {\n        if (base === 'le' || base === 'be') {\n          endian = base;\n          base = 10;\n        }\n\n        this._init(number || 0, base || 10, endian || 'be');\n      }\n    }\n\n    if (typeof module === 'object') {\n      module.exports = BN;\n    } else {\n      exports.BN = BN;\n    }\n\n    BN.BN = BN;\n    BN.wordSize = 26;\n    var Buffer;\n\n    try {\n      Buffer = buffer.Buffer;\n    } catch (e) {}\n\n    BN.isBN = function isBN(num) {\n      if (num instanceof BN) {\n        return true;\n      }\n\n      return num !== null && typeof num === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n    };\n\n    BN.max = function max(left, right) {\n      if (left.cmp(right) > 0) return left;\n      return right;\n    };\n\n    BN.min = function min(left, right) {\n      if (left.cmp(right) < 0) return left;\n      return right;\n    };\n\n    BN.prototype._init = function init(number, base, endian) {\n      if (typeof number === 'number') {\n        return this._initNumber(number, base, endian);\n      }\n\n      if (typeof number === 'object') {\n        return this._initArray(number, base, endian);\n      }\n\n      if (base === 'hex') {\n        base = 16;\n      }\n\n      assert(base === (base | 0) && base >= 2 && base <= 36);\n      number = number.toString().replace(/\\s+/g, '');\n      var start = 0;\n\n      if (number[0] === '-') {\n        start++;\n      }\n\n      if (base === 16) {\n        this._parseHex(number, start);\n      } else {\n        this._parseBase(number, base, start);\n      }\n\n      if (number[0] === '-') {\n        this.negative = 1;\n      }\n\n      this._strip();\n\n      if (endian !== 'le') return;\n\n      this._initArray(this.toArray(), base, endian);\n    };\n\n    BN.prototype._initNumber = function _initNumber(number, base, endian) {\n      if (number < 0) {\n        this.negative = 1;\n        number = -number;\n      }\n\n      if (number < 0x4000000) {\n        this.words = [number & 0x3ffffff];\n        this.length = 1;\n      } else if (number < 0x10000000000000) {\n        this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff];\n        this.length = 2;\n      } else {\n        assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n\n        this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff, 1];\n        this.length = 3;\n      }\n\n      if (endian !== 'le') return; // Reverse the bytes\n\n      this._initArray(this.toArray(), base, endian);\n    };\n\n    BN.prototype._initArray = function _initArray(number, base, endian) {\n      // Perhaps a Uint8Array\n      assert(typeof number.length === 'number');\n\n      if (number.length <= 0) {\n        this.words = [0];\n        this.length = 1;\n        return this;\n      }\n\n      this.length = Math.ceil(number.length / 3);\n      this.words = new Array(this.length);\n\n      for (var i = 0; i < this.length; i++) {\n        this.words[i] = 0;\n      }\n\n      var j, w;\n      var off = 0;\n\n      if (endian === 'be') {\n        for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n          w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;\n          this.words[j] |= w << off & 0x3ffffff;\n          this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n          off += 24;\n\n          if (off >= 26) {\n            off -= 26;\n            j++;\n          }\n        }\n      } else if (endian === 'le') {\n        for (i = 0, j = 0; i < number.length; i += 3) {\n          w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;\n          this.words[j] |= w << off & 0x3ffffff;\n          this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n          off += 24;\n\n          if (off >= 26) {\n            off -= 26;\n            j++;\n          }\n        }\n      }\n\n      return this._strip();\n    };\n\n    function parseHex(str, start, end) {\n      var r = 0;\n      var len = Math.min(str.length, end);\n      var z = 0;\n\n      for (var i = start; i < len; i++) {\n        var c = str.charCodeAt(i) - 48;\n        r <<= 4;\n        var b; // 'a' - 'f'\n\n        if (c >= 49 && c <= 54) {\n          b = c - 49 + 0xa; // 'A' - 'F'\n        } else if (c >= 17 && c <= 22) {\n          b = c - 17 + 0xa; // '0' - '9'\n        } else {\n          b = c;\n        }\n\n        r |= b;\n        z |= b;\n      }\n\n      assert(!(z & 0xf0), 'Invalid character in ' + str);\n      return r;\n    }\n\n    BN.prototype._parseHex = function _parseHex(number, start) {\n      // Create possibly bigger array to ensure that it fits the number\n      this.length = Math.ceil((number.length - start) / 6);\n      this.words = new Array(this.length);\n\n      for (var i = 0; i < this.length; i++) {\n        this.words[i] = 0;\n      }\n\n      var j, w; // Scan 24-bit chunks and add them to the number\n\n      var off = 0;\n\n      for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n        w = parseHex(number, i, i + 6);\n        this.words[j] |= w << off & 0x3ffffff; // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n\n        this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n\n      if (i + 6 !== start) {\n        w = parseHex(number, start, i + 6);\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n      }\n\n      this._strip();\n    };\n\n    function parseBase(str, start, end, mul) {\n      var r = 0;\n      var b = 0;\n      var len = Math.min(str.length, end);\n\n      for (var i = start; i < len; i++) {\n        var c = str.charCodeAt(i) - 48;\n        r *= mul; // 'a'\n\n        if (c >= 49) {\n          b = c - 49 + 0xa; // 'A'\n        } else if (c >= 17) {\n          b = c - 17 + 0xa; // '0' - '9'\n        } else {\n          b = c;\n        }\n\n        assert(c >= 0 && b < mul, 'Invalid character');\n        r += b;\n      }\n\n      return r;\n    }\n\n    BN.prototype._parseBase = function _parseBase(number, base, start) {\n      // Initialize as zero\n      this.words = [0];\n      this.length = 1; // Find length of limb in base\n\n      for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n        limbLen++;\n      }\n\n      limbLen--;\n      limbPow = limbPow / base | 0;\n      var total = number.length - start;\n      var mod = total % limbLen;\n      var end = Math.min(total, total - mod) + start;\n      var word = 0;\n\n      for (var i = start; i < end; i += limbLen) {\n        word = parseBase(number, i, i + limbLen, base);\n        this.imuln(limbPow);\n\n        if (this.words[0] + word < 0x4000000) {\n          this.words[0] += word;\n        } else {\n          this._iaddn(word);\n        }\n      }\n\n      if (mod !== 0) {\n        var pow = 1;\n        word = parseBase(number, i, number.length, base);\n\n        for (i = 0; i < mod; i++) {\n          pow *= base;\n        }\n\n        this.imuln(pow);\n\n        if (this.words[0] + word < 0x4000000) {\n          this.words[0] += word;\n        } else {\n          this._iaddn(word);\n        }\n      }\n    };\n\n    BN.prototype.copy = function copy(dest) {\n      dest.words = new Array(this.length);\n\n      for (var i = 0; i < this.length; i++) {\n        dest.words[i] = this.words[i];\n      }\n\n      dest.length = this.length;\n      dest.negative = this.negative;\n      dest.red = this.red;\n    };\n\n    function move(dest, src) {\n      dest.words = src.words;\n      dest.length = src.length;\n      dest.negative = src.negative;\n      dest.red = src.red;\n    }\n\n    BN.prototype._move = function _move(dest) {\n      move(dest, this);\n    };\n\n    BN.prototype.clone = function clone() {\n      var r = new BN(null);\n      this.copy(r);\n      return r;\n    };\n\n    BN.prototype._expand = function _expand(size) {\n      while (this.length < size) {\n        this.words[this.length++] = 0;\n      }\n\n      return this;\n    }; // Remove leading `0` from `this`\n\n\n    BN.prototype._strip = function strip() {\n      while (this.length > 1 && this.words[this.length - 1] === 0) {\n        this.length--;\n      }\n\n      return this._normSign();\n    };\n\n    BN.prototype._normSign = function _normSign() {\n      // -0 = 0\n      if (this.length === 1 && this.words[0] === 0) {\n        this.negative = 0;\n      }\n\n      return this;\n    }; // Check Symbol.for because not everywhere where Symbol defined\n    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n\n\n    if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } else {\n      BN.prototype.inspect = inspect;\n    }\n\n    function inspect() {\n      return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n    }\n    /*\n     var zeros = [];\n    var groupSizes = [];\n    var groupBases = [];\n     var s = '';\n    var i = -1;\n    while (++i < BN.wordSize) {\n      zeros[i] = s;\n      s += '0';\n    }\n    groupSizes[0] = 0;\n    groupSizes[1] = 0;\n    groupBases[0] = 0;\n    groupBases[1] = 0;\n    var base = 2 - 1;\n    while (++base < 36 + 1) {\n      var groupSize = 0;\n      var groupBase = 1;\n      while (groupBase < (1 << BN.wordSize) / base) {\n        groupBase *= base;\n        groupSize += 1;\n      }\n      groupSizes[base] = groupSize;\n      groupBases[base] = groupBase;\n    }\n     */\n\n\n    var zeros = ['', '0', '00', '000', '0000', '00000', '000000', '0000000', '00000000', '000000000', '0000000000', '00000000000', '000000000000', '0000000000000', '00000000000000', '000000000000000', '0000000000000000', '00000000000000000', '000000000000000000', '0000000000000000000', '00000000000000000000', '000000000000000000000', '0000000000000000000000', '00000000000000000000000', '000000000000000000000000', '0000000000000000000000000'];\n    var groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5];\n    var groupBases = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];\n\n    BN.prototype.toString = function toString(base, padding) {\n      base = base || 10;\n      padding = padding | 0 || 1;\n      var out;\n\n      if (base === 16 || base === 'hex') {\n        out = '';\n        var off = 0;\n        var carry = 0;\n\n        for (var i = 0; i < this.length; i++) {\n          var w = this.words[i];\n          var word = ((w << off | carry) & 0xffffff).toString(16);\n          carry = w >>> 24 - off & 0xffffff;\n\n          if (carry !== 0 || i !== this.length - 1) {\n            out = zeros[6 - word.length] + word + out;\n          } else {\n            out = word + out;\n          }\n\n          off += 2;\n\n          if (off >= 26) {\n            off -= 26;\n            i--;\n          }\n        }\n\n        if (carry !== 0) {\n          out = carry.toString(16) + out;\n        }\n\n        while (out.length % padding !== 0) {\n          out = '0' + out;\n        }\n\n        if (this.negative !== 0) {\n          out = '-' + out;\n        }\n\n        return out;\n      }\n\n      if (base === (base | 0) && base >= 2 && base <= 36) {\n        // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n        var groupSize = groupSizes[base]; // var groupBase = Math.pow(base, groupSize);\n\n        var groupBase = groupBases[base];\n        out = '';\n        var c = this.clone();\n        c.negative = 0;\n\n        while (!c.isZero()) {\n          var r = c.modrn(groupBase).toString(base);\n          c = c.idivn(groupBase);\n\n          if (!c.isZero()) {\n            out = zeros[groupSize - r.length] + r + out;\n          } else {\n            out = r + out;\n          }\n        }\n\n        if (this.isZero()) {\n          out = '0' + out;\n        }\n\n        while (out.length % padding !== 0) {\n          out = '0' + out;\n        }\n\n        if (this.negative !== 0) {\n          out = '-' + out;\n        }\n\n        return out;\n      }\n\n      assert(false, 'Base should be between 2 and 36');\n    };\n\n    BN.prototype.toNumber = function toNumber() {\n      var ret = this.words[0];\n\n      if (this.length === 2) {\n        ret += this.words[1] * 0x4000000;\n      } else if (this.length === 3 && this.words[2] === 0x01) {\n        // NOTE: at this stage it is known that the top bit is set\n        ret += 0x10000000000000 + this.words[1] * 0x4000000;\n      } else if (this.length > 2) {\n        assert(false, 'Number can only safely store up to 53 bits');\n      }\n\n      return this.negative !== 0 ? -ret : ret;\n    };\n\n    BN.prototype.toJSON = function toJSON() {\n      return this.toString(16, 2);\n    };\n\n    if (Buffer) {\n      BN.prototype.toBuffer = function toBuffer(endian, length) {\n        return this.toArrayLike(Buffer, endian, length);\n      };\n    }\n\n    BN.prototype.toArray = function toArray(endian, length) {\n      return this.toArrayLike(Array, endian, length);\n    };\n\n    var allocate = function allocate(ArrayType, size) {\n      if (ArrayType.allocUnsafe) {\n        return ArrayType.allocUnsafe(size);\n      }\n\n      return new ArrayType(size);\n    };\n\n    BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {\n      this._strip();\n\n      var byteLength = this.byteLength();\n      var reqLength = length || Math.max(1, byteLength);\n      assert(byteLength <= reqLength, 'byte array longer than desired length');\n      assert(reqLength > 0, 'Requested array length <= 0');\n      var res = allocate(ArrayType, reqLength);\n      var postfix = endian === 'le' ? 'LE' : 'BE';\n      this['_toArrayLike' + postfix](res, byteLength);\n      return res;\n    };\n\n    BN.prototype._toArrayLikeLE = function _toArrayLikeLE(res, byteLength) {\n      var position = 0;\n      var carry = 0;\n\n      for (var i = 0, shift = 0; i < this.length; i++) {\n        var word = this.words[i] << shift | carry;\n        res[position++] = word & 0xff;\n\n        if (position < res.length) {\n          res[position++] = word >> 8 & 0xff;\n        }\n\n        if (position < res.length) {\n          res[position++] = word >> 16 & 0xff;\n        }\n\n        if (shift === 6) {\n          if (position < res.length) {\n            res[position++] = word >> 24 & 0xff;\n          }\n\n          carry = 0;\n          shift = 0;\n        } else {\n          carry = word >>> 24;\n          shift += 2;\n        }\n      }\n\n      if (position < res.length) {\n        res[position++] = carry;\n\n        while (position < res.length) {\n          res[position++] = 0;\n        }\n      }\n    };\n\n    BN.prototype._toArrayLikeBE = function _toArrayLikeBE(res, byteLength) {\n      var position = res.length - 1;\n      var carry = 0;\n\n      for (var i = 0, shift = 0; i < this.length; i++) {\n        var word = this.words[i] << shift | carry;\n        res[position--] = word & 0xff;\n\n        if (position >= 0) {\n          res[position--] = word >> 8 & 0xff;\n        }\n\n        if (position >= 0) {\n          res[position--] = word >> 16 & 0xff;\n        }\n\n        if (shift === 6) {\n          if (position >= 0) {\n            res[position--] = word >> 24 & 0xff;\n          }\n\n          carry = 0;\n          shift = 0;\n        } else {\n          carry = word >>> 24;\n          shift += 2;\n        }\n      }\n\n      if (position >= 0) {\n        res[position--] = carry;\n\n        while (position >= 0) {\n          res[position--] = 0;\n        }\n      }\n    };\n\n    if (Math.clz32) {\n      BN.prototype._countBits = function _countBits(w) {\n        return 32 - Math.clz32(w);\n      };\n    } else {\n      BN.prototype._countBits = function _countBits(w) {\n        var t = w;\n        var r = 0;\n\n        if (t >= 0x1000) {\n          r += 13;\n          t >>>= 13;\n        }\n\n        if (t >= 0x40) {\n          r += 7;\n          t >>>= 7;\n        }\n\n        if (t >= 0x8) {\n          r += 4;\n          t >>>= 4;\n        }\n\n        if (t >= 0x02) {\n          r += 2;\n          t >>>= 2;\n        }\n\n        return r + t;\n      };\n    }\n\n    BN.prototype._zeroBits = function _zeroBits(w) {\n      // Short-cut\n      if (w === 0) return 26;\n      var t = w;\n      var r = 0;\n\n      if ((t & 0x1fff) === 0) {\n        r += 13;\n        t >>>= 13;\n      }\n\n      if ((t & 0x7f) === 0) {\n        r += 7;\n        t >>>= 7;\n      }\n\n      if ((t & 0xf) === 0) {\n        r += 4;\n        t >>>= 4;\n      }\n\n      if ((t & 0x3) === 0) {\n        r += 2;\n        t >>>= 2;\n      }\n\n      if ((t & 0x1) === 0) {\n        r++;\n      }\n\n      return r;\n    }; // Return number of used bits in a BN\n\n\n    BN.prototype.bitLength = function bitLength() {\n      var w = this.words[this.length - 1];\n\n      var hi = this._countBits(w);\n\n      return (this.length - 1) * 26 + hi;\n    };\n\n    function toBitArray(num) {\n      var w = new Array(num.bitLength());\n\n      for (var bit = 0; bit < w.length; bit++) {\n        var off = bit / 26 | 0;\n        var wbit = bit % 26;\n        w[bit] = num.words[off] >>> wbit & 0x01;\n      }\n\n      return w;\n    } // Number of trailing zero bits\n\n\n    BN.prototype.zeroBits = function zeroBits() {\n      if (this.isZero()) return 0;\n      var r = 0;\n\n      for (var i = 0; i < this.length; i++) {\n        var b = this._zeroBits(this.words[i]);\n\n        r += b;\n        if (b !== 26) break;\n      }\n\n      return r;\n    };\n\n    BN.prototype.byteLength = function byteLength() {\n      return Math.ceil(this.bitLength() / 8);\n    };\n\n    BN.prototype.toTwos = function toTwos(width) {\n      if (this.negative !== 0) {\n        return this.abs().inotn(width).iaddn(1);\n      }\n\n      return this.clone();\n    };\n\n    BN.prototype.fromTwos = function fromTwos(width) {\n      if (this.testn(width - 1)) {\n        return this.notn(width).iaddn(1).ineg();\n      }\n\n      return this.clone();\n    };\n\n    BN.prototype.isNeg = function isNeg() {\n      return this.negative !== 0;\n    }; // Return negative clone of `this`\n\n\n    BN.prototype.neg = function neg() {\n      return this.clone().ineg();\n    };\n\n    BN.prototype.ineg = function ineg() {\n      if (!this.isZero()) {\n        this.negative ^= 1;\n      }\n\n      return this;\n    }; // Or `num` with `this` in-place\n\n\n    BN.prototype.iuor = function iuor(num) {\n      while (this.length < num.length) {\n        this.words[this.length++] = 0;\n      }\n\n      for (var i = 0; i < num.length; i++) {\n        this.words[i] = this.words[i] | num.words[i];\n      }\n\n      return this._strip();\n    };\n\n    BN.prototype.ior = function ior(num) {\n      assert((this.negative | num.negative) === 0);\n      return this.iuor(num);\n    }; // Or `num` with `this`\n\n\n    BN.prototype.or = function or(num) {\n      if (this.length > num.length) return this.clone().ior(num);\n      return num.clone().ior(this);\n    };\n\n    BN.prototype.uor = function uor(num) {\n      if (this.length > num.length) return this.clone().iuor(num);\n      return num.clone().iuor(this);\n    }; // And `num` with `this` in-place\n\n\n    BN.prototype.iuand = function iuand(num) {\n      // b = min-length(num, this)\n      var b;\n\n      if (this.length > num.length) {\n        b = num;\n      } else {\n        b = this;\n      }\n\n      for (var i = 0; i < b.length; i++) {\n        this.words[i] = this.words[i] & num.words[i];\n      }\n\n      this.length = b.length;\n      return this._strip();\n    };\n\n    BN.prototype.iand = function iand(num) {\n      assert((this.negative | num.negative) === 0);\n      return this.iuand(num);\n    }; // And `num` with `this`\n\n\n    BN.prototype.and = function and(num) {\n      if (this.length > num.length) return this.clone().iand(num);\n      return num.clone().iand(this);\n    };\n\n    BN.prototype.uand = function uand(num) {\n      if (this.length > num.length) return this.clone().iuand(num);\n      return num.clone().iuand(this);\n    }; // Xor `num` with `this` in-place\n\n\n    BN.prototype.iuxor = function iuxor(num) {\n      // a.length > b.length\n      var a;\n      var b;\n\n      if (this.length > num.length) {\n        a = this;\n        b = num;\n      } else {\n        a = num;\n        b = this;\n      }\n\n      for (var i = 0; i < b.length; i++) {\n        this.words[i] = a.words[i] ^ b.words[i];\n      }\n\n      if (this !== a) {\n        for (; i < a.length; i++) {\n          this.words[i] = a.words[i];\n        }\n      }\n\n      this.length = a.length;\n      return this._strip();\n    };\n\n    BN.prototype.ixor = function ixor(num) {\n      assert((this.negative | num.negative) === 0);\n      return this.iuxor(num);\n    }; // Xor `num` with `this`\n\n\n    BN.prototype.xor = function xor(num) {\n      if (this.length > num.length) return this.clone().ixor(num);\n      return num.clone().ixor(this);\n    };\n\n    BN.prototype.uxor = function uxor(num) {\n      if (this.length > num.length) return this.clone().iuxor(num);\n      return num.clone().iuxor(this);\n    }; // Not ``this`` with ``width`` bitwidth\n\n\n    BN.prototype.inotn = function inotn(width) {\n      assert(typeof width === 'number' && width >= 0);\n      var bytesNeeded = Math.ceil(width / 26) | 0;\n      var bitsLeft = width % 26; // Extend the buffer with leading zeroes\n\n      this._expand(bytesNeeded);\n\n      if (bitsLeft > 0) {\n        bytesNeeded--;\n      } // Handle complete words\n\n\n      for (var i = 0; i < bytesNeeded; i++) {\n        this.words[i] = ~this.words[i] & 0x3ffffff;\n      } // Handle the residue\n\n\n      if (bitsLeft > 0) {\n        this.words[i] = ~this.words[i] & 0x3ffffff >> 26 - bitsLeft;\n      } // And remove leading zeroes\n\n\n      return this._strip();\n    };\n\n    BN.prototype.notn = function notn(width) {\n      return this.clone().inotn(width);\n    }; // Set `bit` of `this`\n\n\n    BN.prototype.setn = function setn(bit, val) {\n      assert(typeof bit === 'number' && bit >= 0);\n      var off = bit / 26 | 0;\n      var wbit = bit % 26;\n\n      this._expand(off + 1);\n\n      if (val) {\n        this.words[off] = this.words[off] | 1 << wbit;\n      } else {\n        this.words[off] = this.words[off] & ~(1 << wbit);\n      }\n\n      return this._strip();\n    }; // Add `num` to `this` in-place\n\n\n    BN.prototype.iadd = function iadd(num) {\n      var r; // negative + positive\n\n      if (this.negative !== 0 && num.negative === 0) {\n        this.negative = 0;\n        r = this.isub(num);\n        this.negative ^= 1;\n        return this._normSign(); // positive + negative\n      } else if (this.negative === 0 && num.negative !== 0) {\n        num.negative = 0;\n        r = this.isub(num);\n        num.negative = 1;\n        return r._normSign();\n      } // a.length > b.length\n\n\n      var a, b;\n\n      if (this.length > num.length) {\n        a = this;\n        b = num;\n      } else {\n        a = num;\n        b = this;\n      }\n\n      var carry = 0;\n\n      for (var i = 0; i < b.length; i++) {\n        r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n        this.words[i] = r & 0x3ffffff;\n        carry = r >>> 26;\n      }\n\n      for (; carry !== 0 && i < a.length; i++) {\n        r = (a.words[i] | 0) + carry;\n        this.words[i] = r & 0x3ffffff;\n        carry = r >>> 26;\n      }\n\n      this.length = a.length;\n\n      if (carry !== 0) {\n        this.words[this.length] = carry;\n        this.length++; // Copy the rest of the words\n      } else if (a !== this) {\n        for (; i < a.length; i++) {\n          this.words[i] = a.words[i];\n        }\n      }\n\n      return this;\n    }; // Add `num` to `this`\n\n\n    BN.prototype.add = function add(num) {\n      var res;\n\n      if (num.negative !== 0 && this.negative === 0) {\n        num.negative = 0;\n        res = this.sub(num);\n        num.negative ^= 1;\n        return res;\n      } else if (num.negative === 0 && this.negative !== 0) {\n        this.negative = 0;\n        res = num.sub(this);\n        this.negative = 1;\n        return res;\n      }\n\n      if (this.length > num.length) return this.clone().iadd(num);\n      return num.clone().iadd(this);\n    }; // Subtract `num` from `this` in-place\n\n\n    BN.prototype.isub = function isub(num) {\n      // this - (-num) = this + num\n      if (num.negative !== 0) {\n        num.negative = 0;\n        var r = this.iadd(num);\n        num.negative = 1;\n        return r._normSign(); // -this - num = -(this + num)\n      } else if (this.negative !== 0) {\n        this.negative = 0;\n        this.iadd(num);\n        this.negative = 1;\n        return this._normSign();\n      } // At this point both numbers are positive\n\n\n      var cmp = this.cmp(num); // Optimization - zeroify\n\n      if (cmp === 0) {\n        this.negative = 0;\n        this.length = 1;\n        this.words[0] = 0;\n        return this;\n      } // a > b\n\n\n      var a, b;\n\n      if (cmp > 0) {\n        a = this;\n        b = num;\n      } else {\n        a = num;\n        b = this;\n      }\n\n      var carry = 0;\n\n      for (var i = 0; i < b.length; i++) {\n        r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n        carry = r >> 26;\n        this.words[i] = r & 0x3ffffff;\n      }\n\n      for (; carry !== 0 && i < a.length; i++) {\n        r = (a.words[i] | 0) + carry;\n        carry = r >> 26;\n        this.words[i] = r & 0x3ffffff;\n      } // Copy rest of the words\n\n\n      if (carry === 0 && i < a.length && a !== this) {\n        for (; i < a.length; i++) {\n          this.words[i] = a.words[i];\n        }\n      }\n\n      this.length = Math.max(this.length, i);\n\n      if (a !== this) {\n        this.negative = 1;\n      }\n\n      return this._strip();\n    }; // Subtract `num` from `this`\n\n\n    BN.prototype.sub = function sub(num) {\n      return this.clone().isub(num);\n    };\n\n    function smallMulTo(self, num, out) {\n      out.negative = num.negative ^ self.negative;\n      var len = self.length + num.length | 0;\n      out.length = len;\n      len = len - 1 | 0; // Peel one iteration (compiler can't do it, because of code complexity)\n\n      var a = self.words[0] | 0;\n      var b = num.words[0] | 0;\n      var r = a * b;\n      var lo = r & 0x3ffffff;\n      var carry = r / 0x4000000 | 0;\n      out.words[0] = lo;\n\n      for (var k = 1; k < len; k++) {\n        // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n        // note that ncarry could be >= 0x3ffffff\n        var ncarry = carry >>> 26;\n        var rword = carry & 0x3ffffff;\n        var maxJ = Math.min(k, num.length - 1);\n\n        for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n          var i = k - j | 0;\n          a = self.words[i] | 0;\n          b = num.words[j] | 0;\n          r = a * b + rword;\n          ncarry += r / 0x4000000 | 0;\n          rword = r & 0x3ffffff;\n        }\n\n        out.words[k] = rword | 0;\n        carry = ncarry | 0;\n      }\n\n      if (carry !== 0) {\n        out.words[k] = carry | 0;\n      } else {\n        out.length--;\n      }\n\n      return out._strip();\n    } // TODO(indutny): it may be reasonable to omit it for users who don't need\n    // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n    // multiplication (like elliptic secp256k1).\n\n\n    var comb10MulTo = function comb10MulTo(self, num, out) {\n      var a = self.words;\n      var b = num.words;\n      var o = out.words;\n      var c = 0;\n      var lo;\n      var mid;\n      var hi;\n      var a0 = a[0] | 0;\n      var al0 = a0 & 0x1fff;\n      var ah0 = a0 >>> 13;\n      var a1 = a[1] | 0;\n      var al1 = a1 & 0x1fff;\n      var ah1 = a1 >>> 13;\n      var a2 = a[2] | 0;\n      var al2 = a2 & 0x1fff;\n      var ah2 = a2 >>> 13;\n      var a3 = a[3] | 0;\n      var al3 = a3 & 0x1fff;\n      var ah3 = a3 >>> 13;\n      var a4 = a[4] | 0;\n      var al4 = a4 & 0x1fff;\n      var ah4 = a4 >>> 13;\n      var a5 = a[5] | 0;\n      var al5 = a5 & 0x1fff;\n      var ah5 = a5 >>> 13;\n      var a6 = a[6] | 0;\n      var al6 = a6 & 0x1fff;\n      var ah6 = a6 >>> 13;\n      var a7 = a[7] | 0;\n      var al7 = a7 & 0x1fff;\n      var ah7 = a7 >>> 13;\n      var a8 = a[8] | 0;\n      var al8 = a8 & 0x1fff;\n      var ah8 = a8 >>> 13;\n      var a9 = a[9] | 0;\n      var al9 = a9 & 0x1fff;\n      var ah9 = a9 >>> 13;\n      var b0 = b[0] | 0;\n      var bl0 = b0 & 0x1fff;\n      var bh0 = b0 >>> 13;\n      var b1 = b[1] | 0;\n      var bl1 = b1 & 0x1fff;\n      var bh1 = b1 >>> 13;\n      var b2 = b[2] | 0;\n      var bl2 = b2 & 0x1fff;\n      var bh2 = b2 >>> 13;\n      var b3 = b[3] | 0;\n      var bl3 = b3 & 0x1fff;\n      var bh3 = b3 >>> 13;\n      var b4 = b[4] | 0;\n      var bl4 = b4 & 0x1fff;\n      var bh4 = b4 >>> 13;\n      var b5 = b[5] | 0;\n      var bl5 = b5 & 0x1fff;\n      var bh5 = b5 >>> 13;\n      var b6 = b[6] | 0;\n      var bl6 = b6 & 0x1fff;\n      var bh6 = b6 >>> 13;\n      var b7 = b[7] | 0;\n      var bl7 = b7 & 0x1fff;\n      var bh7 = b7 >>> 13;\n      var b8 = b[8] | 0;\n      var bl8 = b8 & 0x1fff;\n      var bh8 = b8 >>> 13;\n      var b9 = b[9] | 0;\n      var bl9 = b9 & 0x1fff;\n      var bh9 = b9 >>> 13;\n      out.negative = self.negative ^ num.negative;\n      out.length = 19;\n      /* k = 0 */\n\n      lo = Math.imul(al0, bl0);\n      mid = Math.imul(al0, bh0);\n      mid = mid + Math.imul(ah0, bl0) | 0;\n      hi = Math.imul(ah0, bh0);\n      var w0 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;\n      w0 &= 0x3ffffff;\n      /* k = 1 */\n\n      lo = Math.imul(al1, bl0);\n      mid = Math.imul(al1, bh0);\n      mid = mid + Math.imul(ah1, bl0) | 0;\n      hi = Math.imul(ah1, bh0);\n      lo = lo + Math.imul(al0, bl1) | 0;\n      mid = mid + Math.imul(al0, bh1) | 0;\n      mid = mid + Math.imul(ah0, bl1) | 0;\n      hi = hi + Math.imul(ah0, bh1) | 0;\n      var w1 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;\n      w1 &= 0x3ffffff;\n      /* k = 2 */\n\n      lo = Math.imul(al2, bl0);\n      mid = Math.imul(al2, bh0);\n      mid = mid + Math.imul(ah2, bl0) | 0;\n      hi = Math.imul(ah2, bh0);\n      lo = lo + Math.imul(al1, bl1) | 0;\n      mid = mid + Math.imul(al1, bh1) | 0;\n      mid = mid + Math.imul(ah1, bl1) | 0;\n      hi = hi + Math.imul(ah1, bh1) | 0;\n      lo = lo + Math.imul(al0, bl2) | 0;\n      mid = mid + Math.imul(al0, bh2) | 0;\n      mid = mid + Math.imul(ah0, bl2) | 0;\n      hi = hi + Math.imul(ah0, bh2) | 0;\n      var w2 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;\n      w2 &= 0x3ffffff;\n      /* k = 3 */\n\n      lo = Math.imul(al3, bl0);\n      mid = Math.imul(al3, bh0);\n      mid = mid + Math.imul(ah3, bl0) | 0;\n      hi = Math.imul(ah3, bh0);\n      lo = lo + Math.imul(al2, bl1) | 0;\n      mid = mid + Math.imul(al2, bh1) | 0;\n      mid = mid + Math.imul(ah2, bl1) | 0;\n      hi = hi + Math.imul(ah2, bh1) | 0;\n      lo = lo + Math.imul(al1, bl2) | 0;\n      mid = mid + Math.imul(al1, bh2) | 0;\n      mid = mid + Math.imul(ah1, bl2) | 0;\n      hi = hi + Math.imul(ah1, bh2) | 0;\n      lo = lo + Math.imul(al0, bl3) | 0;\n      mid = mid + Math.imul(al0, bh3) | 0;\n      mid = mid + Math.imul(ah0, bl3) | 0;\n      hi = hi + Math.imul(ah0, bh3) | 0;\n      var w3 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;\n      w3 &= 0x3ffffff;\n      /* k = 4 */\n\n      lo = Math.imul(al4, bl0);\n      mid = Math.imul(al4, bh0);\n      mid = mid + Math.imul(ah4, bl0) | 0;\n      hi = Math.imul(ah4, bh0);\n      lo = lo + Math.imul(al3, bl1) | 0;\n      mid = mid + Math.imul(al3, bh1) | 0;\n      mid = mid + Math.imul(ah3, bl1) | 0;\n      hi = hi + Math.imul(ah3, bh1) | 0;\n      lo = lo + Math.imul(al2, bl2) | 0;\n      mid = mid + Math.imul(al2, bh2) | 0;\n      mid = mid + Math.imul(ah2, bl2) | 0;\n      hi = hi + Math.imul(ah2, bh2) | 0;\n      lo = lo + Math.imul(al1, bl3) | 0;\n      mid = mid + Math.imul(al1, bh3) | 0;\n      mid = mid + Math.imul(ah1, bl3) | 0;\n      hi = hi + Math.imul(ah1, bh3) | 0;\n      lo = lo + Math.imul(al0, bl4) | 0;\n      mid = mid + Math.imul(al0, bh4) | 0;\n      mid = mid + Math.imul(ah0, bl4) | 0;\n      hi = hi + Math.imul(ah0, bh4) | 0;\n      var w4 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;\n      w4 &= 0x3ffffff;\n      /* k = 5 */\n\n      lo = Math.imul(al5, bl0);\n      mid = Math.imul(al5, bh0);\n      mid = mid + Math.imul(ah5, bl0) | 0;\n      hi = Math.imul(ah5, bh0);\n      lo = lo + Math.imul(al4, bl1) | 0;\n      mid = mid + Math.imul(al4, bh1) | 0;\n      mid = mid + Math.imul(ah4, bl1) | 0;\n      hi = hi + Math.imul(ah4, bh1) | 0;\n      lo = lo + Math.imul(al3, bl2) | 0;\n      mid = mid + Math.imul(al3, bh2) | 0;\n      mid = mid + Math.imul(ah3, bl2) | 0;\n      hi = hi + Math.imul(ah3, bh2) | 0;\n      lo = lo + Math.imul(al2, bl3) | 0;\n      mid = mid + Math.imul(al2, bh3) | 0;\n      mid = mid + Math.imul(ah2, bl3) | 0;\n      hi = hi + Math.imul(ah2, bh3) | 0;\n      lo = lo + Math.imul(al1, bl4) | 0;\n      mid = mid + Math.imul(al1, bh4) | 0;\n      mid = mid + Math.imul(ah1, bl4) | 0;\n      hi = hi + Math.imul(ah1, bh4) | 0;\n      lo = lo + Math.imul(al0, bl5) | 0;\n      mid = mid + Math.imul(al0, bh5) | 0;\n      mid = mid + Math.imul(ah0, bl5) | 0;\n      hi = hi + Math.imul(ah0, bh5) | 0;\n      var w5 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;\n      w5 &= 0x3ffffff;\n      /* k = 6 */\n\n      lo = Math.imul(al6, bl0);\n      mid = Math.imul(al6, bh0);\n      mid = mid + Math.imul(ah6, bl0) | 0;\n      hi = Math.imul(ah6, bh0);\n      lo = lo + Math.imul(al5, bl1) | 0;\n      mid = mid + Math.imul(al5, bh1) | 0;\n      mid = mid + Math.imul(ah5, bl1) | 0;\n      hi = hi + Math.imul(ah5, bh1) | 0;\n      lo = lo + Math.imul(al4, bl2) | 0;\n      mid = mid + Math.imul(al4, bh2) | 0;\n      mid = mid + Math.imul(ah4, bl2) | 0;\n      hi = hi + Math.imul(ah4, bh2) | 0;\n      lo = lo + Math.imul(al3, bl3) | 0;\n      mid = mid + Math.imul(al3, bh3) | 0;\n      mid = mid + Math.imul(ah3, bl3) | 0;\n      hi = hi + Math.imul(ah3, bh3) | 0;\n      lo = lo + Math.imul(al2, bl4) | 0;\n      mid = mid + Math.imul(al2, bh4) | 0;\n      mid = mid + Math.imul(ah2, bl4) | 0;\n      hi = hi + Math.imul(ah2, bh4) | 0;\n      lo = lo + Math.imul(al1, bl5) | 0;\n      mid = mid + Math.imul(al1, bh5) | 0;\n      mid = mid + Math.imul(ah1, bl5) | 0;\n      hi = hi + Math.imul(ah1, bh5) | 0;\n      lo = lo + Math.imul(al0, bl6) | 0;\n      mid = mid + Math.imul(al0, bh6) | 0;\n      mid = mid + Math.imul(ah0, bl6) | 0;\n      hi = hi + Math.imul(ah0, bh6) | 0;\n      var w6 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;\n      w6 &= 0x3ffffff;\n      /* k = 7 */\n\n      lo = Math.imul(al7, bl0);\n      mid = Math.imul(al7, bh0);\n      mid = mid + Math.imul(ah7, bl0) | 0;\n      hi = Math.imul(ah7, bh0);\n      lo = lo + Math.imul(al6, bl1) | 0;\n      mid = mid + Math.imul(al6, bh1) | 0;\n      mid = mid + Math.imul(ah6, bl1) | 0;\n      hi = hi + Math.imul(ah6, bh1) | 0;\n      lo = lo + Math.imul(al5, bl2) | 0;\n      mid = mid + Math.imul(al5, bh2) | 0;\n      mid = mid + Math.imul(ah5, bl2) | 0;\n      hi = hi + Math.imul(ah5, bh2) | 0;\n      lo = lo + Math.imul(al4, bl3) | 0;\n      mid = mid + Math.imul(al4, bh3) | 0;\n      mid = mid + Math.imul(ah4, bl3) | 0;\n      hi = hi + Math.imul(ah4, bh3) | 0;\n      lo = lo + Math.imul(al3, bl4) | 0;\n      mid = mid + Math.imul(al3, bh4) | 0;\n      mid = mid + Math.imul(ah3, bl4) | 0;\n      hi = hi + Math.imul(ah3, bh4) | 0;\n      lo = lo + Math.imul(al2, bl5) | 0;\n      mid = mid + Math.imul(al2, bh5) | 0;\n      mid = mid + Math.imul(ah2, bl5) | 0;\n      hi = hi + Math.imul(ah2, bh5) | 0;\n      lo = lo + Math.imul(al1, bl6) | 0;\n      mid = mid + Math.imul(al1, bh6) | 0;\n      mid = mid + Math.imul(ah1, bl6) | 0;\n      hi = hi + Math.imul(ah1, bh6) | 0;\n      lo = lo + Math.imul(al0, bl7) | 0;\n      mid = mid + Math.imul(al0, bh7) | 0;\n      mid = mid + Math.imul(ah0, bl7) | 0;\n      hi = hi + Math.imul(ah0, bh7) | 0;\n      var w7 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;\n      w7 &= 0x3ffffff;\n      /* k = 8 */\n\n      lo = Math.imul(al8, bl0);\n      mid = Math.imul(al8, bh0);\n      mid = mid + Math.imul(ah8, bl0) | 0;\n      hi = Math.imul(ah8, bh0);\n      lo = lo + Math.imul(al7, bl1) | 0;\n      mid = mid + Math.imul(al7, bh1) | 0;\n      mid = mid + Math.imul(ah7, bl1) | 0;\n      hi = hi + Math.imul(ah7, bh1) | 0;\n      lo = lo + Math.imul(al6, bl2) | 0;\n      mid = mid + Math.imul(al6, bh2) | 0;\n      mid = mid + Math.imul(ah6, bl2) | 0;\n      hi = hi + Math.imul(ah6, bh2) | 0;\n      lo = lo + Math.imul(al5, bl3) | 0;\n      mid = mid + Math.imul(al5, bh3) | 0;\n      mid = mid + Math.imul(ah5, bl3) | 0;\n      hi = hi + Math.imul(ah5, bh3) | 0;\n      lo = lo + Math.imul(al4, bl4) | 0;\n      mid = mid + Math.imul(al4, bh4) | 0;\n      mid = mid + Math.imul(ah4, bl4) | 0;\n      hi = hi + Math.imul(ah4, bh4) | 0;\n      lo = lo + Math.imul(al3, bl5) | 0;\n      mid = mid + Math.imul(al3, bh5) | 0;\n      mid = mid + Math.imul(ah3, bl5) | 0;\n      hi = hi + Math.imul(ah3, bh5) | 0;\n      lo = lo + Math.imul(al2, bl6) | 0;\n      mid = mid + Math.imul(al2, bh6) | 0;\n      mid = mid + Math.imul(ah2, bl6) | 0;\n      hi = hi + Math.imul(ah2, bh6) | 0;\n      lo = lo + Math.imul(al1, bl7) | 0;\n      mid = mid + Math.imul(al1, bh7) | 0;\n      mid = mid + Math.imul(ah1, bl7) | 0;\n      hi = hi + Math.imul(ah1, bh7) | 0;\n      lo = lo + Math.imul(al0, bl8) | 0;\n      mid = mid + Math.imul(al0, bh8) | 0;\n      mid = mid + Math.imul(ah0, bl8) | 0;\n      hi = hi + Math.imul(ah0, bh8) | 0;\n      var w8 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;\n      w8 &= 0x3ffffff;\n      /* k = 9 */\n\n      lo = Math.imul(al9, bl0);\n      mid = Math.imul(al9, bh0);\n      mid = mid + Math.imul(ah9, bl0) | 0;\n      hi = Math.imul(ah9, bh0);\n      lo = lo + Math.imul(al8, bl1) | 0;\n      mid = mid + Math.imul(al8, bh1) | 0;\n      mid = mid + Math.imul(ah8, bl1) | 0;\n      hi = hi + Math.imul(ah8, bh1) | 0;\n      lo = lo + Math.imul(al7, bl2) | 0;\n      mid = mid + Math.imul(al7, bh2) | 0;\n      mid = mid + Math.imul(ah7, bl2) | 0;\n      hi = hi + Math.imul(ah7, bh2) | 0;\n      lo = lo + Math.imul(al6, bl3) | 0;\n      mid = mid + Math.imul(al6, bh3) | 0;\n      mid = mid + Math.imul(ah6, bl3) | 0;\n      hi = hi + Math.imul(ah6, bh3) | 0;\n      lo = lo + Math.imul(al5, bl4) | 0;\n      mid = mid + Math.imul(al5, bh4) | 0;\n      mid = mid + Math.imul(ah5, bl4) | 0;\n      hi = hi + Math.imul(ah5, bh4) | 0;\n      lo = lo + Math.imul(al4, bl5) | 0;\n      mid = mid + Math.imul(al4, bh5) | 0;\n      mid = mid + Math.imul(ah4, bl5) | 0;\n      hi = hi + Math.imul(ah4, bh5) | 0;\n      lo = lo + Math.imul(al3, bl6) | 0;\n      mid = mid + Math.imul(al3, bh6) | 0;\n      mid = mid + Math.imul(ah3, bl6) | 0;\n      hi = hi + Math.imul(ah3, bh6) | 0;\n      lo = lo + Math.imul(al2, bl7) | 0;\n      mid = mid + Math.imul(al2, bh7) | 0;\n      mid = mid + Math.imul(ah2, bl7) | 0;\n      hi = hi + Math.imul(ah2, bh7) | 0;\n      lo = lo + Math.imul(al1, bl8) | 0;\n      mid = mid + Math.imul(al1, bh8) | 0;\n      mid = mid + Math.imul(ah1, bl8) | 0;\n      hi = hi + Math.imul(ah1, bh8) | 0;\n      lo = lo + Math.imul(al0, bl9) | 0;\n      mid = mid + Math.imul(al0, bh9) | 0;\n      mid = mid + Math.imul(ah0, bl9) | 0;\n      hi = hi + Math.imul(ah0, bh9) | 0;\n      var w9 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;\n      w9 &= 0x3ffffff;\n      /* k = 10 */\n\n      lo = Math.imul(al9, bl1);\n      mid = Math.imul(al9, bh1);\n      mid = mid + Math.imul(ah9, bl1) | 0;\n      hi = Math.imul(ah9, bh1);\n      lo = lo + Math.imul(al8, bl2) | 0;\n      mid = mid + Math.imul(al8, bh2) | 0;\n      mid = mid + Math.imul(ah8, bl2) | 0;\n      hi = hi + Math.imul(ah8, bh2) | 0;\n      lo = lo + Math.imul(al7, bl3) | 0;\n      mid = mid + Math.imul(al7, bh3) | 0;\n      mid = mid + Math.imul(ah7, bl3) | 0;\n      hi = hi + Math.imul(ah7, bh3) | 0;\n      lo = lo + Math.imul(al6, bl4) | 0;\n      mid = mid + Math.imul(al6, bh4) | 0;\n      mid = mid + Math.imul(ah6, bl4) | 0;\n      hi = hi + Math.imul(ah6, bh4) | 0;\n      lo = lo + Math.imul(al5, bl5) | 0;\n      mid = mid + Math.imul(al5, bh5) | 0;\n      mid = mid + Math.imul(ah5, bl5) | 0;\n      hi = hi + Math.imul(ah5, bh5) | 0;\n      lo = lo + Math.imul(al4, bl6) | 0;\n      mid = mid + Math.imul(al4, bh6) | 0;\n      mid = mid + Math.imul(ah4, bl6) | 0;\n      hi = hi + Math.imul(ah4, bh6) | 0;\n      lo = lo + Math.imul(al3, bl7) | 0;\n      mid = mid + Math.imul(al3, bh7) | 0;\n      mid = mid + Math.imul(ah3, bl7) | 0;\n      hi = hi + Math.imul(ah3, bh7) | 0;\n      lo = lo + Math.imul(al2, bl8) | 0;\n      mid = mid + Math.imul(al2, bh8) | 0;\n      mid = mid + Math.imul(ah2, bl8) | 0;\n      hi = hi + Math.imul(ah2, bh8) | 0;\n      lo = lo + Math.imul(al1, bl9) | 0;\n      mid = mid + Math.imul(al1, bh9) | 0;\n      mid = mid + Math.imul(ah1, bl9) | 0;\n      hi = hi + Math.imul(ah1, bh9) | 0;\n      var w10 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;\n      w10 &= 0x3ffffff;\n      /* k = 11 */\n\n      lo = Math.imul(al9, bl2);\n      mid = Math.imul(al9, bh2);\n      mid = mid + Math.imul(ah9, bl2) | 0;\n      hi = Math.imul(ah9, bh2);\n      lo = lo + Math.imul(al8, bl3) | 0;\n      mid = mid + Math.imul(al8, bh3) | 0;\n      mid = mid + Math.imul(ah8, bl3) | 0;\n      hi = hi + Math.imul(ah8, bh3) | 0;\n      lo = lo + Math.imul(al7, bl4) | 0;\n      mid = mid + Math.imul(al7, bh4) | 0;\n      mid = mid + Math.imul(ah7, bl4) | 0;\n      hi = hi + Math.imul(ah7, bh4) | 0;\n      lo = lo + Math.imul(al6, bl5) | 0;\n      mid = mid + Math.imul(al6, bh5) | 0;\n      mid = mid + Math.imul(ah6, bl5) | 0;\n      hi = hi + Math.imul(ah6, bh5) | 0;\n      lo = lo + Math.imul(al5, bl6) | 0;\n      mid = mid + Math.imul(al5, bh6) | 0;\n      mid = mid + Math.imul(ah5, bl6) | 0;\n      hi = hi + Math.imul(ah5, bh6) | 0;\n      lo = lo + Math.imul(al4, bl7) | 0;\n      mid = mid + Math.imul(al4, bh7) | 0;\n      mid = mid + Math.imul(ah4, bl7) | 0;\n      hi = hi + Math.imul(ah4, bh7) | 0;\n      lo = lo + Math.imul(al3, bl8) | 0;\n      mid = mid + Math.imul(al3, bh8) | 0;\n      mid = mid + Math.imul(ah3, bl8) | 0;\n      hi = hi + Math.imul(ah3, bh8) | 0;\n      lo = lo + Math.imul(al2, bl9) | 0;\n      mid = mid + Math.imul(al2, bh9) | 0;\n      mid = mid + Math.imul(ah2, bl9) | 0;\n      hi = hi + Math.imul(ah2, bh9) | 0;\n      var w11 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;\n      w11 &= 0x3ffffff;\n      /* k = 12 */\n\n      lo = Math.imul(al9, bl3);\n      mid = Math.imul(al9, bh3);\n      mid = mid + Math.imul(ah9, bl3) | 0;\n      hi = Math.imul(ah9, bh3);\n      lo = lo + Math.imul(al8, bl4) | 0;\n      mid = mid + Math.imul(al8, bh4) | 0;\n      mid = mid + Math.imul(ah8, bl4) | 0;\n      hi = hi + Math.imul(ah8, bh4) | 0;\n      lo = lo + Math.imul(al7, bl5) | 0;\n      mid = mid + Math.imul(al7, bh5) | 0;\n      mid = mid + Math.imul(ah7, bl5) | 0;\n      hi = hi + Math.imul(ah7, bh5) | 0;\n      lo = lo + Math.imul(al6, bl6) | 0;\n      mid = mid + Math.imul(al6, bh6) | 0;\n      mid = mid + Math.imul(ah6, bl6) | 0;\n      hi = hi + Math.imul(ah6, bh6) | 0;\n      lo = lo + Math.imul(al5, bl7) | 0;\n      mid = mid + Math.imul(al5, bh7) | 0;\n      mid = mid + Math.imul(ah5, bl7) | 0;\n      hi = hi + Math.imul(ah5, bh7) | 0;\n      lo = lo + Math.imul(al4, bl8) | 0;\n      mid = mid + Math.imul(al4, bh8) | 0;\n      mid = mid + Math.imul(ah4, bl8) | 0;\n      hi = hi + Math.imul(ah4, bh8) | 0;\n      lo = lo + Math.imul(al3, bl9) | 0;\n      mid = mid + Math.imul(al3, bh9) | 0;\n      mid = mid + Math.imul(ah3, bl9) | 0;\n      hi = hi + Math.imul(ah3, bh9) | 0;\n      var w12 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;\n      w12 &= 0x3ffffff;\n      /* k = 13 */\n\n      lo = Math.imul(al9, bl4);\n      mid = Math.imul(al9, bh4);\n      mid = mid + Math.imul(ah9, bl4) | 0;\n      hi = Math.imul(ah9, bh4);\n      lo = lo + Math.imul(al8, bl5) | 0;\n      mid = mid + Math.imul(al8, bh5) | 0;\n      mid = mid + Math.imul(ah8, bl5) | 0;\n      hi = hi + Math.imul(ah8, bh5) | 0;\n      lo = lo + Math.imul(al7, bl6) | 0;\n      mid = mid + Math.imul(al7, bh6) | 0;\n      mid = mid + Math.imul(ah7, bl6) | 0;\n      hi = hi + Math.imul(ah7, bh6) | 0;\n      lo = lo + Math.imul(al6, bl7) | 0;\n      mid = mid + Math.imul(al6, bh7) | 0;\n      mid = mid + Math.imul(ah6, bl7) | 0;\n      hi = hi + Math.imul(ah6, bh7) | 0;\n      lo = lo + Math.imul(al5, bl8) | 0;\n      mid = mid + Math.imul(al5, bh8) | 0;\n      mid = mid + Math.imul(ah5, bl8) | 0;\n      hi = hi + Math.imul(ah5, bh8) | 0;\n      lo = lo + Math.imul(al4, bl9) | 0;\n      mid = mid + Math.imul(al4, bh9) | 0;\n      mid = mid + Math.imul(ah4, bl9) | 0;\n      hi = hi + Math.imul(ah4, bh9) | 0;\n      var w13 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;\n      w13 &= 0x3ffffff;\n      /* k = 14 */\n\n      lo = Math.imul(al9, bl5);\n      mid = Math.imul(al9, bh5);\n      mid = mid + Math.imul(ah9, bl5) | 0;\n      hi = Math.imul(ah9, bh5);\n      lo = lo + Math.imul(al8, bl6) | 0;\n      mid = mid + Math.imul(al8, bh6) | 0;\n      mid = mid + Math.imul(ah8, bl6) | 0;\n      hi = hi + Math.imul(ah8, bh6) | 0;\n      lo = lo + Math.imul(al7, bl7) | 0;\n      mid = mid + Math.imul(al7, bh7) | 0;\n      mid = mid + Math.imul(ah7, bl7) | 0;\n      hi = hi + Math.imul(ah7, bh7) | 0;\n      lo = lo + Math.imul(al6, bl8) | 0;\n      mid = mid + Math.imul(al6, bh8) | 0;\n      mid = mid + Math.imul(ah6, bl8) | 0;\n      hi = hi + Math.imul(ah6, bh8) | 0;\n      lo = lo + Math.imul(al5, bl9) | 0;\n      mid = mid + Math.imul(al5, bh9) | 0;\n      mid = mid + Math.imul(ah5, bl9) | 0;\n      hi = hi + Math.imul(ah5, bh9) | 0;\n      var w14 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;\n      w14 &= 0x3ffffff;\n      /* k = 15 */\n\n      lo = Math.imul(al9, bl6);\n      mid = Math.imul(al9, bh6);\n      mid = mid + Math.imul(ah9, bl6) | 0;\n      hi = Math.imul(ah9, bh6);\n      lo = lo + Math.imul(al8, bl7) | 0;\n      mid = mid + Math.imul(al8, bh7) | 0;\n      mid = mid + Math.imul(ah8, bl7) | 0;\n      hi = hi + Math.imul(ah8, bh7) | 0;\n      lo = lo + Math.imul(al7, bl8) | 0;\n      mid = mid + Math.imul(al7, bh8) | 0;\n      mid = mid + Math.imul(ah7, bl8) | 0;\n      hi = hi + Math.imul(ah7, bh8) | 0;\n      lo = lo + Math.imul(al6, bl9) | 0;\n      mid = mid + Math.imul(al6, bh9) | 0;\n      mid = mid + Math.imul(ah6, bl9) | 0;\n      hi = hi + Math.imul(ah6, bh9) | 0;\n      var w15 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;\n      w15 &= 0x3ffffff;\n      /* k = 16 */\n\n      lo = Math.imul(al9, bl7);\n      mid = Math.imul(al9, bh7);\n      mid = mid + Math.imul(ah9, bl7) | 0;\n      hi = Math.imul(ah9, bh7);\n      lo = lo + Math.imul(al8, bl8) | 0;\n      mid = mid + Math.imul(al8, bh8) | 0;\n      mid = mid + Math.imul(ah8, bl8) | 0;\n      hi = hi + Math.imul(ah8, bh8) | 0;\n      lo = lo + Math.imul(al7, bl9) | 0;\n      mid = mid + Math.imul(al7, bh9) | 0;\n      mid = mid + Math.imul(ah7, bl9) | 0;\n      hi = hi + Math.imul(ah7, bh9) | 0;\n      var w16 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;\n      w16 &= 0x3ffffff;\n      /* k = 17 */\n\n      lo = Math.imul(al9, bl8);\n      mid = Math.imul(al9, bh8);\n      mid = mid + Math.imul(ah9, bl8) | 0;\n      hi = Math.imul(ah9, bh8);\n      lo = lo + Math.imul(al8, bl9) | 0;\n      mid = mid + Math.imul(al8, bh9) | 0;\n      mid = mid + Math.imul(ah8, bl9) | 0;\n      hi = hi + Math.imul(ah8, bh9) | 0;\n      var w17 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;\n      w17 &= 0x3ffffff;\n      /* k = 18 */\n\n      lo = Math.imul(al9, bl9);\n      mid = Math.imul(al9, bh9);\n      mid = mid + Math.imul(ah9, bl9) | 0;\n      hi = Math.imul(ah9, bh9);\n      var w18 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;\n      w18 &= 0x3ffffff;\n      o[0] = w0;\n      o[1] = w1;\n      o[2] = w2;\n      o[3] = w3;\n      o[4] = w4;\n      o[5] = w5;\n      o[6] = w6;\n      o[7] = w7;\n      o[8] = w8;\n      o[9] = w9;\n      o[10] = w10;\n      o[11] = w11;\n      o[12] = w12;\n      o[13] = w13;\n      o[14] = w14;\n      o[15] = w15;\n      o[16] = w16;\n      o[17] = w17;\n      o[18] = w18;\n\n      if (c !== 0) {\n        o[19] = c;\n        out.length++;\n      }\n\n      return out;\n    }; // Polyfill comb\n\n\n    if (!Math.imul) {\n      comb10MulTo = smallMulTo;\n    }\n\n    function bigMulTo(self, num, out) {\n      out.negative = num.negative ^ self.negative;\n      out.length = self.length + num.length;\n      var carry = 0;\n      var hncarry = 0;\n\n      for (var k = 0; k < out.length - 1; k++) {\n        // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n        // note that ncarry could be >= 0x3ffffff\n        var ncarry = hncarry;\n        hncarry = 0;\n        var rword = carry & 0x3ffffff;\n        var maxJ = Math.min(k, num.length - 1);\n\n        for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n          var i = k - j;\n          var a = self.words[i] | 0;\n          var b = num.words[j] | 0;\n          var r = a * b;\n          var lo = r & 0x3ffffff;\n          ncarry = ncarry + (r / 0x4000000 | 0) | 0;\n          lo = lo + rword | 0;\n          rword = lo & 0x3ffffff;\n          ncarry = ncarry + (lo >>> 26) | 0;\n          hncarry += ncarry >>> 26;\n          ncarry &= 0x3ffffff;\n        }\n\n        out.words[k] = rword;\n        carry = ncarry;\n        ncarry = hncarry;\n      }\n\n      if (carry !== 0) {\n        out.words[k] = carry;\n      } else {\n        out.length--;\n      }\n\n      return out._strip();\n    }\n\n    function jumboMulTo(self, num, out) {\n      // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n      // var fftm = new FFTM();\n      // return fftm.mulp(self, num, out);\n      return bigMulTo(self, num, out);\n    }\n\n    BN.prototype.mulTo = function mulTo(num, out) {\n      var res;\n      var len = this.length + num.length;\n\n      if (this.length === 10 && num.length === 10) {\n        res = comb10MulTo(this, num, out);\n      } else if (len < 63) {\n        res = smallMulTo(this, num, out);\n      } else if (len < 1024) {\n        res = bigMulTo(this, num, out);\n      } else {\n        res = jumboMulTo(this, num, out);\n      }\n\n      return res;\n    }; // Multiply `this` by `num`\n\n\n    BN.prototype.mul = function mul(num) {\n      var out = new BN(null);\n      out.words = new Array(this.length + num.length);\n      return this.mulTo(num, out);\n    }; // Multiply employing FFT\n\n\n    BN.prototype.mulf = function mulf(num) {\n      var out = new BN(null);\n      out.words = new Array(this.length + num.length);\n      return jumboMulTo(this, num, out);\n    }; // In-place Multiplication\n\n\n    BN.prototype.imul = function imul(num) {\n      return this.clone().mulTo(num, this);\n    };\n\n    BN.prototype.imuln = function imuln(num) {\n      var isNegNum = num < 0;\n      if (isNegNum) num = -num;\n      assert(typeof num === 'number');\n      assert(num < 0x4000000); // Carry\n\n      var carry = 0;\n\n      for (var i = 0; i < this.length; i++) {\n        var w = (this.words[i] | 0) * num;\n        var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n        carry >>= 26;\n        carry += w / 0x4000000 | 0; // NOTE: lo is 27bit maximum\n\n        carry += lo >>> 26;\n        this.words[i] = lo & 0x3ffffff;\n      }\n\n      if (carry !== 0) {\n        this.words[i] = carry;\n        this.length++;\n      }\n\n      return isNegNum ? this.ineg() : this;\n    };\n\n    BN.prototype.muln = function muln(num) {\n      return this.clone().imuln(num);\n    }; // `this` * `this`\n\n\n    BN.prototype.sqr = function sqr() {\n      return this.mul(this);\n    }; // `this` * `this` in-place\n\n\n    BN.prototype.isqr = function isqr() {\n      return this.imul(this.clone());\n    }; // Math.pow(`this`, `num`)\n\n\n    BN.prototype.pow = function pow(num) {\n      var w = toBitArray(num);\n      if (w.length === 0) return new BN(1); // Skip leading zeroes\n\n      var res = this;\n\n      for (var i = 0; i < w.length; i++, res = res.sqr()) {\n        if (w[i] !== 0) break;\n      }\n\n      if (++i < w.length) {\n        for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n          if (w[i] === 0) continue;\n          res = res.mul(q);\n        }\n      }\n\n      return res;\n    }; // Shift-left in-place\n\n\n    BN.prototype.iushln = function iushln(bits) {\n      assert(typeof bits === 'number' && bits >= 0);\n      var r = bits % 26;\n      var s = (bits - r) / 26;\n      var carryMask = 0x3ffffff >>> 26 - r << 26 - r;\n      var i;\n\n      if (r !== 0) {\n        var carry = 0;\n\n        for (i = 0; i < this.length; i++) {\n          var newCarry = this.words[i] & carryMask;\n          var c = (this.words[i] | 0) - newCarry << r;\n          this.words[i] = c | carry;\n          carry = newCarry >>> 26 - r;\n        }\n\n        if (carry) {\n          this.words[i] = carry;\n          this.length++;\n        }\n      }\n\n      if (s !== 0) {\n        for (i = this.length - 1; i >= 0; i--) {\n          this.words[i + s] = this.words[i];\n        }\n\n        for (i = 0; i < s; i++) {\n          this.words[i] = 0;\n        }\n\n        this.length += s;\n      }\n\n      return this._strip();\n    };\n\n    BN.prototype.ishln = function ishln(bits) {\n      // TODO(indutny): implement me\n      assert(this.negative === 0);\n      return this.iushln(bits);\n    }; // Shift-right in-place\n    // NOTE: `hint` is a lowest bit before trailing zeroes\n    // NOTE: if `extended` is present - it will be filled with destroyed bits\n\n\n    BN.prototype.iushrn = function iushrn(bits, hint, extended) {\n      assert(typeof bits === 'number' && bits >= 0);\n      var h;\n\n      if (hint) {\n        h = (hint - hint % 26) / 26;\n      } else {\n        h = 0;\n      }\n\n      var r = bits % 26;\n      var s = Math.min((bits - r) / 26, this.length);\n      var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n      var maskedWords = extended;\n      h -= s;\n      h = Math.max(0, h); // Extended mode, copy masked part\n\n      if (maskedWords) {\n        for (var i = 0; i < s; i++) {\n          maskedWords.words[i] = this.words[i];\n        }\n\n        maskedWords.length = s;\n      }\n\n      if (s === 0) ;else if (this.length > s) {\n        this.length -= s;\n\n        for (i = 0; i < this.length; i++) {\n          this.words[i] = this.words[i + s];\n        }\n      } else {\n        this.words[0] = 0;\n        this.length = 1;\n      }\n      var carry = 0;\n\n      for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n        var word = this.words[i] | 0;\n        this.words[i] = carry << 26 - r | word >>> r;\n        carry = word & mask;\n      } // Push carried bits as a mask\n\n\n      if (maskedWords && carry !== 0) {\n        maskedWords.words[maskedWords.length++] = carry;\n      }\n\n      if (this.length === 0) {\n        this.words[0] = 0;\n        this.length = 1;\n      }\n\n      return this._strip();\n    };\n\n    BN.prototype.ishrn = function ishrn(bits, hint, extended) {\n      // TODO(indutny): implement me\n      assert(this.negative === 0);\n      return this.iushrn(bits, hint, extended);\n    }; // Shift-left\n\n\n    BN.prototype.shln = function shln(bits) {\n      return this.clone().ishln(bits);\n    };\n\n    BN.prototype.ushln = function ushln(bits) {\n      return this.clone().iushln(bits);\n    }; // Shift-right\n\n\n    BN.prototype.shrn = function shrn(bits) {\n      return this.clone().ishrn(bits);\n    };\n\n    BN.prototype.ushrn = function ushrn(bits) {\n      return this.clone().iushrn(bits);\n    }; // Test if n bit is set\n\n\n    BN.prototype.testn = function testn(bit) {\n      assert(typeof bit === 'number' && bit >= 0);\n      var r = bit % 26;\n      var s = (bit - r) / 26;\n      var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n      if (this.length <= s) return false; // Check bit and return\n\n      var w = this.words[s];\n      return !!(w & q);\n    }; // Return only lowers bits of number (in-place)\n\n\n    BN.prototype.imaskn = function imaskn(bits) {\n      assert(typeof bits === 'number' && bits >= 0);\n      var r = bits % 26;\n      var s = (bits - r) / 26;\n      assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n      if (this.length <= s) {\n        return this;\n      }\n\n      if (r !== 0) {\n        s++;\n      }\n\n      this.length = Math.min(s, this.length);\n\n      if (r !== 0) {\n        var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n        this.words[this.length - 1] &= mask;\n      }\n\n      return this._strip();\n    }; // Return only lowers bits of number\n\n\n    BN.prototype.maskn = function maskn(bits) {\n      return this.clone().imaskn(bits);\n    }; // Add plain number `num` to `this`\n\n\n    BN.prototype.iaddn = function iaddn(num) {\n      assert(typeof num === 'number');\n      assert(num < 0x4000000);\n      if (num < 0) return this.isubn(-num); // Possible sign change\n\n      if (this.negative !== 0) {\n        if (this.length === 1 && (this.words[0] | 0) <= num) {\n          this.words[0] = num - (this.words[0] | 0);\n          this.negative = 0;\n          return this;\n        }\n\n        this.negative = 0;\n        this.isubn(num);\n        this.negative = 1;\n        return this;\n      } // Add without checks\n\n\n      return this._iaddn(num);\n    };\n\n    BN.prototype._iaddn = function _iaddn(num) {\n      this.words[0] += num; // Carry\n\n      for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n        this.words[i] -= 0x4000000;\n\n        if (i === this.length - 1) {\n          this.words[i + 1] = 1;\n        } else {\n          this.words[i + 1]++;\n        }\n      }\n\n      this.length = Math.max(this.length, i + 1);\n      return this;\n    }; // Subtract plain number `num` from `this`\n\n\n    BN.prototype.isubn = function isubn(num) {\n      assert(typeof num === 'number');\n      assert(num < 0x4000000);\n      if (num < 0) return this.iaddn(-num);\n\n      if (this.negative !== 0) {\n        this.negative = 0;\n        this.iaddn(num);\n        this.negative = 1;\n        return this;\n      }\n\n      this.words[0] -= num;\n\n      if (this.length === 1 && this.words[0] < 0) {\n        this.words[0] = -this.words[0];\n        this.negative = 1;\n      } else {\n        // Carry\n        for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n          this.words[i] += 0x4000000;\n          this.words[i + 1] -= 1;\n        }\n      }\n\n      return this._strip();\n    };\n\n    BN.prototype.addn = function addn(num) {\n      return this.clone().iaddn(num);\n    };\n\n    BN.prototype.subn = function subn(num) {\n      return this.clone().isubn(num);\n    };\n\n    BN.prototype.iabs = function iabs() {\n      this.negative = 0;\n      return this;\n    };\n\n    BN.prototype.abs = function abs() {\n      return this.clone().iabs();\n    };\n\n    BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {\n      var len = num.length + shift;\n      var i;\n\n      this._expand(len);\n\n      var w;\n      var carry = 0;\n\n      for (i = 0; i < num.length; i++) {\n        w = (this.words[i + shift] | 0) + carry;\n        var right = (num.words[i] | 0) * mul;\n        w -= right & 0x3ffffff;\n        carry = (w >> 26) - (right / 0x4000000 | 0);\n        this.words[i + shift] = w & 0x3ffffff;\n      }\n\n      for (; i < this.length - shift; i++) {\n        w = (this.words[i + shift] | 0) + carry;\n        carry = w >> 26;\n        this.words[i + shift] = w & 0x3ffffff;\n      }\n\n      if (carry === 0) return this._strip(); // Subtraction overflow\n\n      assert(carry === -1);\n      carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        w = -(this.words[i] | 0) + carry;\n        carry = w >> 26;\n        this.words[i] = w & 0x3ffffff;\n      }\n\n      this.negative = 1;\n      return this._strip();\n    };\n\n    BN.prototype._wordDiv = function _wordDiv(num, mode) {\n      var shift = this.length - num.length;\n      var a = this.clone();\n      var b = num; // Normalize\n\n      var bhi = b.words[b.length - 1] | 0;\n\n      var bhiBits = this._countBits(bhi);\n\n      shift = 26 - bhiBits;\n\n      if (shift !== 0) {\n        b = b.ushln(shift);\n        a.iushln(shift);\n        bhi = b.words[b.length - 1] | 0;\n      } // Initialize quotient\n\n\n      var m = a.length - b.length;\n      var q;\n\n      if (mode !== 'mod') {\n        q = new BN(null);\n        q.length = m + 1;\n        q.words = new Array(q.length);\n\n        for (var i = 0; i < q.length; i++) {\n          q.words[i] = 0;\n        }\n      }\n\n      var diff = a.clone()._ishlnsubmul(b, 1, m);\n\n      if (diff.negative === 0) {\n        a = diff;\n\n        if (q) {\n          q.words[m] = 1;\n        }\n      }\n\n      for (var j = m - 1; j >= 0; j--) {\n        var qj = (a.words[b.length + j] | 0) * 0x4000000 + (a.words[b.length + j - 1] | 0); // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n        // (0x7ffffff)\n\n        qj = Math.min(qj / bhi | 0, 0x3ffffff);\n\n        a._ishlnsubmul(b, qj, j);\n\n        while (a.negative !== 0) {\n          qj--;\n          a.negative = 0;\n\n          a._ishlnsubmul(b, 1, j);\n\n          if (!a.isZero()) {\n            a.negative ^= 1;\n          }\n        }\n\n        if (q) {\n          q.words[j] = qj;\n        }\n      }\n\n      if (q) {\n        q._strip();\n      }\n\n      a._strip(); // Denormalize\n\n\n      if (mode !== 'div' && shift !== 0) {\n        a.iushrn(shift);\n      }\n\n      return {\n        div: q || null,\n        mod: a\n      };\n    }; // NOTE: 1) `mode` can be set to `mod` to request mod only,\n    //       to `div` to request div only, or be absent to\n    //       request both div & mod\n    //       2) `positive` is true if unsigned mod is requested\n\n\n    BN.prototype.divmod = function divmod(num, mode, positive) {\n      assert(!num.isZero());\n\n      if (this.isZero()) {\n        return {\n          div: new BN(0),\n          mod: new BN(0)\n        };\n      }\n\n      var div, mod, res;\n\n      if (this.negative !== 0 && num.negative === 0) {\n        res = this.neg().divmod(num, mode);\n\n        if (mode !== 'mod') {\n          div = res.div.neg();\n        }\n\n        if (mode !== 'div') {\n          mod = res.mod.neg();\n\n          if (positive && mod.negative !== 0) {\n            mod.iadd(num);\n          }\n        }\n\n        return {\n          div: div,\n          mod: mod\n        };\n      }\n\n      if (this.negative === 0 && num.negative !== 0) {\n        res = this.divmod(num.neg(), mode);\n\n        if (mode !== 'mod') {\n          div = res.div.neg();\n        }\n\n        return {\n          div: div,\n          mod: res.mod\n        };\n      }\n\n      if ((this.negative & num.negative) !== 0) {\n        res = this.neg().divmod(num.neg(), mode);\n\n        if (mode !== 'div') {\n          mod = res.mod.neg();\n\n          if (positive && mod.negative !== 0) {\n            mod.isub(num);\n          }\n        }\n\n        return {\n          div: res.div,\n          mod: mod\n        };\n      } // Both numbers are positive at this point\n      // Strip both numbers to approximate shift value\n\n\n      if (num.length > this.length || this.cmp(num) < 0) {\n        return {\n          div: new BN(0),\n          mod: this\n        };\n      } // Very short reduction\n\n\n      if (num.length === 1) {\n        if (mode === 'div') {\n          return {\n            div: this.divn(num.words[0]),\n            mod: null\n          };\n        }\n\n        if (mode === 'mod') {\n          return {\n            div: null,\n            mod: new BN(this.modrn(num.words[0]))\n          };\n        }\n\n        return {\n          div: this.divn(num.words[0]),\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return this._wordDiv(num, mode);\n    }; // Find `this` / `num`\n\n\n    BN.prototype.div = function div(num) {\n      return this.divmod(num, 'div', false).div;\n    }; // Find `this` % `num`\n\n\n    BN.prototype.mod = function mod(num) {\n      return this.divmod(num, 'mod', false).mod;\n    };\n\n    BN.prototype.umod = function umod(num) {\n      return this.divmod(num, 'mod', true).mod;\n    }; // Find Round(`this` / `num`)\n\n\n    BN.prototype.divRound = function divRound(num) {\n      var dm = this.divmod(num); // Fast case - exact division\n\n      if (dm.mod.isZero()) return dm.div;\n      var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n      var half = num.ushrn(1);\n      var r2 = num.andln(1);\n      var cmp = mod.cmp(half); // Round down\n\n      if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div; // Round up\n\n      return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n    };\n\n    BN.prototype.modrn = function modrn(num) {\n      var isNegNum = num < 0;\n      if (isNegNum) num = -num;\n      assert(num <= 0x3ffffff);\n      var p = (1 << 26) % num;\n      var acc = 0;\n\n      for (var i = this.length - 1; i >= 0; i--) {\n        acc = (p * acc + (this.words[i] | 0)) % num;\n      }\n\n      return isNegNum ? -acc : acc;\n    }; // WARNING: DEPRECATED\n\n\n    BN.prototype.modn = function modn(num) {\n      return this.modrn(num);\n    }; // In-place division by number\n\n\n    BN.prototype.idivn = function idivn(num) {\n      var isNegNum = num < 0;\n      if (isNegNum) num = -num;\n      assert(num <= 0x3ffffff);\n      var carry = 0;\n\n      for (var i = this.length - 1; i >= 0; i--) {\n        var w = (this.words[i] | 0) + carry * 0x4000000;\n        this.words[i] = w / num | 0;\n        carry = w % num;\n      }\n\n      this._strip();\n\n      return isNegNum ? this.ineg() : this;\n    };\n\n    BN.prototype.divn = function divn(num) {\n      return this.clone().idivn(num);\n    };\n\n    BN.prototype.egcd = function egcd(p) {\n      assert(p.negative === 0);\n      assert(!p.isZero());\n      var x = this;\n      var y = p.clone();\n\n      if (x.negative !== 0) {\n        x = x.umod(p);\n      } else {\n        x = x.clone();\n      } // A * x + B * y = x\n\n\n      var A = new BN(1);\n      var B = new BN(0); // C * x + D * y = y\n\n      var C = new BN(0);\n      var D = new BN(1);\n      var g = 0;\n\n      while (x.isEven() && y.isEven()) {\n        x.iushrn(1);\n        y.iushrn(1);\n        ++g;\n      }\n\n      var yp = y.clone();\n      var xp = x.clone();\n\n      while (!x.isZero()) {\n        for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n\n        if (i > 0) {\n          x.iushrn(i);\n\n          while (i-- > 0) {\n            if (A.isOdd() || B.isOdd()) {\n              A.iadd(yp);\n              B.isub(xp);\n            }\n\n            A.iushrn(1);\n            B.iushrn(1);\n          }\n        }\n\n        for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n\n        if (j > 0) {\n          y.iushrn(j);\n\n          while (j-- > 0) {\n            if (C.isOdd() || D.isOdd()) {\n              C.iadd(yp);\n              D.isub(xp);\n            }\n\n            C.iushrn(1);\n            D.iushrn(1);\n          }\n        }\n\n        if (x.cmp(y) >= 0) {\n          x.isub(y);\n          A.isub(C);\n          B.isub(D);\n        } else {\n          y.isub(x);\n          C.isub(A);\n          D.isub(B);\n        }\n      }\n\n      return {\n        a: C,\n        b: D,\n        gcd: y.iushln(g)\n      };\n    }; // This is reduced incarnation of the binary EEA\n    // above, designated to invert members of the\n    // _prime_ fields F(p) at a maximal speed\n\n\n    BN.prototype._invmp = function _invmp(p) {\n      assert(p.negative === 0);\n      assert(!p.isZero());\n      var a = this;\n      var b = p.clone();\n\n      if (a.negative !== 0) {\n        a = a.umod(p);\n      } else {\n        a = a.clone();\n      }\n\n      var x1 = new BN(1);\n      var x2 = new BN(0);\n      var delta = b.clone();\n\n      while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n        for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n\n        if (i > 0) {\n          a.iushrn(i);\n\n          while (i-- > 0) {\n            if (x1.isOdd()) {\n              x1.iadd(delta);\n            }\n\n            x1.iushrn(1);\n          }\n        }\n\n        for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n\n        if (j > 0) {\n          b.iushrn(j);\n\n          while (j-- > 0) {\n            if (x2.isOdd()) {\n              x2.iadd(delta);\n            }\n\n            x2.iushrn(1);\n          }\n        }\n\n        if (a.cmp(b) >= 0) {\n          a.isub(b);\n          x1.isub(x2);\n        } else {\n          b.isub(a);\n          x2.isub(x1);\n        }\n      }\n\n      var res;\n\n      if (a.cmpn(1) === 0) {\n        res = x1;\n      } else {\n        res = x2;\n      }\n\n      if (res.cmpn(0) < 0) {\n        res.iadd(p);\n      }\n\n      return res;\n    };\n\n    BN.prototype.gcd = function gcd(num) {\n      if (this.isZero()) return num.abs();\n      if (num.isZero()) return this.abs();\n      var a = this.clone();\n      var b = num.clone();\n      a.negative = 0;\n      b.negative = 0; // Remove common factor of two\n\n      for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n        a.iushrn(1);\n        b.iushrn(1);\n      }\n\n      do {\n        while (a.isEven()) {\n          a.iushrn(1);\n        }\n\n        while (b.isEven()) {\n          b.iushrn(1);\n        }\n\n        var r = a.cmp(b);\n\n        if (r < 0) {\n          // Swap `a` and `b` to make `a` always bigger than `b`\n          var t = a;\n          a = b;\n          b = t;\n        } else if (r === 0 || b.cmpn(1) === 0) {\n          break;\n        }\n\n        a.isub(b);\n      } while (true);\n\n      return b.iushln(shift);\n    }; // Invert number in the field F(num)\n\n\n    BN.prototype.invm = function invm(num) {\n      return this.egcd(num).a.umod(num);\n    };\n\n    BN.prototype.isEven = function isEven() {\n      return (this.words[0] & 1) === 0;\n    };\n\n    BN.prototype.isOdd = function isOdd() {\n      return (this.words[0] & 1) === 1;\n    }; // And first word and num\n\n\n    BN.prototype.andln = function andln(num) {\n      return this.words[0] & num;\n    }; // Increment at the bit position in-line\n\n\n    BN.prototype.bincn = function bincn(bit) {\n      assert(typeof bit === 'number');\n      var r = bit % 26;\n      var s = (bit - r) / 26;\n      var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n      if (this.length <= s) {\n        this._expand(s + 1);\n\n        this.words[s] |= q;\n        return this;\n      } // Add bit and propagate, if needed\n\n\n      var carry = q;\n\n      for (var i = s; carry !== 0 && i < this.length; i++) {\n        var w = this.words[i] | 0;\n        w += carry;\n        carry = w >>> 26;\n        w &= 0x3ffffff;\n        this.words[i] = w;\n      }\n\n      if (carry !== 0) {\n        this.words[i] = carry;\n        this.length++;\n      }\n\n      return this;\n    };\n\n    BN.prototype.isZero = function isZero() {\n      return this.length === 1 && this.words[0] === 0;\n    };\n\n    BN.prototype.cmpn = function cmpn(num) {\n      var negative = num < 0;\n      if (this.negative !== 0 && !negative) return -1;\n      if (this.negative === 0 && negative) return 1;\n\n      this._strip();\n\n      var res;\n\n      if (this.length > 1) {\n        res = 1;\n      } else {\n        if (negative) {\n          num = -num;\n        }\n\n        assert(num <= 0x3ffffff, 'Number is too big');\n        var w = this.words[0] | 0;\n        res = w === num ? 0 : w < num ? -1 : 1;\n      }\n\n      if (this.negative !== 0) return -res | 0;\n      return res;\n    }; // Compare two numbers and return:\n    // 1 - if `this` > `num`\n    // 0 - if `this` == `num`\n    // -1 - if `this` < `num`\n\n\n    BN.prototype.cmp = function cmp(num) {\n      if (this.negative !== 0 && num.negative === 0) return -1;\n      if (this.negative === 0 && num.negative !== 0) return 1;\n      var res = this.ucmp(num);\n      if (this.negative !== 0) return -res | 0;\n      return res;\n    }; // Unsigned comparison\n\n\n    BN.prototype.ucmp = function ucmp(num) {\n      // At this point both numbers have the same sign\n      if (this.length > num.length) return 1;\n      if (this.length < num.length) return -1;\n      var res = 0;\n\n      for (var i = this.length - 1; i >= 0; i--) {\n        var a = this.words[i] | 0;\n        var b = num.words[i] | 0;\n        if (a === b) continue;\n\n        if (a < b) {\n          res = -1;\n        } else if (a > b) {\n          res = 1;\n        }\n\n        break;\n      }\n\n      return res;\n    };\n\n    BN.prototype.gtn = function gtn(num) {\n      return this.cmpn(num) === 1;\n    };\n\n    BN.prototype.gt = function gt(num) {\n      return this.cmp(num) === 1;\n    };\n\n    BN.prototype.gten = function gten(num) {\n      return this.cmpn(num) >= 0;\n    };\n\n    BN.prototype.gte = function gte(num) {\n      return this.cmp(num) >= 0;\n    };\n\n    BN.prototype.ltn = function ltn(num) {\n      return this.cmpn(num) === -1;\n    };\n\n    BN.prototype.lt = function lt(num) {\n      return this.cmp(num) === -1;\n    };\n\n    BN.prototype.lten = function lten(num) {\n      return this.cmpn(num) <= 0;\n    };\n\n    BN.prototype.lte = function lte(num) {\n      return this.cmp(num) <= 0;\n    };\n\n    BN.prototype.eqn = function eqn(num) {\n      return this.cmpn(num) === 0;\n    };\n\n    BN.prototype.eq = function eq(num) {\n      return this.cmp(num) === 0;\n    }; //\n    // A reduce context, could be using montgomery or something better, depending\n    // on the `m` itself.\n    //\n\n\n    BN.red = function red(num) {\n      return new Red(num);\n    };\n\n    BN.prototype.toRed = function toRed(ctx) {\n      assert(!this.red, 'Already a number in reduction context');\n      assert(this.negative === 0, 'red works only with positives');\n      return ctx.convertTo(this)._forceRed(ctx);\n    };\n\n    BN.prototype.fromRed = function fromRed() {\n      assert(this.red, 'fromRed works only with numbers in reduction context');\n      return this.red.convertFrom(this);\n    };\n\n    BN.prototype._forceRed = function _forceRed(ctx) {\n      this.red = ctx;\n      return this;\n    };\n\n    BN.prototype.forceRed = function forceRed(ctx) {\n      assert(!this.red, 'Already a number in reduction context');\n      return this._forceRed(ctx);\n    };\n\n    BN.prototype.redAdd = function redAdd(num) {\n      assert(this.red, 'redAdd works only with red numbers');\n      return this.red.add(this, num);\n    };\n\n    BN.prototype.redIAdd = function redIAdd(num) {\n      assert(this.red, 'redIAdd works only with red numbers');\n      return this.red.iadd(this, num);\n    };\n\n    BN.prototype.redSub = function redSub(num) {\n      assert(this.red, 'redSub works only with red numbers');\n      return this.red.sub(this, num);\n    };\n\n    BN.prototype.redISub = function redISub(num) {\n      assert(this.red, 'redISub works only with red numbers');\n      return this.red.isub(this, num);\n    };\n\n    BN.prototype.redShl = function redShl(num) {\n      assert(this.red, 'redShl works only with red numbers');\n      return this.red.shl(this, num);\n    };\n\n    BN.prototype.redMul = function redMul(num) {\n      assert(this.red, 'redMul works only with red numbers');\n\n      this.red._verify2(this, num);\n\n      return this.red.mul(this, num);\n    };\n\n    BN.prototype.redIMul = function redIMul(num) {\n      assert(this.red, 'redMul works only with red numbers');\n\n      this.red._verify2(this, num);\n\n      return this.red.imul(this, num);\n    };\n\n    BN.prototype.redSqr = function redSqr() {\n      assert(this.red, 'redSqr works only with red numbers');\n\n      this.red._verify1(this);\n\n      return this.red.sqr(this);\n    };\n\n    BN.prototype.redISqr = function redISqr() {\n      assert(this.red, 'redISqr works only with red numbers');\n\n      this.red._verify1(this);\n\n      return this.red.isqr(this);\n    }; // Square root over p\n\n\n    BN.prototype.redSqrt = function redSqrt() {\n      assert(this.red, 'redSqrt works only with red numbers');\n\n      this.red._verify1(this);\n\n      return this.red.sqrt(this);\n    };\n\n    BN.prototype.redInvm = function redInvm() {\n      assert(this.red, 'redInvm works only with red numbers');\n\n      this.red._verify1(this);\n\n      return this.red.invm(this);\n    }; // Return negative clone of `this` % `red modulo`\n\n\n    BN.prototype.redNeg = function redNeg() {\n      assert(this.red, 'redNeg works only with red numbers');\n\n      this.red._verify1(this);\n\n      return this.red.neg(this);\n    };\n\n    BN.prototype.redPow = function redPow(num) {\n      assert(this.red && !num.red, 'redPow(normalNum)');\n\n      this.red._verify1(this);\n\n      return this.red.pow(this, num);\n    }; // Prime numbers with efficient reduction\n\n\n    var primes = {\n      k256: null,\n      p224: null,\n      p192: null,\n      p25519: null\n    }; // Pseudo-Mersenne prime\n\n    function MPrime(name, p) {\n      // P = 2 ^ N - K\n      this.name = name;\n      this.p = new BN(p, 16);\n      this.n = this.p.bitLength();\n      this.k = new BN(1).iushln(this.n).isub(this.p);\n      this.tmp = this._tmp();\n    }\n\n    MPrime.prototype._tmp = function _tmp() {\n      var tmp = new BN(null);\n      tmp.words = new Array(Math.ceil(this.n / 13));\n      return tmp;\n    };\n\n    MPrime.prototype.ireduce = function ireduce(num) {\n      // Assumes that `num` is less than `P^2`\n      // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n      var r = num;\n      var rlen;\n\n      do {\n        this.split(r, this.tmp);\n        r = this.imulK(r);\n        r = r.iadd(this.tmp);\n        rlen = r.bitLength();\n      } while (rlen > this.n);\n\n      var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n\n      if (cmp === 0) {\n        r.words[0] = 0;\n        r.length = 1;\n      } else if (cmp > 0) {\n        r.isub(this.p);\n      } else {\n        if (r.strip !== undefined) {\n          // r is a BN v4 instance\n          r.strip();\n        } else {\n          // r is a BN v5 instance\n          r._strip();\n        }\n      }\n\n      return r;\n    };\n\n    MPrime.prototype.split = function split(input, out) {\n      input.iushrn(this.n, 0, out);\n    };\n\n    MPrime.prototype.imulK = function imulK(num) {\n      return num.imul(this.k);\n    };\n\n    function K256() {\n      MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n    }\n\n    inherits(K256, MPrime);\n\n    K256.prototype.split = function split(input, output) {\n      // 256 = 9 * 26 + 22\n      var mask = 0x3fffff;\n      var outLen = Math.min(input.length, 9);\n\n      for (var i = 0; i < outLen; i++) {\n        output.words[i] = input.words[i];\n      }\n\n      output.length = outLen;\n\n      if (input.length <= 9) {\n        input.words[0] = 0;\n        input.length = 1;\n        return;\n      } // Shift by 9 limbs\n\n\n      var prev = input.words[9];\n      output.words[output.length++] = prev & mask;\n\n      for (i = 10; i < input.length; i++) {\n        var next = input.words[i] | 0;\n        input.words[i - 10] = (next & mask) << 4 | prev >>> 22;\n        prev = next;\n      }\n\n      prev >>>= 22;\n      input.words[i - 10] = prev;\n\n      if (prev === 0 && input.length > 10) {\n        input.length -= 10;\n      } else {\n        input.length -= 9;\n      }\n    };\n\n    K256.prototype.imulK = function imulK(num) {\n      // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n      num.words[num.length] = 0;\n      num.words[num.length + 1] = 0;\n      num.length += 2; // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n\n      var lo = 0;\n\n      for (var i = 0; i < num.length; i++) {\n        var w = num.words[i] | 0;\n        lo += w * 0x3d1;\n        num.words[i] = lo & 0x3ffffff;\n        lo = w * 0x40 + (lo / 0x4000000 | 0);\n      } // Fast length reduction\n\n\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n\n        if (num.words[num.length - 1] === 0) {\n          num.length--;\n        }\n      }\n\n      return num;\n    };\n\n    function P224() {\n      MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n    }\n\n    inherits(P224, MPrime);\n\n    function P192() {\n      MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n    }\n\n    inherits(P192, MPrime);\n\n    function P25519() {\n      // 2 ^ 255 - 19\n      MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n    }\n\n    inherits(P25519, MPrime);\n\n    P25519.prototype.imulK = function imulK(num) {\n      // K = 0x13\n      var carry = 0;\n\n      for (var i = 0; i < num.length; i++) {\n        var hi = (num.words[i] | 0) * 0x13 + carry;\n        var lo = hi & 0x3ffffff;\n        hi >>>= 26;\n        num.words[i] = lo;\n        carry = hi;\n      }\n\n      if (carry !== 0) {\n        num.words[num.length++] = carry;\n      }\n\n      return num;\n    }; // Exported mostly for testing purposes, use plain name instead\n\n\n    BN._prime = function prime(name) {\n      // Cached version of prime\n      if (primes[name]) return primes[name];\n      var prime;\n\n      if (name === 'k256') {\n        prime = new K256();\n      } else if (name === 'p224') {\n        prime = new P224();\n      } else if (name === 'p192') {\n        prime = new P192();\n      } else if (name === 'p25519') {\n        prime = new P25519();\n      } else {\n        throw new Error('Unknown prime ' + name);\n      }\n\n      primes[name] = prime;\n      return prime;\n    }; //\n    // Base reduction engine\n    //\n\n\n    function Red(m) {\n      if (typeof m === 'string') {\n        var prime = BN._prime(m);\n\n        this.m = prime.p;\n        this.prime = prime;\n      } else {\n        assert(m.gtn(1), 'modulus must be greater than 1');\n        this.m = m;\n        this.prime = null;\n      }\n    }\n\n    Red.prototype._verify1 = function _verify1(a) {\n      assert(a.negative === 0, 'red works only with positives');\n      assert(a.red, 'red works only with red numbers');\n    };\n\n    Red.prototype._verify2 = function _verify2(a, b) {\n      assert((a.negative | b.negative) === 0, 'red works only with positives');\n      assert(a.red && a.red === b.red, 'red works only with red numbers');\n    };\n\n    Red.prototype.imod = function imod(a) {\n      if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n      move(a, a.umod(this.m)._forceRed(this));\n      return a;\n    };\n\n    Red.prototype.neg = function neg(a) {\n      if (a.isZero()) {\n        return a.clone();\n      }\n\n      return this.m.sub(a)._forceRed(this);\n    };\n\n    Red.prototype.add = function add(a, b) {\n      this._verify2(a, b);\n\n      var res = a.add(b);\n\n      if (res.cmp(this.m) >= 0) {\n        res.isub(this.m);\n      }\n\n      return res._forceRed(this);\n    };\n\n    Red.prototype.iadd = function iadd(a, b) {\n      this._verify2(a, b);\n\n      var res = a.iadd(b);\n\n      if (res.cmp(this.m) >= 0) {\n        res.isub(this.m);\n      }\n\n      return res;\n    };\n\n    Red.prototype.sub = function sub(a, b) {\n      this._verify2(a, b);\n\n      var res = a.sub(b);\n\n      if (res.cmpn(0) < 0) {\n        res.iadd(this.m);\n      }\n\n      return res._forceRed(this);\n    };\n\n    Red.prototype.isub = function isub(a, b) {\n      this._verify2(a, b);\n\n      var res = a.isub(b);\n\n      if (res.cmpn(0) < 0) {\n        res.iadd(this.m);\n      }\n\n      return res;\n    };\n\n    Red.prototype.shl = function shl(a, num) {\n      this._verify1(a);\n\n      return this.imod(a.ushln(num));\n    };\n\n    Red.prototype.imul = function imul(a, b) {\n      this._verify2(a, b);\n\n      return this.imod(a.imul(b));\n    };\n\n    Red.prototype.mul = function mul(a, b) {\n      this._verify2(a, b);\n\n      return this.imod(a.mul(b));\n    };\n\n    Red.prototype.isqr = function isqr(a) {\n      return this.imul(a, a.clone());\n    };\n\n    Red.prototype.sqr = function sqr(a) {\n      return this.mul(a, a);\n    };\n\n    Red.prototype.sqrt = function sqrt(a) {\n      if (a.isZero()) return a.clone();\n      var mod3 = this.m.andln(3);\n      assert(mod3 % 2 === 1); // Fast case\n\n      if (mod3 === 3) {\n        var pow = this.m.add(new BN(1)).iushrn(2);\n        return this.pow(a, pow);\n      } // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n      //\n      // Find Q and S, that Q * 2 ^ S = (P - 1)\n\n\n      var q = this.m.subn(1);\n      var s = 0;\n\n      while (!q.isZero() && q.andln(1) === 0) {\n        s++;\n        q.iushrn(1);\n      }\n\n      assert(!q.isZero());\n      var one = new BN(1).toRed(this);\n      var nOne = one.redNeg(); // Find quadratic non-residue\n      // NOTE: Max is such because of generalized Riemann hypothesis.\n\n      var lpow = this.m.subn(1).iushrn(1);\n      var z = this.m.bitLength();\n      z = new BN(2 * z * z).toRed(this);\n\n      while (this.pow(z, lpow).cmp(nOne) !== 0) {\n        z.redIAdd(nOne);\n      }\n\n      var c = this.pow(z, q);\n      var r = this.pow(a, q.addn(1).iushrn(1));\n      var t = this.pow(a, q);\n      var m = s;\n\n      while (t.cmp(one) !== 0) {\n        var tmp = t;\n\n        for (var i = 0; tmp.cmp(one) !== 0; i++) {\n          tmp = tmp.redSqr();\n        }\n\n        assert(i < m);\n        var b = this.pow(c, new BN(1).iushln(m - i - 1));\n        r = r.redMul(b);\n        c = b.redSqr();\n        t = t.redMul(c);\n        m = i;\n      }\n\n      return r;\n    };\n\n    Red.prototype.invm = function invm(a) {\n      var inv = a._invmp(this.m);\n\n      if (inv.negative !== 0) {\n        inv.negative = 0;\n        return this.imod(inv).redNeg();\n      } else {\n        return this.imod(inv);\n      }\n    };\n\n    Red.prototype.pow = function pow(a, num) {\n      if (num.isZero()) return new BN(1).toRed(this);\n      if (num.cmpn(1) === 0) return a.clone();\n      var windowSize = 4;\n      var wnd = new Array(1 << windowSize);\n      wnd[0] = new BN(1).toRed(this);\n      wnd[1] = a;\n\n      for (var i = 2; i < wnd.length; i++) {\n        wnd[i] = this.mul(wnd[i - 1], a);\n      }\n\n      var res = wnd[0];\n      var current = 0;\n      var currentLen = 0;\n      var start = num.bitLength() % 26;\n\n      if (start === 0) {\n        start = 26;\n      }\n\n      for (i = num.length - 1; i >= 0; i--) {\n        var word = num.words[i];\n\n        for (var j = start - 1; j >= 0; j--) {\n          var bit = word >> j & 1;\n\n          if (res !== wnd[0]) {\n            res = this.sqr(res);\n          }\n\n          if (bit === 0 && current === 0) {\n            currentLen = 0;\n            continue;\n          }\n\n          current <<= 1;\n          current |= bit;\n          currentLen++;\n          if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n          res = this.mul(res, wnd[current]);\n          currentLen = 0;\n          current = 0;\n        }\n\n        start = 26;\n      }\n\n      return res;\n    };\n\n    Red.prototype.convertTo = function convertTo(num) {\n      var r = num.umod(this.m);\n      return r === num ? r.clone() : r;\n    };\n\n    Red.prototype.convertFrom = function convertFrom(num) {\n      var res = num.clone();\n      res.red = null;\n      return res;\n    }; //\n    // Montgomery method engine\n    //\n\n\n    BN.mont = function mont(num) {\n      return new Mont(num);\n    };\n\n    function Mont(m) {\n      Red.call(this, m);\n      this.shift = this.m.bitLength();\n\n      if (this.shift % 26 !== 0) {\n        this.shift += 26 - this.shift % 26;\n      }\n\n      this.r = new BN(1).iushln(this.shift);\n      this.r2 = this.imod(this.r.sqr());\n      this.rinv = this.r._invmp(this.m);\n      this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n      this.minv = this.minv.umod(this.r);\n      this.minv = this.r.sub(this.minv);\n    }\n\n    inherits(Mont, Red);\n\n    Mont.prototype.convertTo = function convertTo(num) {\n      return this.imod(num.ushln(this.shift));\n    };\n\n    Mont.prototype.convertFrom = function convertFrom(num) {\n      var r = this.imod(num.mul(this.rinv));\n      r.red = null;\n      return r;\n    };\n\n    Mont.prototype.imul = function imul(a, b) {\n      if (a.isZero() || b.isZero()) {\n        a.words[0] = 0;\n        a.length = 1;\n        return a;\n      }\n\n      var t = a.imul(b);\n      var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n      var u = t.isub(c).iushrn(this.shift);\n      var res = u;\n\n      if (u.cmp(this.m) >= 0) {\n        res = u.isub(this.m);\n      } else if (u.cmpn(0) < 0) {\n        res = u.iadd(this.m);\n      }\n\n      return res._forceRed(this);\n    };\n\n    Mont.prototype.mul = function mul(a, b) {\n      if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n      var t = a.mul(b);\n      var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n      var u = t.isub(c).iushrn(this.shift);\n      var res = u;\n\n      if (u.cmp(this.m) >= 0) {\n        res = u.isub(this.m);\n      } else if (u.cmpn(0) < 0) {\n        res = u.iadd(this.m);\n      }\n\n      return res._forceRed(this);\n    };\n\n    Mont.prototype.invm = function invm(a) {\n      // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n      var res = this.imod(a._invmp(this.m).mul(this.r2));\n      return res._forceRed(this);\n    };\n  })(module, commonjsGlobal);\n});\nvar sha3 = createCommonjsModule(function (module) {\n  /**\n   * [js-sha3]{@link https://github.com/emn178/js-sha3}\n   *\n   * @version 0.8.0\n   * @author Chen, Yi-Cyuan [emn178@gmail.com]\n   * @copyright Chen, Yi-Cyuan 2015-2018\n   * @license MIT\n   */\n\n  /*jslint bitwise: true */\n  (function () {\n    var INPUT_ERROR = 'input is invalid type';\n    var FINALIZE_ERROR = 'finalize already called';\n    var WINDOW = typeof window === 'object';\n    var root = WINDOW ? window : {};\n\n    if (root.JS_SHA3_NO_WINDOW) {\n      WINDOW = false;\n    }\n\n    var WEB_WORKER = !WINDOW && typeof self === 'object';\n    var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n\n    if (NODE_JS) {\n      root = commonjsGlobal;\n    } else if (WEB_WORKER) {\n      root = self;\n    }\n\n    var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && 'object' === 'object' && module.exports;\n    var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n    var HEX_CHARS = '0123456789abcdef'.split('');\n    var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n    var CSHAKE_PADDING = [4, 1024, 262144, 67108864];\n    var KECCAK_PADDING = [1, 256, 65536, 16777216];\n    var PADDING = [6, 1536, 393216, 100663296];\n    var SHIFT = [0, 8, 16, 24];\n    var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n    var BITS = [224, 256, 384, 512];\n    var SHAKE_BITS = [128, 256];\n    var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];\n    var CSHAKE_BYTEPAD = {\n      '128': 168,\n      '256': 136\n    };\n\n    if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {\n      Array.isArray = function (obj) {\n        return Object.prototype.toString.call(obj) === '[object Array]';\n      };\n    }\n\n    if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n      ArrayBuffer.isView = function (obj) {\n        return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n      };\n    }\n\n    var createOutputMethod = function (bits, padding, outputType) {\n      return function (message) {\n        return new Keccak(bits, padding, bits).update(message)[outputType]();\n      };\n    };\n\n    var createShakeOutputMethod = function (bits, padding, outputType) {\n      return function (message, outputBits) {\n        return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n      };\n    };\n\n    var createCshakeOutputMethod = function (bits, padding, outputType) {\n      return function (message, outputBits, n, s) {\n        return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();\n      };\n    };\n\n    var createKmacOutputMethod = function (bits, padding, outputType) {\n      return function (key, message, outputBits, s) {\n        return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();\n      };\n    };\n\n    var createOutputMethods = function (method, createMethod, bits, padding) {\n      for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n        var type = OUTPUT_TYPES[i];\n        method[type] = createMethod(bits, padding, type);\n      }\n\n      return method;\n    };\n\n    var createMethod = function (bits, padding) {\n      var method = createOutputMethod(bits, padding, 'hex');\n\n      method.create = function () {\n        return new Keccak(bits, padding, bits);\n      };\n\n      method.update = function (message) {\n        return method.create().update(message);\n      };\n\n      return createOutputMethods(method, createOutputMethod, bits, padding);\n    };\n\n    var createShakeMethod = function (bits, padding) {\n      var method = createShakeOutputMethod(bits, padding, 'hex');\n\n      method.create = function (outputBits) {\n        return new Keccak(bits, padding, outputBits);\n      };\n\n      method.update = function (message, outputBits) {\n        return method.create(outputBits).update(message);\n      };\n\n      return createOutputMethods(method, createShakeOutputMethod, bits, padding);\n    };\n\n    var createCshakeMethod = function (bits, padding) {\n      var w = CSHAKE_BYTEPAD[bits];\n      var method = createCshakeOutputMethod(bits, padding, 'hex');\n\n      method.create = function (outputBits, n, s) {\n        if (!n && !s) {\n          return methods['shake' + bits].create(outputBits);\n        } else {\n          return new Keccak(bits, padding, outputBits).bytepad([n, s], w);\n        }\n      };\n\n      method.update = function (message, outputBits, n, s) {\n        return method.create(outputBits, n, s).update(message);\n      };\n\n      return createOutputMethods(method, createCshakeOutputMethod, bits, padding);\n    };\n\n    var createKmacMethod = function (bits, padding) {\n      var w = CSHAKE_BYTEPAD[bits];\n      var method = createKmacOutputMethod(bits, padding, 'hex');\n\n      method.create = function (key, outputBits, s) {\n        return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);\n      };\n\n      method.update = function (key, message, outputBits, s) {\n        return method.create(key, outputBits, s).update(message);\n      };\n\n      return createOutputMethods(method, createKmacOutputMethod, bits, padding);\n    };\n\n    var algorithms = [{\n      name: 'keccak',\n      padding: KECCAK_PADDING,\n      bits: BITS,\n      createMethod: createMethod\n    }, {\n      name: 'sha3',\n      padding: PADDING,\n      bits: BITS,\n      createMethod: createMethod\n    }, {\n      name: 'shake',\n      padding: SHAKE_PADDING,\n      bits: SHAKE_BITS,\n      createMethod: createShakeMethod\n    }, {\n      name: 'cshake',\n      padding: CSHAKE_PADDING,\n      bits: SHAKE_BITS,\n      createMethod: createCshakeMethod\n    }, {\n      name: 'kmac',\n      padding: CSHAKE_PADDING,\n      bits: SHAKE_BITS,\n      createMethod: createKmacMethod\n    }];\n    var methods = {},\n        methodNames = [];\n\n    for (var i = 0; i < algorithms.length; ++i) {\n      var algorithm = algorithms[i];\n      var bits = algorithm.bits;\n\n      for (var j = 0; j < bits.length; ++j) {\n        var methodName = algorithm.name + '_' + bits[j];\n        methodNames.push(methodName);\n        methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n\n        if (algorithm.name !== 'sha3') {\n          var newMethodName = algorithm.name + bits[j];\n          methodNames.push(newMethodName);\n          methods[newMethodName] = methods[methodName];\n        }\n      }\n    }\n\n    function Keccak(bits, padding, outputBits) {\n      this.blocks = [];\n      this.s = [];\n      this.padding = padding;\n      this.outputBits = outputBits;\n      this.reset = true;\n      this.finalized = false;\n      this.block = 0;\n      this.start = 0;\n      this.blockCount = 1600 - (bits << 1) >> 5;\n      this.byteCount = this.blockCount << 2;\n      this.outputBlocks = outputBits >> 5;\n      this.extraBytes = (outputBits & 31) >> 3;\n\n      for (var i = 0; i < 50; ++i) {\n        this.s[i] = 0;\n      }\n    }\n\n    Keccak.prototype.update = function (message) {\n      if (this.finalized) {\n        throw new Error(FINALIZE_ERROR);\n      }\n\n      var notString,\n          type = typeof message;\n\n      if (type !== 'string') {\n        if (type === 'object') {\n          if (message === null) {\n            throw new Error(INPUT_ERROR);\n          } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n            message = new Uint8Array(message);\n          } else if (!Array.isArray(message)) {\n            if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n              throw new Error(INPUT_ERROR);\n            }\n          }\n        } else {\n          throw new Error(INPUT_ERROR);\n        }\n\n        notString = true;\n      }\n\n      var blocks = this.blocks,\n          byteCount = this.byteCount,\n          length = message.length,\n          blockCount = this.blockCount,\n          index = 0,\n          s = this.s,\n          i,\n          code;\n\n      while (index < length) {\n        if (this.reset) {\n          this.reset = false;\n          blocks[0] = this.block;\n\n          for (i = 1; i < blockCount + 1; ++i) {\n            blocks[i] = 0;\n          }\n        }\n\n        if (notString) {\n          for (i = this.start; index < length && i < byteCount; ++index) {\n            blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n          }\n        } else {\n          for (i = this.start; index < length && i < byteCount; ++index) {\n            code = message.charCodeAt(index);\n\n            if (code < 0x80) {\n              blocks[i >> 2] |= code << SHIFT[i++ & 3];\n            } else if (code < 0x800) {\n              blocks[i >> 2] |= (0xc0 | code >> 6) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n            } else if (code < 0xd800 || code >= 0xe000) {\n              blocks[i >> 2] |= (0xe0 | code >> 12) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n            } else {\n              code = 0x10000 + ((code & 0x3ff) << 10 | message.charCodeAt(++index) & 0x3ff);\n              blocks[i >> 2] |= (0xf0 | code >> 18) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | code >> 12 & 0x3f) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n            }\n          }\n        }\n\n        this.lastByteIndex = i;\n\n        if (i >= byteCount) {\n          this.start = i - byteCount;\n          this.block = blocks[blockCount];\n\n          for (i = 0; i < blockCount; ++i) {\n            s[i] ^= blocks[i];\n          }\n\n          f(s);\n          this.reset = true;\n        } else {\n          this.start = i;\n        }\n      }\n\n      return this;\n    };\n\n    Keccak.prototype.encode = function (x, right) {\n      var o = x & 255,\n          n = 1;\n      var bytes = [o];\n      x = x >> 8;\n      o = x & 255;\n\n      while (o > 0) {\n        bytes.unshift(o);\n        x = x >> 8;\n        o = x & 255;\n        ++n;\n      }\n\n      if (right) {\n        bytes.push(n);\n      } else {\n        bytes.unshift(n);\n      }\n\n      this.update(bytes);\n      return bytes.length;\n    };\n\n    Keccak.prototype.encodeString = function (str) {\n      var notString,\n          type = typeof str;\n\n      if (type !== 'string') {\n        if (type === 'object') {\n          if (str === null) {\n            throw new Error(INPUT_ERROR);\n          } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {\n            str = new Uint8Array(str);\n          } else if (!Array.isArray(str)) {\n            if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {\n              throw new Error(INPUT_ERROR);\n            }\n          }\n        } else {\n          throw new Error(INPUT_ERROR);\n        }\n\n        notString = true;\n      }\n\n      var bytes = 0,\n          length = str.length;\n\n      if (notString) {\n        bytes = length;\n      } else {\n        for (var i = 0; i < str.length; ++i) {\n          var code = str.charCodeAt(i);\n\n          if (code < 0x80) {\n            bytes += 1;\n          } else if (code < 0x800) {\n            bytes += 2;\n          } else if (code < 0xd800 || code >= 0xe000) {\n            bytes += 3;\n          } else {\n            code = 0x10000 + ((code & 0x3ff) << 10 | str.charCodeAt(++i) & 0x3ff);\n            bytes += 4;\n          }\n        }\n      }\n\n      bytes += this.encode(bytes * 8);\n      this.update(str);\n      return bytes;\n    };\n\n    Keccak.prototype.bytepad = function (strs, w) {\n      var bytes = this.encode(w);\n\n      for (var i = 0; i < strs.length; ++i) {\n        bytes += this.encodeString(strs[i]);\n      }\n\n      var paddingBytes = w - bytes % w;\n      var zeros = [];\n      zeros.length = paddingBytes;\n      this.update(zeros);\n      return this;\n    };\n\n    Keccak.prototype.finalize = function () {\n      if (this.finalized) {\n        return;\n      }\n\n      this.finalized = true;\n      var blocks = this.blocks,\n          i = this.lastByteIndex,\n          blockCount = this.blockCount,\n          s = this.s;\n      blocks[i >> 2] |= this.padding[i & 3];\n\n      if (this.lastByteIndex === this.byteCount) {\n        blocks[0] = blocks[blockCount];\n\n        for (i = 1; i < blockCount + 1; ++i) {\n          blocks[i] = 0;\n        }\n      }\n\n      blocks[blockCount - 1] |= 0x80000000;\n\n      for (i = 0; i < blockCount; ++i) {\n        s[i] ^= blocks[i];\n      }\n\n      f(s);\n    };\n\n    Keccak.prototype.toString = Keccak.prototype.hex = function () {\n      this.finalize();\n      var blockCount = this.blockCount,\n          s = this.s,\n          outputBlocks = this.outputBlocks,\n          extraBytes = this.extraBytes,\n          i = 0,\n          j = 0;\n      var hex = '',\n          block;\n\n      while (j < outputBlocks) {\n        for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n          block = s[i];\n          hex += HEX_CHARS[block >> 4 & 0x0F] + HEX_CHARS[block & 0x0F] + HEX_CHARS[block >> 12 & 0x0F] + HEX_CHARS[block >> 8 & 0x0F] + HEX_CHARS[block >> 20 & 0x0F] + HEX_CHARS[block >> 16 & 0x0F] + HEX_CHARS[block >> 28 & 0x0F] + HEX_CHARS[block >> 24 & 0x0F];\n        }\n\n        if (j % blockCount === 0) {\n          f(s);\n          i = 0;\n        }\n      }\n\n      if (extraBytes) {\n        block = s[i];\n        hex += HEX_CHARS[block >> 4 & 0x0F] + HEX_CHARS[block & 0x0F];\n\n        if (extraBytes > 1) {\n          hex += HEX_CHARS[block >> 12 & 0x0F] + HEX_CHARS[block >> 8 & 0x0F];\n        }\n\n        if (extraBytes > 2) {\n          hex += HEX_CHARS[block >> 20 & 0x0F] + HEX_CHARS[block >> 16 & 0x0F];\n        }\n      }\n\n      return hex;\n    };\n\n    Keccak.prototype.arrayBuffer = function () {\n      this.finalize();\n      var blockCount = this.blockCount,\n          s = this.s,\n          outputBlocks = this.outputBlocks,\n          extraBytes = this.extraBytes,\n          i = 0,\n          j = 0;\n      var bytes = this.outputBits >> 3;\n      var buffer;\n\n      if (extraBytes) {\n        buffer = new ArrayBuffer(outputBlocks + 1 << 2);\n      } else {\n        buffer = new ArrayBuffer(bytes);\n      }\n\n      var array = new Uint32Array(buffer);\n\n      while (j < outputBlocks) {\n        for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n          array[j] = s[i];\n        }\n\n        if (j % blockCount === 0) {\n          f(s);\n        }\n      }\n\n      if (extraBytes) {\n        array[i] = s[i];\n        buffer = buffer.slice(0, bytes);\n      }\n\n      return buffer;\n    };\n\n    Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\n    Keccak.prototype.digest = Keccak.prototype.array = function () {\n      this.finalize();\n      var blockCount = this.blockCount,\n          s = this.s,\n          outputBlocks = this.outputBlocks,\n          extraBytes = this.extraBytes,\n          i = 0,\n          j = 0;\n      var array = [],\n          offset,\n          block;\n\n      while (j < outputBlocks) {\n        for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n          offset = j << 2;\n          block = s[i];\n          array[offset] = block & 0xFF;\n          array[offset + 1] = block >> 8 & 0xFF;\n          array[offset + 2] = block >> 16 & 0xFF;\n          array[offset + 3] = block >> 24 & 0xFF;\n        }\n\n        if (j % blockCount === 0) {\n          f(s);\n        }\n      }\n\n      if (extraBytes) {\n        offset = j << 2;\n        block = s[i];\n        array[offset] = block & 0xFF;\n\n        if (extraBytes > 1) {\n          array[offset + 1] = block >> 8 & 0xFF;\n        }\n\n        if (extraBytes > 2) {\n          array[offset + 2] = block >> 16 & 0xFF;\n        }\n      }\n\n      return array;\n    };\n\n    function Kmac(bits, padding, outputBits) {\n      Keccak.call(this, bits, padding, outputBits);\n    }\n\n    Kmac.prototype = new Keccak();\n\n    Kmac.prototype.finalize = function () {\n      this.encode(this.outputBits, true);\n      return Keccak.prototype.finalize.call(this);\n    };\n\n    var f = function (s) {\n      var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17, b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33, b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n\n      for (n = 0; n < 48; n += 2) {\n        c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n        c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n        c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n        c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n        c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n        c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n        c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n        c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n        c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n        c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n        h = c8 ^ (c2 << 1 | c3 >>> 31);\n        l = c9 ^ (c3 << 1 | c2 >>> 31);\n        s[0] ^= h;\n        s[1] ^= l;\n        s[10] ^= h;\n        s[11] ^= l;\n        s[20] ^= h;\n        s[21] ^= l;\n        s[30] ^= h;\n        s[31] ^= l;\n        s[40] ^= h;\n        s[41] ^= l;\n        h = c0 ^ (c4 << 1 | c5 >>> 31);\n        l = c1 ^ (c5 << 1 | c4 >>> 31);\n        s[2] ^= h;\n        s[3] ^= l;\n        s[12] ^= h;\n        s[13] ^= l;\n        s[22] ^= h;\n        s[23] ^= l;\n        s[32] ^= h;\n        s[33] ^= l;\n        s[42] ^= h;\n        s[43] ^= l;\n        h = c2 ^ (c6 << 1 | c7 >>> 31);\n        l = c3 ^ (c7 << 1 | c6 >>> 31);\n        s[4] ^= h;\n        s[5] ^= l;\n        s[14] ^= h;\n        s[15] ^= l;\n        s[24] ^= h;\n        s[25] ^= l;\n        s[34] ^= h;\n        s[35] ^= l;\n        s[44] ^= h;\n        s[45] ^= l;\n        h = c4 ^ (c8 << 1 | c9 >>> 31);\n        l = c5 ^ (c9 << 1 | c8 >>> 31);\n        s[6] ^= h;\n        s[7] ^= l;\n        s[16] ^= h;\n        s[17] ^= l;\n        s[26] ^= h;\n        s[27] ^= l;\n        s[36] ^= h;\n        s[37] ^= l;\n        s[46] ^= h;\n        s[47] ^= l;\n        h = c6 ^ (c0 << 1 | c1 >>> 31);\n        l = c7 ^ (c1 << 1 | c0 >>> 31);\n        s[8] ^= h;\n        s[9] ^= l;\n        s[18] ^= h;\n        s[19] ^= l;\n        s[28] ^= h;\n        s[29] ^= l;\n        s[38] ^= h;\n        s[39] ^= l;\n        s[48] ^= h;\n        s[49] ^= l;\n        b0 = s[0];\n        b1 = s[1];\n        b32 = s[11] << 4 | s[10] >>> 28;\n        b33 = s[10] << 4 | s[11] >>> 28;\n        b14 = s[20] << 3 | s[21] >>> 29;\n        b15 = s[21] << 3 | s[20] >>> 29;\n        b46 = s[31] << 9 | s[30] >>> 23;\n        b47 = s[30] << 9 | s[31] >>> 23;\n        b28 = s[40] << 18 | s[41] >>> 14;\n        b29 = s[41] << 18 | s[40] >>> 14;\n        b20 = s[2] << 1 | s[3] >>> 31;\n        b21 = s[3] << 1 | s[2] >>> 31;\n        b2 = s[13] << 12 | s[12] >>> 20;\n        b3 = s[12] << 12 | s[13] >>> 20;\n        b34 = s[22] << 10 | s[23] >>> 22;\n        b35 = s[23] << 10 | s[22] >>> 22;\n        b16 = s[33] << 13 | s[32] >>> 19;\n        b17 = s[32] << 13 | s[33] >>> 19;\n        b48 = s[42] << 2 | s[43] >>> 30;\n        b49 = s[43] << 2 | s[42] >>> 30;\n        b40 = s[5] << 30 | s[4] >>> 2;\n        b41 = s[4] << 30 | s[5] >>> 2;\n        b22 = s[14] << 6 | s[15] >>> 26;\n        b23 = s[15] << 6 | s[14] >>> 26;\n        b4 = s[25] << 11 | s[24] >>> 21;\n        b5 = s[24] << 11 | s[25] >>> 21;\n        b36 = s[34] << 15 | s[35] >>> 17;\n        b37 = s[35] << 15 | s[34] >>> 17;\n        b18 = s[45] << 29 | s[44] >>> 3;\n        b19 = s[44] << 29 | s[45] >>> 3;\n        b10 = s[6] << 28 | s[7] >>> 4;\n        b11 = s[7] << 28 | s[6] >>> 4;\n        b42 = s[17] << 23 | s[16] >>> 9;\n        b43 = s[16] << 23 | s[17] >>> 9;\n        b24 = s[26] << 25 | s[27] >>> 7;\n        b25 = s[27] << 25 | s[26] >>> 7;\n        b6 = s[36] << 21 | s[37] >>> 11;\n        b7 = s[37] << 21 | s[36] >>> 11;\n        b38 = s[47] << 24 | s[46] >>> 8;\n        b39 = s[46] << 24 | s[47] >>> 8;\n        b30 = s[8] << 27 | s[9] >>> 5;\n        b31 = s[9] << 27 | s[8] >>> 5;\n        b12 = s[18] << 20 | s[19] >>> 12;\n        b13 = s[19] << 20 | s[18] >>> 12;\n        b44 = s[29] << 7 | s[28] >>> 25;\n        b45 = s[28] << 7 | s[29] >>> 25;\n        b26 = s[38] << 8 | s[39] >>> 24;\n        b27 = s[39] << 8 | s[38] >>> 24;\n        b8 = s[48] << 14 | s[49] >>> 18;\n        b9 = s[49] << 14 | s[48] >>> 18;\n        s[0] = b0 ^ ~b2 & b4;\n        s[1] = b1 ^ ~b3 & b5;\n        s[10] = b10 ^ ~b12 & b14;\n        s[11] = b11 ^ ~b13 & b15;\n        s[20] = b20 ^ ~b22 & b24;\n        s[21] = b21 ^ ~b23 & b25;\n        s[30] = b30 ^ ~b32 & b34;\n        s[31] = b31 ^ ~b33 & b35;\n        s[40] = b40 ^ ~b42 & b44;\n        s[41] = b41 ^ ~b43 & b45;\n        s[2] = b2 ^ ~b4 & b6;\n        s[3] = b3 ^ ~b5 & b7;\n        s[12] = b12 ^ ~b14 & b16;\n        s[13] = b13 ^ ~b15 & b17;\n        s[22] = b22 ^ ~b24 & b26;\n        s[23] = b23 ^ ~b25 & b27;\n        s[32] = b32 ^ ~b34 & b36;\n        s[33] = b33 ^ ~b35 & b37;\n        s[42] = b42 ^ ~b44 & b46;\n        s[43] = b43 ^ ~b45 & b47;\n        s[4] = b4 ^ ~b6 & b8;\n        s[5] = b5 ^ ~b7 & b9;\n        s[14] = b14 ^ ~b16 & b18;\n        s[15] = b15 ^ ~b17 & b19;\n        s[24] = b24 ^ ~b26 & b28;\n        s[25] = b25 ^ ~b27 & b29;\n        s[34] = b34 ^ ~b36 & b38;\n        s[35] = b35 ^ ~b37 & b39;\n        s[44] = b44 ^ ~b46 & b48;\n        s[45] = b45 ^ ~b47 & b49;\n        s[6] = b6 ^ ~b8 & b0;\n        s[7] = b7 ^ ~b9 & b1;\n        s[16] = b16 ^ ~b18 & b10;\n        s[17] = b17 ^ ~b19 & b11;\n        s[26] = b26 ^ ~b28 & b20;\n        s[27] = b27 ^ ~b29 & b21;\n        s[36] = b36 ^ ~b38 & b30;\n        s[37] = b37 ^ ~b39 & b31;\n        s[46] = b46 ^ ~b48 & b40;\n        s[47] = b47 ^ ~b49 & b41;\n        s[8] = b8 ^ ~b0 & b2;\n        s[9] = b9 ^ ~b1 & b3;\n        s[18] = b18 ^ ~b10 & b12;\n        s[19] = b19 ^ ~b11 & b13;\n        s[28] = b28 ^ ~b20 & b22;\n        s[29] = b29 ^ ~b21 & b23;\n        s[38] = b38 ^ ~b30 & b32;\n        s[39] = b39 ^ ~b31 & b33;\n        s[48] = b48 ^ ~b40 & b42;\n        s[49] = b49 ^ ~b41 & b43;\n        s[0] ^= RC[n];\n        s[1] ^= RC[n + 1];\n      }\n    };\n\n    if (COMMON_JS) {\n      module.exports = methods;\n    } else {\n      for (i = 0; i < methodNames.length; ++i) {\n        root[methodNames[i]] = methods[methodNames[i]];\n      }\n    }\n  })();\n});\n\nvar DataStr =\n/** @class */\nfunction () {\n  function DataStr(val) {\n    if (isNaN(val)) throw Error('NaN. Not a valid input.');\n    this.val = val.toString();\n  }\n\n  DataStr.prototype.toString = function () {\n    return this.val;\n  };\n\n  DataStr.prototype.toJSON = function () {\n    return this.toString();\n  };\n\n  DataStr.prototype.eq = function (n) {\n    return this.toBN().eq(n.toBN());\n  };\n\n  return DataStr;\n}();\n\nvar HexString =\n/** @class */\nfunction (_super) {\n  __extends(HexString, _super);\n\n  function HexString(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isHex = true;\n    if (!_this.val.startsWith('0x')) throw Error(\"Invalid value. \" + val + \" does not start with 0x\");\n\n    if (_this.val.length % 2 !== 0) {\n      _this.val = \"0x0\" + _this.val.substr(2);\n    }\n\n    return _this;\n  }\n\n  HexString.prototype.toBN = function () {\n    return new bn(this.val.slice(2), 'hex');\n  };\n\n  HexString.prototype.byteLength = function () {\n    return Math.ceil((this.val.length - 2) / 2);\n  };\n\n  HexString.prototype.assertLength = function (len) {\n    var leftPadding = len * 2 - (this.val.length - 2);\n    if (leftPadding < 0) throw \"It has \" + this.byteLength() + \" bytes\";else if (leftPadding > 0) {\n      var newVal = \"0x\" + Array(leftPadding).fill('0').join('') + this.val.slice(2);\n      this.val = newVal;\n    }\n  };\n\n  HexString.from = function (val) {\n    return new HexString(val);\n  };\n\n  HexString.prototype.toUintString = function () {\n    return new UintString(this.toBN().toString(10));\n  };\n\n  HexString.prototype.toBuffer = function () {\n    return Buffer.from(this.val.slice(2), 'hex');\n  };\n\n  return HexString;\n}(DataStr);\n\nvar NumString =\n/** @class */\nfunction (_super) {\n  __extends(NumString, _super);\n\n  function NumString(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isNum = true;\n    if (val.startsWith('0x')) throw Error(\"It is not a number. \" + val + \" starts with 0x.\"); // always remove prefixed zeroes\n\n    var prefix = _this.val.startsWith('-') ? '-' : '';\n\n    while (_this.val.startsWith('0') && _this.val.length > 1) {\n      _this.val = _this.val.slice(1);\n    }\n\n    _this.val = prefix + _this.val;\n    return _this;\n  }\n\n  NumString.from = function (val) {\n    return new NumString(val);\n  };\n\n  NumString.prototype.toBN = function () {\n    return new bn(this.val, 10);\n  };\n\n  NumString.prototype.toBytes = function () {\n    return new HexString(\"0x\" + this.toBN().toString(16));\n  };\n\n  NumString.prototype.toBuffer = function () {\n    return this.toBytes().toBuffer();\n  };\n\n  return NumString;\n}(DataStr);\n\nvar UintString =\n/** @class */\nfunction (_super) {\n  __extends(UintString, _super);\n\n  function UintString(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isUint = true;\n    if (_this.val.startsWith('-')) throw Error('It can not have a negative number.');\n    return _this;\n  }\n\n  UintString.prototype.assertThreshold = function (threshold) {\n    if (this.val.padStart(threshold.length, '0') >= threshold) {\n      throw Error('Overflow.');\n    }\n  };\n\n  UintString.from = function (val) {\n    return new UintString(val);\n  };\n\n  UintString.prototype.toHexString = function () {\n    return new HexString(\"0x\" + this.toBN().toString(16));\n  };\n\n  return UintString;\n}(NumString);\n\nvar IntString =\n/** @class */\nfunction (_super) {\n  __extends(IntString, _super);\n\n  function IntString(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isInt = true;\n    return _this;\n  }\n\n  IntString.prototype.assertThreshold = function (threshold) {\n    if (this.val.startsWith('-')) {\n      if (this.val.slice(1) > threshold) throw Error('Underflow.');\n    } else {\n      if (this.val >= threshold) throw Error('Overflow.');\n    }\n  };\n\n  IntString.from = function (val) {\n    return new IntString(val);\n  };\n\n  return IntString;\n}(NumString);\n\nvar Bytes =\n/** @class */\nfunction (_super) {\n  __extends(Bytes, _super);\n\n  function Bytes(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isBytes = true;\n    return _this;\n  }\n\n  Bytes.from = function (val) {\n    return new Bytes(val);\n  };\n\n  return Bytes;\n}(HexString);\n\nvar Byte =\n/** @class */\nfunction (_super) {\n  __extends(Byte, _super);\n\n  function Byte(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isByte = true;\n\n    _this.assertLength(1);\n\n    return _this;\n  }\n\n  Byte.from = function (val) {\n    return new Byte(val);\n  };\n\n  Byte.prototype.toUint = function () {\n    return new Uint8(this.toBN().toString(10));\n  };\n\n  return Byte;\n}(HexString);\n\nvar Bytes2 =\n/** @class */\nfunction (_super) {\n  __extends(Bytes2, _super);\n\n  function Bytes2(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isBytes2 = true;\n\n    _this.assertLength(2);\n\n    return _this;\n  }\n\n  Bytes2.from = function (val) {\n    return new Bytes2(val);\n  };\n\n  Bytes2.prototype.toUint = function () {\n    return new Uint16(this.toBN().toString(10));\n  };\n\n  return Bytes2;\n}(HexString);\n\nvar Bytes3 =\n/** @class */\nfunction (_super) {\n  __extends(Bytes3, _super);\n\n  function Bytes3(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isBytes3 = true;\n\n    _this.assertLength(3);\n\n    return _this;\n  }\n\n  Bytes3.from = function (val) {\n    return new Bytes3(val);\n  };\n\n  Bytes3.prototype.toUint = function () {\n    return new Uint24(this.toBN().toString(10));\n  };\n\n  return Bytes3;\n}(HexString);\n\nvar Bytes4 =\n/** @class */\nfunction (_super) {\n  __extends(Bytes4, _super);\n\n  function Bytes4(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isBytes4 = true;\n\n    _this.assertLength(4);\n\n    return _this;\n  }\n\n  Bytes4.from = function (val) {\n    return new Bytes4(val);\n  };\n\n  Bytes4.prototype.toUint = function () {\n    return new Uint32(this.toBN().toString(10));\n  };\n\n  return Bytes4;\n}(HexString);\n\nvar Bytes5 =\n/** @class */\nfunction (_super) {\n  __extends(Bytes5, _super);\n\n  function Bytes5(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isBytes5 = true;\n\n    _this.assertLength(5);\n\n    return _this;\n  }\n\n  Bytes5.from = function (val) {\n    return new Bytes5(val);\n  };\n\n  Bytes5.prototype.toUint = function () {\n    return new Uint40(this.toBN().toString(10));\n  };\n\n  return Bytes5;\n}(HexString);\n\nvar Bytes6 =\n/** @class */\nfunction (_super) {\n  __extends(Bytes6, _super);\n\n  function Bytes6(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isBytes6 = true;\n\n    _this.assertLength(6);\n\n    return _this;\n  }\n\n  Bytes6.from = function (val) {\n    return new Bytes6(val);\n  };\n\n  Bytes6.prototype.toUint = function () {\n    return new Uint48(this.toBN().toString(10));\n  };\n\n  return Bytes6;\n}(HexString);\n\nvar Bytes7 =\n/** @class */\nfunction (_super) {\n  __extends(Bytes7, _super);\n\n  function Bytes7(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isBytes7 = true;\n\n    _this.assertLength(7);\n\n    return _this;\n  }\n\n  Bytes7.from = function (val) {\n    return new Bytes7(val);\n  };\n\n  Bytes7.prototype.toUint = function () {\n    return new Uint56(this.toBN().toString(10));\n  };\n\n  return Bytes7;\n}(HexString);\n\nvar Bytes8 =\n/** @class */\nfunction (_super) {\n  __extends(Bytes8, _super);\n\n  function Bytes8(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isBytes8 = true;\n\n    _this.assertLength(8);\n\n    return _this;\n  }\n\n  Bytes8.from = function (val) {\n    return new Bytes8(val);\n  };\n\n  Bytes8.prototype.toUint = function () {\n    return new Uint64(this.toBN().toString(10));\n  };\n\n  return Bytes8;\n}(HexString);\n\nvar Bytes9 =\n/** @class */\nfunction (_super) {\n  __extends(Bytes9, _super);\n\n  function Bytes9(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isBytes9 = true;\n\n    _this.assertLength(9);\n\n    return _this;\n  }\n\n  Bytes9.from = function (val) {\n    return new Bytes9(val);\n  };\n\n  Bytes9.prototype.toUint = function () {\n    return new Uint72(this.toBN().toString(10));\n  };\n\n  return Bytes9;\n}(HexString);\n\nvar Bytes10 =\n/** @class */\nfunction (_super) {\n  __extends(Bytes10, _super);\n\n  function Bytes10(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isBytes10 = true;\n\n    _this.assertLength(10);\n\n    return _this;\n  }\n\n  Bytes10.from = function (val) {\n    return new Bytes10(val);\n  };\n\n  Bytes10.prototype.toUint = function () {\n    return new Uint80(this.toBN().toString(10));\n  };\n\n  return Bytes10;\n}(HexString);\n\nvar Bytes11 =\n/** @class */\nfunction (_super) {\n  __extends(Bytes11, _super);\n\n  function Bytes11(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isBytes11 = true;\n\n    _this.assertLength(11);\n\n    return _this;\n  }\n\n  Bytes11.from = function (val) {\n    return new Bytes11(val);\n  };\n\n  Bytes11.prototype.toUint = function () {\n    return new Uint88(this.toBN().toString(10));\n  };\n\n  return Bytes11;\n}(HexString);\n\nvar Bytes12 =\n/** @class */\nfunction (_super) {\n  __extends(Bytes12, _super);\n\n  function Bytes12(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isBytes12 = true;\n\n    _this.assertLength(12);\n\n    return _this;\n  }\n\n  Bytes12.from = function (val) {\n    return new Bytes12(val);\n  };\n\n  Bytes12.prototype.toUint = function () {\n    return new Uint96(this.toBN().toString(10));\n  };\n\n  return Bytes12;\n}(HexString);\n\nvar Bytes13 =\n/** @class */\nfunction (_super) {\n  __extends(Bytes13, _super);\n\n  function Bytes13(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isBytes13 = true;\n\n    _this.assertLength(13);\n\n    return _this;\n  }\n\n  Bytes13.from = function (val) {\n    return new Bytes13(val);\n  };\n\n  Bytes13.prototype.toUint = function () {\n    return new Uint104(this.toBN().toString(10));\n  };\n\n  return Bytes13;\n}(HexString);\n\nvar Bytes14 =\n/** @class */\nfunction (_super) {\n  __extends(Bytes14, _super);\n\n  function Bytes14(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isBytes14 = true;\n\n    _this.assertLength(14);\n\n    return _this;\n  }\n\n  Bytes14.from = function (val) {\n    return new Bytes14(val);\n  };\n\n  Bytes14.prototype.toUint = function () {\n    return new Uint112(this.toBN().toString(10));\n  };\n\n  return Bytes14;\n}(HexString);\n\nvar Bytes15 =\n/** @class */\nfunction (_super) {\n  __extends(Bytes15, _super);\n\n  function Bytes15(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isBytes15 = true;\n\n    _this.assertLength(15);\n\n    return _this;\n  }\n\n  Bytes15.from = function (val) {\n    return new Bytes15(val);\n  };\n\n  Bytes15.prototype.toUint = function () {\n    return new Uint120(this.toBN().toString(10));\n  };\n\n  return Bytes15;\n}(HexString);\n\nvar Bytes16 =\n/** @class */\nfunction (_super) {\n  __extends(Bytes16, _super);\n\n  function Bytes16(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isBytes16 = true;\n\n    _this.assertLength(16);\n\n    return _this;\n  }\n\n  Bytes16.from = function (val) {\n    return new Bytes16(val);\n  };\n\n  Bytes16.prototype.toUint = function () {\n    return new Uint128(this.toBN().toString(10));\n  };\n\n  return Bytes16;\n}(HexString);\n\nvar Bytes17 =\n/** @class */\nfunction (_super) {\n  __extends(Bytes17, _super);\n\n  function Bytes17(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isBytes17 = true;\n\n    _this.assertLength(17);\n\n    return _this;\n  }\n\n  Bytes17.from = function (val) {\n    return new Bytes17(val);\n  };\n\n  Bytes17.prototype.toUint = function () {\n    return new Uint136(this.toBN().toString(10));\n  };\n\n  return Bytes17;\n}(HexString);\n\nvar Bytes18 =\n/** @class */\nfunction (_super) {\n  __extends(Bytes18, _super);\n\n  function Bytes18(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isBytes18 = true;\n\n    _this.assertLength(18);\n\n    return _this;\n  }\n\n  Bytes18.from = function (val) {\n    return new Bytes18(val);\n  };\n\n  Bytes18.prototype.toUint = function () {\n    return new Uint144(this.toBN().toString(10));\n  };\n\n  return Bytes18;\n}(HexString);\n\nvar Bytes19 =\n/** @class */\nfunction (_super) {\n  __extends(Bytes19, _super);\n\n  function Bytes19(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isBytes19 = true;\n\n    _this.assertLength(19);\n\n    return _this;\n  }\n\n  Bytes19.from = function (val) {\n    return new Bytes19(val);\n  };\n\n  Bytes19.prototype.toUint = function () {\n    return new Uint152(this.toBN().toString(10));\n  };\n\n  return Bytes19;\n}(HexString);\n\nvar Bytes20 =\n/** @class */\nfunction (_super) {\n  __extends(Bytes20, _super);\n\n  function Bytes20(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isBytes20 = true;\n\n    _this.assertLength(20);\n\n    return _this;\n  }\n\n  Bytes20.from = function (val) {\n    return new Bytes20(val);\n  };\n\n  Bytes20.prototype.toUint = function () {\n    return new Uint160(this.toBN().toString(10));\n  };\n\n  Bytes20.prototype.toAddress = function () {\n    return new Address(this.val);\n  };\n\n  return Bytes20;\n}(HexString);\n\nvar Bytes21 =\n/** @class */\nfunction (_super) {\n  __extends(Bytes21, _super);\n\n  function Bytes21(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isBytes21 = true;\n\n    _this.assertLength(21);\n\n    return _this;\n  }\n\n  Bytes21.from = function (val) {\n    return new Bytes21(val);\n  };\n\n  Bytes21.prototype.toUint = function () {\n    return new Uint168(this.toBN().toString(10));\n  };\n\n  return Bytes21;\n}(HexString);\n\nvar Bytes22 =\n/** @class */\nfunction (_super) {\n  __extends(Bytes22, _super);\n\n  function Bytes22(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isBytes22 = true;\n\n    _this.assertLength(22);\n\n    return _this;\n  }\n\n  Bytes22.from = function (val) {\n    return new Bytes22(val);\n  };\n\n  Bytes22.prototype.toUint = function () {\n    return new Uint176(this.toBN().toString(10));\n  };\n\n  return Bytes22;\n}(HexString);\n\nvar Bytes23 =\n/** @class */\nfunction (_super) {\n  __extends(Bytes23, _super);\n\n  function Bytes23(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isBytes23 = true;\n\n    _this.assertLength(23);\n\n    return _this;\n  }\n\n  Bytes23.from = function (val) {\n    return new Bytes23(val);\n  };\n\n  Bytes23.prototype.toUint = function () {\n    return new Uint184(this.toBN().toString(10));\n  };\n\n  return Bytes23;\n}(HexString);\n\nvar Bytes24 =\n/** @class */\nfunction (_super) {\n  __extends(Bytes24, _super);\n\n  function Bytes24(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isBytes24 = true;\n\n    _this.assertLength(24);\n\n    return _this;\n  }\n\n  Bytes24.from = function (val) {\n    return new Bytes24(val);\n  };\n\n  Bytes24.prototype.toUint = function () {\n    return new Uint192(this.toBN().toString(10));\n  };\n\n  return Bytes24;\n}(HexString);\n\nvar Bytes25 =\n/** @class */\nfunction (_super) {\n  __extends(Bytes25, _super);\n\n  function Bytes25(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isBytes25 = true;\n\n    _this.assertLength(25);\n\n    return _this;\n  }\n\n  Bytes25.from = function (val) {\n    return new Bytes25(val);\n  };\n\n  Bytes25.prototype.toUint = function () {\n    return new Uint200(this.toBN().toString(10));\n  };\n\n  return Bytes25;\n}(HexString);\n\nvar Bytes26 =\n/** @class */\nfunction (_super) {\n  __extends(Bytes26, _super);\n\n  function Bytes26(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isBytes26 = true;\n\n    _this.assertLength(26);\n\n    return _this;\n  }\n\n  Bytes26.from = function (val) {\n    return new Bytes26(val);\n  };\n\n  Bytes26.prototype.toUint = function () {\n    return new Uint208(this.toBN().toString(10));\n  };\n\n  return Bytes26;\n}(HexString);\n\nvar Bytes27 =\n/** @class */\nfunction (_super) {\n  __extends(Bytes27, _super);\n\n  function Bytes27(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isBytes27 = true;\n\n    _this.assertLength(27);\n\n    return _this;\n  }\n\n  Bytes27.from = function (val) {\n    return new Bytes27(val);\n  };\n\n  Bytes27.prototype.toUint = function () {\n    return new Uint216(this.toBN().toString(10));\n  };\n\n  return Bytes27;\n}(HexString);\n\nvar Bytes28 =\n/** @class */\nfunction (_super) {\n  __extends(Bytes28, _super);\n\n  function Bytes28(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isBytes28 = true;\n\n    _this.assertLength(28);\n\n    return _this;\n  }\n\n  Bytes28.from = function (val) {\n    return new Bytes28(val);\n  };\n\n  Bytes28.prototype.toUint = function () {\n    return new Uint224(this.toBN().toString(10));\n  };\n\n  return Bytes28;\n}(HexString);\n\nvar Bytes29 =\n/** @class */\nfunction (_super) {\n  __extends(Bytes29, _super);\n\n  function Bytes29(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isBytes29 = true;\n\n    _this.assertLength(29);\n\n    return _this;\n  }\n\n  Bytes29.from = function (val) {\n    return new Bytes29(val);\n  };\n\n  Bytes29.prototype.toUint = function () {\n    return new Uint232(this.toBN().toString(10));\n  };\n\n  return Bytes29;\n}(HexString);\n\nvar Bytes30 =\n/** @class */\nfunction (_super) {\n  __extends(Bytes30, _super);\n\n  function Bytes30(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isBytes30 = true;\n\n    _this.assertLength(30);\n\n    return _this;\n  }\n\n  Bytes30.from = function (val) {\n    return new Bytes30(val);\n  };\n\n  Bytes30.prototype.toUint = function () {\n    return new Uint240(this.toBN().toString(10));\n  };\n\n  return Bytes30;\n}(HexString);\n\nvar Bytes31 =\n/** @class */\nfunction (_super) {\n  __extends(Bytes31, _super);\n\n  function Bytes31(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isBytes31 = true;\n\n    _this.assertLength(31);\n\n    return _this;\n  }\n\n  Bytes31.from = function (val) {\n    return new Bytes31(val);\n  };\n\n  Bytes31.prototype.toUint = function () {\n    return new Uint248(this.toBN().toString(10));\n  };\n\n  return Bytes31;\n}(HexString);\n\nvar Bytes32 =\n/** @class */\nfunction (_super) {\n  __extends(Bytes32, _super);\n\n  function Bytes32(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isBytes32 = true;\n\n    _this.assertLength(32);\n\n    return _this;\n  }\n\n  Bytes32.from = function (val) {\n    return new Bytes32(val);\n  };\n\n  Bytes32.prototype.toUint = function () {\n    return new Uint256(this.toBN().toString(10));\n  };\n\n  return Bytes32;\n}(HexString);\n\nvar Uint8 =\n/** @class */\nfunction (_super) {\n  __extends(Uint8, _super);\n\n  function Uint8(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isUint8 = true;\n\n    _this.assertThreshold('256');\n\n    return _this;\n  }\n\n  Uint8.from = function (val) {\n    return new Uint8(val);\n  };\n\n  Uint8.prototype.toByte = function () {\n    return new Byte(\"0x\" + this.toBN().toString(16, 2));\n  };\n\n  return Uint8;\n}(UintString);\n\nvar Uint16 =\n/** @class */\nfunction (_super) {\n  __extends(Uint16, _super);\n\n  function Uint16(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isUint16 = true;\n\n    _this.assertThreshold('65536');\n\n    return _this;\n  }\n\n  Uint16.from = function (val) {\n    return new Uint16(val);\n  };\n\n  Uint16.prototype.toBytes = function () {\n    return new Bytes2(\"0x\" + this.toBN().toString(16, 4));\n  };\n\n  return Uint16;\n}(UintString);\n\nvar Uint24 =\n/** @class */\nfunction (_super) {\n  __extends(Uint24, _super);\n\n  function Uint24(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isUint24 = true;\n\n    _this.assertThreshold('16777216');\n\n    return _this;\n  }\n\n  Uint24.from = function (val) {\n    return new Uint24(val);\n  };\n\n  Uint24.prototype.toBytes = function () {\n    return new Bytes3(\"0x\" + this.toBN().toString(16, 6));\n  };\n\n  return Uint24;\n}(UintString);\n\nvar Uint32 =\n/** @class */\nfunction (_super) {\n  __extends(Uint32, _super);\n\n  function Uint32(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isUint32 = true;\n\n    _this.assertThreshold('4294967296');\n\n    return _this;\n  }\n\n  Uint32.from = function (val) {\n    return new Uint32(val);\n  };\n\n  Uint32.prototype.toBytes = function () {\n    return new Bytes4(\"0x\" + this.toBN().toString(16, 8));\n  };\n\n  return Uint32;\n}(UintString);\n\nvar Uint40 =\n/** @class */\nfunction (_super) {\n  __extends(Uint40, _super);\n\n  function Uint40(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isUint40 = true;\n\n    _this.assertThreshold('1099511627776');\n\n    return _this;\n  }\n\n  Uint40.from = function (val) {\n    return new Uint40(val);\n  };\n\n  Uint40.prototype.toBytes = function () {\n    return new Bytes5(\"0x\" + this.toBN().toString(16, 10));\n  };\n\n  return Uint40;\n}(UintString);\n\nvar Uint48 =\n/** @class */\nfunction (_super) {\n  __extends(Uint48, _super);\n\n  function Uint48(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isUint48 = true;\n\n    _this.assertThreshold('281474976710656');\n\n    return _this;\n  }\n\n  Uint48.from = function (val) {\n    return new Uint48(val);\n  };\n\n  Uint48.prototype.toBytes = function () {\n    return new Bytes6(\"0x\" + this.toBN().toString(16, 12));\n  };\n\n  return Uint48;\n}(UintString);\n\nvar Uint56 =\n/** @class */\nfunction (_super) {\n  __extends(Uint56, _super);\n\n  function Uint56(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isUint56 = true;\n\n    _this.assertThreshold('72057594037927936');\n\n    return _this;\n  }\n\n  Uint56.from = function (val) {\n    return new Uint56(val);\n  };\n\n  Uint56.prototype.toBytes = function () {\n    return new Bytes7(\"0x\" + this.toBN().toString(16, 14));\n  };\n\n  return Uint56;\n}(UintString);\n\nvar Uint64 =\n/** @class */\nfunction (_super) {\n  __extends(Uint64, _super);\n\n  function Uint64(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isUint64 = true;\n\n    _this.assertThreshold('18446744073709551616');\n\n    return _this;\n  }\n\n  Uint64.from = function (val) {\n    return new Uint64(val);\n  };\n\n  Uint64.prototype.toBytes = function () {\n    return new Bytes8(\"0x\" + this.toBN().toString(16, 16));\n  };\n\n  return Uint64;\n}(UintString);\n\nvar Uint72 =\n/** @class */\nfunction (_super) {\n  __extends(Uint72, _super);\n\n  function Uint72(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isUint72 = true;\n\n    _this.assertThreshold('4722366482869645213696');\n\n    return _this;\n  }\n\n  Uint72.from = function (val) {\n    return new Uint72(val);\n  };\n\n  Uint72.prototype.toBytes = function () {\n    return new Bytes9(\"0x\" + this.toBN().toString(16, 18));\n  };\n\n  return Uint72;\n}(UintString);\n\nvar Uint80 =\n/** @class */\nfunction (_super) {\n  __extends(Uint80, _super);\n\n  function Uint80(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isUint80 = true;\n\n    _this.assertThreshold('1208925819614629174706176');\n\n    return _this;\n  }\n\n  Uint80.from = function (val) {\n    return new Uint80(val);\n  };\n\n  Uint80.prototype.toBytes = function () {\n    return new Bytes10(\"0x\" + this.toBN().toString(16, 20));\n  };\n\n  return Uint80;\n}(UintString);\n\nvar Uint88 =\n/** @class */\nfunction (_super) {\n  __extends(Uint88, _super);\n\n  function Uint88(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isUint88 = true;\n\n    _this.assertThreshold('309485009821345068724781056');\n\n    return _this;\n  }\n\n  Uint88.from = function (val) {\n    return new Uint88(val);\n  };\n\n  Uint88.prototype.toBytes = function () {\n    return new Bytes11(\"0x\" + this.toBN().toString(16, 22));\n  };\n\n  return Uint88;\n}(UintString);\n\nvar Uint96 =\n/** @class */\nfunction (_super) {\n  __extends(Uint96, _super);\n\n  function Uint96(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isUint96 = true;\n\n    _this.assertThreshold('79228162514264337593543950336');\n\n    return _this;\n  }\n\n  Uint96.from = function (val) {\n    return new Uint96(val);\n  };\n\n  Uint96.prototype.toBytes = function () {\n    return new Bytes12(\"0x\" + this.toBN().toString(16, 24));\n  };\n\n  return Uint96;\n}(UintString);\n\nvar Uint104 =\n/** @class */\nfunction (_super) {\n  __extends(Uint104, _super);\n\n  function Uint104(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isUint104 = true;\n\n    _this.assertThreshold('20282409603651670423947251286016');\n\n    return _this;\n  }\n\n  Uint104.from = function (val) {\n    return new Uint104(val);\n  };\n\n  Uint104.prototype.toBytes = function () {\n    return new Bytes13(\"0x\" + this.toBN().toString(16, 26));\n  };\n\n  return Uint104;\n}(UintString);\n\nvar Uint112 =\n/** @class */\nfunction (_super) {\n  __extends(Uint112, _super);\n\n  function Uint112(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isUint112 = true;\n\n    _this.assertThreshold('5192296858534827628530496329220096');\n\n    return _this;\n  }\n\n  Uint112.from = function (val) {\n    return new Uint112(val);\n  };\n\n  Uint112.prototype.toBytes = function () {\n    return new Bytes14(\"0x\" + this.toBN().toString(16, 28));\n  };\n\n  return Uint112;\n}(UintString);\n\nvar Uint120 =\n/** @class */\nfunction (_super) {\n  __extends(Uint120, _super);\n\n  function Uint120(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isUint120 = true;\n\n    _this.assertThreshold('1329227995784915872903807060280344576');\n\n    return _this;\n  }\n\n  Uint120.from = function (val) {\n    return new Uint120(val);\n  };\n\n  Uint120.prototype.toBytes = function () {\n    return new Bytes15(\"0x\" + this.toBN().toString(16, 30));\n  };\n\n  return Uint120;\n}(UintString);\n\nvar Uint128 =\n/** @class */\nfunction (_super) {\n  __extends(Uint128, _super);\n\n  function Uint128(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isUint128 = true;\n\n    _this.assertThreshold('340282366920938463463374607431768211456');\n\n    return _this;\n  }\n\n  Uint128.from = function (val) {\n    return new Uint128(val);\n  };\n\n  Uint128.prototype.toBytes = function () {\n    return new Bytes16(\"0x\" + this.toBN().toString(16, 32));\n  };\n\n  return Uint128;\n}(UintString);\n\nvar Uint136 =\n/** @class */\nfunction (_super) {\n  __extends(Uint136, _super);\n\n  function Uint136(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isUint136 = true;\n\n    _this.assertThreshold('87112285931760246646623899502532662132736');\n\n    return _this;\n  }\n\n  Uint136.from = function (val) {\n    return new Uint136(val);\n  };\n\n  Uint136.prototype.toBytes = function () {\n    return new Bytes17(\"0x\" + this.toBN().toString(16, 34));\n  };\n\n  return Uint136;\n}(UintString);\n\nvar Uint144 =\n/** @class */\nfunction (_super) {\n  __extends(Uint144, _super);\n\n  function Uint144(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isUint144 = true;\n\n    _this.assertThreshold('22300745198530623141535718272648361505980416');\n\n    return _this;\n  }\n\n  Uint144.from = function (val) {\n    return new Uint144(val);\n  };\n\n  Uint144.prototype.toBytes = function () {\n    return new Bytes18(\"0x\" + this.toBN().toString(16, 36));\n  };\n\n  return Uint144;\n}(UintString);\n\nvar Uint152 =\n/** @class */\nfunction (_super) {\n  __extends(Uint152, _super);\n\n  function Uint152(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isUint152 = true;\n\n    _this.assertThreshold('5708990770823839524233143877797980545530986496');\n\n    return _this;\n  }\n\n  Uint152.from = function (val) {\n    return new Uint152(val);\n  };\n\n  Uint152.prototype.toBytes = function () {\n    return new Bytes19(\"0x\" + this.toBN().toString(16, 38));\n  };\n\n  return Uint152;\n}(UintString);\n\nvar Uint160 =\n/** @class */\nfunction (_super) {\n  __extends(Uint160, _super);\n\n  function Uint160(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isUint160 = true;\n\n    _this.assertThreshold('1461501637330902918203684832716283019655932542976');\n\n    return _this;\n  }\n\n  Uint160.from = function (val) {\n    return new Uint160(val);\n  };\n\n  Uint160.prototype.toBytes = function () {\n    return new Bytes20(\"0x\" + this.toBN().toString(16, 40));\n  };\n\n  return Uint160;\n}(UintString);\n\nvar Uint168 =\n/** @class */\nfunction (_super) {\n  __extends(Uint168, _super);\n\n  function Uint168(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isUint168 = true;\n\n    _this.assertThreshold('374144419156711147060143317175368453031918731001856');\n\n    return _this;\n  }\n\n  Uint168.from = function (val) {\n    return new Uint168(val);\n  };\n\n  Uint168.prototype.toBytes = function () {\n    return new Bytes21(\"0x\" + this.toBN().toString(16, 42));\n  };\n\n  return Uint168;\n}(UintString);\n\nvar Uint176 =\n/** @class */\nfunction (_super) {\n  __extends(Uint176, _super);\n\n  function Uint176(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isUint176 = true;\n\n    _this.assertThreshold('95780971304118053647396689196894323976171195136475136');\n\n    return _this;\n  }\n\n  Uint176.from = function (val) {\n    return new Uint176(val);\n  };\n\n  Uint176.prototype.toBytes = function () {\n    return new Bytes22(\"0x\" + this.toBN().toString(16, 44));\n  };\n\n  return Uint176;\n}(UintString);\n\nvar Uint184 =\n/** @class */\nfunction (_super) {\n  __extends(Uint184, _super);\n\n  function Uint184(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isUint184 = true;\n\n    _this.assertThreshold('24519928653854221733733552434404946937899825954937634816');\n\n    return _this;\n  }\n\n  Uint184.from = function (val) {\n    return new Uint184(val);\n  };\n\n  Uint184.prototype.toBytes = function () {\n    return new Bytes23(\"0x\" + this.toBN().toString(16, 46));\n  };\n\n  return Uint184;\n}(UintString);\n\nvar Uint192 =\n/** @class */\nfunction (_super) {\n  __extends(Uint192, _super);\n\n  function Uint192(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isUint192 = true;\n\n    _this.assertThreshold('6277101735386680763835789423207666416102355444464034512896');\n\n    return _this;\n  }\n\n  Uint192.from = function (val) {\n    return new Uint192(val);\n  };\n\n  Uint192.prototype.toBytes = function () {\n    return new Bytes24(\"0x\" + this.toBN().toString(16, 48));\n  };\n\n  return Uint192;\n}(UintString);\n\nvar Uint200 =\n/** @class */\nfunction (_super) {\n  __extends(Uint200, _super);\n\n  function Uint200(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isUint200 = true;\n\n    _this.assertThreshold('1606938044258990275541962092341162602522202993782792835301376');\n\n    return _this;\n  }\n\n  Uint200.from = function (val) {\n    return new Uint200(val);\n  };\n\n  Uint200.prototype.toBytes = function () {\n    return new Bytes25(\"0x\" + this.toBN().toString(16, 50));\n  };\n\n  return Uint200;\n}(UintString);\n\nvar Uint208 =\n/** @class */\nfunction (_super) {\n  __extends(Uint208, _super);\n\n  function Uint208(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isUint208 = true;\n\n    _this.assertThreshold('411376139330301510538742295639337626245683966408394965837152256');\n\n    return _this;\n  }\n\n  Uint208.from = function (val) {\n    return new Uint208(val);\n  };\n\n  Uint208.prototype.toBytes = function () {\n    return new Bytes26(\"0x\" + this.toBN().toString(16, 52));\n  };\n\n  return Uint208;\n}(UintString);\n\nvar Uint216 =\n/** @class */\nfunction (_super) {\n  __extends(Uint216, _super);\n\n  function Uint216(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isUint216 = true;\n\n    _this.assertThreshold('105312291668557186697918027683670432318895095400549111254310977536');\n\n    return _this;\n  }\n\n  Uint216.from = function (val) {\n    return new Uint216(val);\n  };\n\n  Uint216.prototype.toBytes = function () {\n    return new Bytes27(\"0x\" + this.toBN().toString(16, 54));\n  };\n\n  return Uint216;\n}(UintString);\n\nvar Uint224 =\n/** @class */\nfunction (_super) {\n  __extends(Uint224, _super);\n\n  function Uint224(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isUint224 = true;\n\n    _this.assertThreshold('26959946667150639794667015087019630673637144422540572481103610249216');\n\n    return _this;\n  }\n\n  Uint224.from = function (val) {\n    return new Uint224(val);\n  };\n\n  Uint224.prototype.toBytes = function () {\n    return new Bytes28(\"0x\" + this.toBN().toString(16, 56));\n  };\n\n  return Uint224;\n}(UintString);\n\nvar Uint232 =\n/** @class */\nfunction (_super) {\n  __extends(Uint232, _super);\n\n  function Uint232(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isUint232 = true;\n\n    _this.assertThreshold('6901746346790563787434755862277025452451108972170386555162524223799296');\n\n    return _this;\n  }\n\n  Uint232.from = function (val) {\n    return new Uint232(val);\n  };\n\n  Uint232.prototype.toBytes = function () {\n    return new Bytes29(\"0x\" + this.toBN().toString(16, 58));\n  };\n\n  return Uint232;\n}(UintString);\n\nvar Uint240 =\n/** @class */\nfunction (_super) {\n  __extends(Uint240, _super);\n\n  function Uint240(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isUint240 = true;\n\n    _this.assertThreshold('1766847064778384329583297500742918515827483896875618958121606201292619776');\n\n    return _this;\n  }\n\n  Uint240.from = function (val) {\n    return new Uint240(val);\n  };\n\n  Uint240.prototype.toBytes = function () {\n    return new Bytes30(\"0x\" + this.toBN().toString(16, 60));\n  };\n\n  return Uint240;\n}(UintString);\n\nvar Uint248 =\n/** @class */\nfunction (_super) {\n  __extends(Uint248, _super);\n\n  function Uint248(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isUint248 = true;\n\n    _this.assertThreshold('452312848583266388373324160190187140051835877600158453279131187530910662656');\n\n    return _this;\n  }\n\n  Uint248.from = function (val) {\n    return new Uint248(val);\n  };\n\n  Uint248.prototype.toBytes = function () {\n    return new Bytes31(\"0x\" + this.toBN().toString(16, 62));\n  };\n\n  return Uint248;\n}(UintString);\n\nvar Uint256 =\n/** @class */\nfunction (_super) {\n  __extends(Uint256, _super);\n\n  function Uint256(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isUint256 = true;\n\n    _this.assertThreshold('115792089237316195423570985008687907853269984665640564039457584007913129639936');\n\n    return _this;\n  }\n\n  Uint256.from = function (val) {\n    return new Uint256(val);\n  };\n\n  Uint256.prototype.toBytes = function () {\n    return new Bytes32(\"0x\" + this.toBN().toString(16, 64));\n  };\n\n  return Uint256;\n}(UintString);\n\nvar Int8 =\n/** @class */\nfunction (_super) {\n  __extends(Int8, _super);\n\n  function Int8(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isInt8 = true;\n\n    _this.assertThreshold('128');\n\n    return _this;\n  }\n\n  Int8.from = function (val) {\n    return new Int8(val);\n  };\n\n  return Int8;\n}(IntString);\n\nvar Int16 =\n/** @class */\nfunction (_super) {\n  __extends(Int16, _super);\n\n  function Int16(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isInt16 = true;\n\n    _this.assertThreshold('32768');\n\n    return _this;\n  }\n\n  Int16.from = function (val) {\n    return new Int16(val);\n  };\n\n  return Int16;\n}(IntString);\n\nvar Int24 =\n/** @class */\nfunction (_super) {\n  __extends(Int24, _super);\n\n  function Int24(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isInt24 = true;\n\n    _this.assertThreshold('8388608');\n\n    return _this;\n  }\n\n  Int24.from = function (val) {\n    return new Int24(val);\n  };\n\n  return Int24;\n}(IntString);\n\nvar Int32 =\n/** @class */\nfunction (_super) {\n  __extends(Int32, _super);\n\n  function Int32(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isInt32 = true;\n\n    _this.assertThreshold('2147483648');\n\n    return _this;\n  }\n\n  Int32.from = function (val) {\n    return new Int32(val);\n  };\n\n  return Int32;\n}(IntString);\n\nvar Int40 =\n/** @class */\nfunction (_super) {\n  __extends(Int40, _super);\n\n  function Int40(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isInt40 = true;\n\n    _this.assertThreshold('549755813888');\n\n    return _this;\n  }\n\n  Int40.from = function (val) {\n    return new Int40(val);\n  };\n\n  return Int40;\n}(IntString);\n\nvar Int48 =\n/** @class */\nfunction (_super) {\n  __extends(Int48, _super);\n\n  function Int48(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isInt48 = true;\n\n    _this.assertThreshold('140737488355328');\n\n    return _this;\n  }\n\n  Int48.from = function (val) {\n    return new Int48(val);\n  };\n\n  return Int48;\n}(IntString);\n\nvar Int56 =\n/** @class */\nfunction (_super) {\n  __extends(Int56, _super);\n\n  function Int56(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isInt56 = true;\n\n    _this.assertThreshold('36028797018963968');\n\n    return _this;\n  }\n\n  Int56.from = function (val) {\n    return new Int56(val);\n  };\n\n  return Int56;\n}(IntString);\n\nvar Int64 =\n/** @class */\nfunction (_super) {\n  __extends(Int64, _super);\n\n  function Int64(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isInt64 = true;\n\n    _this.assertThreshold('9223372036854775808');\n\n    return _this;\n  }\n\n  Int64.from = function (val) {\n    return new Int64(val);\n  };\n\n  return Int64;\n}(IntString);\n\nvar Int72 =\n/** @class */\nfunction (_super) {\n  __extends(Int72, _super);\n\n  function Int72(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isInt72 = true;\n\n    _this.assertThreshold('2361183241434822606848');\n\n    return _this;\n  }\n\n  Int72.from = function (val) {\n    return new Int72(val);\n  };\n\n  return Int72;\n}(IntString);\n\nvar Int80 =\n/** @class */\nfunction (_super) {\n  __extends(Int80, _super);\n\n  function Int80(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isInt80 = true;\n\n    _this.assertThreshold('604462909807314587353088');\n\n    return _this;\n  }\n\n  Int80.from = function (val) {\n    return new Int80(val);\n  };\n\n  return Int80;\n}(IntString);\n\nvar Int88 =\n/** @class */\nfunction (_super) {\n  __extends(Int88, _super);\n\n  function Int88(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isInt88 = true;\n\n    _this.assertThreshold('154742504910672534362390528');\n\n    return _this;\n  }\n\n  Int88.from = function (val) {\n    return new Int88(val);\n  };\n\n  return Int88;\n}(IntString);\n\nvar Int96 =\n/** @class */\nfunction (_super) {\n  __extends(Int96, _super);\n\n  function Int96(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isInt96 = true;\n\n    _this.assertThreshold('39614081257132168796771975168');\n\n    return _this;\n  }\n\n  Int96.from = function (val) {\n    return new Int96(val);\n  };\n\n  return Int96;\n}(IntString);\n\nvar Int104 =\n/** @class */\nfunction (_super) {\n  __extends(Int104, _super);\n\n  function Int104(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isInt104 = true;\n\n    _this.assertThreshold('10141204801825835211973625643008');\n\n    return _this;\n  }\n\n  Int104.from = function (val) {\n    return new Int104(val);\n  };\n\n  return Int104;\n}(IntString);\n\nvar Int112 =\n/** @class */\nfunction (_super) {\n  __extends(Int112, _super);\n\n  function Int112(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isInt112 = true;\n\n    _this.assertThreshold('2596148429267413814265248164610048');\n\n    return _this;\n  }\n\n  Int112.from = function (val) {\n    return new Int112(val);\n  };\n\n  return Int112;\n}(IntString);\n\nvar Int120 =\n/** @class */\nfunction (_super) {\n  __extends(Int120, _super);\n\n  function Int120(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isInt120 = true;\n\n    _this.assertThreshold('664613997892457936451903530140172288');\n\n    return _this;\n  }\n\n  Int120.from = function (val) {\n    return new Int120(val);\n  };\n\n  return Int120;\n}(IntString);\n\nvar Int128 =\n/** @class */\nfunction (_super) {\n  __extends(Int128, _super);\n\n  function Int128(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isInt128 = true;\n\n    _this.assertThreshold('170141183460469231731687303715884105728');\n\n    return _this;\n  }\n\n  Int128.from = function (val) {\n    return new Int128(val);\n  };\n\n  return Int128;\n}(IntString);\n\nvar Int136 =\n/** @class */\nfunction (_super) {\n  __extends(Int136, _super);\n\n  function Int136(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isInt136 = true;\n\n    _this.assertThreshold('43556142965880123323311949751266331066368');\n\n    return _this;\n  }\n\n  Int136.from = function (val) {\n    return new Int136(val);\n  };\n\n  return Int136;\n}(IntString);\n\nvar Int144 =\n/** @class */\nfunction (_super) {\n  __extends(Int144, _super);\n\n  function Int144(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isInt144 = true;\n\n    _this.assertThreshold('11150372599265311570767859136324180752990208');\n\n    return _this;\n  }\n\n  Int144.from = function (val) {\n    return new Int144(val);\n  };\n\n  return Int144;\n}(IntString);\n\nvar Int152 =\n/** @class */\nfunction (_super) {\n  __extends(Int152, _super);\n\n  function Int152(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isInt152 = true;\n\n    _this.assertThreshold('2854495385411919762116571938898990272765493248');\n\n    return _this;\n  }\n\n  Int152.from = function (val) {\n    return new Int152(val);\n  };\n\n  return Int152;\n}(IntString);\n\nvar Int160 =\n/** @class */\nfunction (_super) {\n  __extends(Int160, _super);\n\n  function Int160(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isInt160 = true;\n\n    _this.assertThreshold('730750818665451459101842416358141509827966271488');\n\n    return _this;\n  }\n\n  Int160.from = function (val) {\n    return new Int160(val);\n  };\n\n  return Int160;\n}(IntString);\n\nvar Int168 =\n/** @class */\nfunction (_super) {\n  __extends(Int168, _super);\n\n  function Int168(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isInt168 = true;\n\n    _this.assertThreshold('187072209578355573530071658587684226515959365500928');\n\n    return _this;\n  }\n\n  Int168.from = function (val) {\n    return new Int168(val);\n  };\n\n  return Int168;\n}(IntString);\n\nvar Int176 =\n/** @class */\nfunction (_super) {\n  __extends(Int176, _super);\n\n  function Int176(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isInt176 = true;\n\n    _this.assertThreshold('47890485652059026823698344598447161988085597568237568');\n\n    return _this;\n  }\n\n  Int176.from = function (val) {\n    return new Int176(val);\n  };\n\n  return Int176;\n}(IntString);\n\nvar Int184 =\n/** @class */\nfunction (_super) {\n  __extends(Int184, _super);\n\n  function Int184(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isInt184 = true;\n\n    _this.assertThreshold('12259964326927110866866776217202473468949912977468817408');\n\n    return _this;\n  }\n\n  Int184.from = function (val) {\n    return new Int184(val);\n  };\n\n  return Int184;\n}(IntString);\n\nvar Int192 =\n/** @class */\nfunction (_super) {\n  __extends(Int192, _super);\n\n  function Int192(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isInt192 = true;\n\n    _this.assertThreshold('3138550867693340381917894711603833208051177722232017256448');\n\n    return _this;\n  }\n\n  Int192.from = function (val) {\n    return new Int192(val);\n  };\n\n  return Int192;\n}(IntString);\n\nvar Int200 =\n/** @class */\nfunction (_super) {\n  __extends(Int200, _super);\n\n  function Int200(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isInt200 = true;\n\n    _this.assertThreshold('803469022129495137770981046170581301261101496891396417650688');\n\n    return _this;\n  }\n\n  Int200.from = function (val) {\n    return new Int200(val);\n  };\n\n  return Int200;\n}(IntString);\n\nvar Int208 =\n/** @class */\nfunction (_super) {\n  __extends(Int208, _super);\n\n  function Int208(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isInt208 = true;\n\n    _this.assertThreshold('205688069665150755269371147819668813122841983204197482918576128');\n\n    return _this;\n  }\n\n  Int208.from = function (val) {\n    return new Int208(val);\n  };\n\n  return Int208;\n}(IntString);\n\nvar Int216 =\n/** @class */\nfunction (_super) {\n  __extends(Int216, _super);\n\n  function Int216(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isInt216 = true;\n\n    _this.assertThreshold('52656145834278593348959013841835216159447547700274555627155488768');\n\n    return _this;\n  }\n\n  Int216.from = function (val) {\n    return new Int216(val);\n  };\n\n  return Int216;\n}(IntString);\n\nvar Int224 =\n/** @class */\nfunction (_super) {\n  __extends(Int224, _super);\n\n  function Int224(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isInt224 = true;\n\n    _this.assertThreshold('13479973333575319897333507543509815336818572211270286240551805124608');\n\n    return _this;\n  }\n\n  Int224.from = function (val) {\n    return new Int224(val);\n  };\n\n  return Int224;\n}(IntString);\n\nvar Int232 =\n/** @class */\nfunction (_super) {\n  __extends(Int232, _super);\n\n  function Int232(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isInt232 = true;\n\n    _this.assertThreshold('3450873173395281893717377931138512726225554486085193277581262111899648');\n\n    return _this;\n  }\n\n  Int232.from = function (val) {\n    return new Int232(val);\n  };\n\n  return Int232;\n}(IntString);\n\nvar Int240 =\n/** @class */\nfunction (_super) {\n  __extends(Int240, _super);\n\n  function Int240(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isInt240 = true;\n\n    _this.assertThreshold('883423532389192164791648750371459257913741948437809479060803100646309888');\n\n    return _this;\n  }\n\n  Int240.from = function (val) {\n    return new Int240(val);\n  };\n\n  return Int240;\n}(IntString);\n\nvar Int248 =\n/** @class */\nfunction (_super) {\n  __extends(Int248, _super);\n\n  function Int248(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isInt248 = true;\n\n    _this.assertThreshold('226156424291633194186662080095093570025917938800079226639565593765455331328');\n\n    return _this;\n  }\n\n  Int248.from = function (val) {\n    return new Int248(val);\n  };\n\n  return Int248;\n}(IntString);\n\nvar Int256 =\n/** @class */\nfunction (_super) {\n  __extends(Int256, _super);\n\n  function Int256(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.isInt256 = true;\n\n    _this.assertThreshold('57896044618658097711785492504343953926634992332820282019728792003956564819968');\n\n    return _this;\n  }\n\n  Int256.from = function (val) {\n    return new Int256(val);\n  };\n\n  return Int256;\n}(IntString);\n\nvar Address =\n/** @class */\nfunction (_super) {\n  __extends(Address, _super);\n\n  function Address(val) {\n    var _this = _super.call(this, val) || this;\n\n    _this.val = Address.toChecksumAddress(val);\n    return _this;\n  }\n\n  Address.from = function (val) {\n    return new Address(val);\n  };\n  /**\r\n   * @dev Check EIP-55 for the details\r\n   * https://github.com/ethereum/EIPs/blob/master/EIPS/eip-55.md#implementation\r\n   * @param address Ethereum 20 bytes address value\r\n   */\n\n\n  Address.toChecksumAddress = function (address) {\n    address = address.toLowerCase().replace('0x', '');\n    var hash = sha3.keccak256.update(address).hex();\n    var ret = '0x';\n\n    for (var i = 0; i < address.length; i += 1) {\n      if (parseInt(hash[i], 16) >= 8) {\n        ret += address[i].toUpperCase();\n      } else {\n        ret += address[i];\n      }\n    }\n\n    return ret;\n  };\n\n  return Address;\n}(Bytes20);\n\nexport { Address, Byte, Bytes, Bytes10, Bytes11, Bytes12, Bytes13, Bytes14, Bytes15, Bytes16, Bytes17, Bytes18, Bytes19, Bytes2, Bytes20, Bytes21, Bytes22, Bytes23, Bytes24, Bytes25, Bytes26, Bytes27, Bytes28, Bytes29, Bytes3, Bytes30, Bytes31, Bytes32, Bytes4, Bytes5, Bytes6, Bytes7, Bytes8, Bytes9, HexString, Int104, Int112, Int120, Int128, Int136, Int144, Int152, Int16, Int160, Int168, Int176, Int184, Int192, Int200, Int208, Int216, Int224, Int232, Int24, Int240, Int248, Int256, Int32, Int40, Int48, Int56, Int64, Int72, Int8, Int80, Int88, Int96, IntString, NumString, Uint104, Uint112, Uint120, Uint128, Uint136, Uint144, Uint152, Uint16, Uint160, Uint168, Uint176, Uint184, Uint192, Uint200, Uint208, Uint216, Uint224, Uint232, Uint24, Uint240, Uint248, Uint256, Uint32, Uint40, Uint48, Uint56, Uint64, Uint72, Uint8, Uint80, Uint88, Uint96, UintString };","map":{"version":3,"mappings":"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","names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","module","exports","assert","val","msg","Error","inherits","ctor","superCtor","super_","TempCtor","BN","number","base","endian","isBN","negative","words","length","red","_init","wordSize","Buffer","require$$0","e","num","isArray","max","left","right","cmp","min","init","_initNumber","_initArray","toString","replace","start","_parseHex","_parseBase","_strip","toArray","Math","ceil","i","j","w","off","parseHex","str","end","r","len","z","c","charCodeAt","parseBase","mul","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","dest","move","src","_move","clone","_expand","size","strip","_normSign","Symbol","for","inspect","zeros","groupSizes","groupBases","padding","out","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","allocate","ArrayType","allocUnsafe","byteLength","reqLength","res","postfix","_toArrayLikeLE","position","shift","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","bitLength","hi","toBitArray","bit","wbit","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","a","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","iadd","isub","add","sub","smallMulTo","self","lo","k","ncarry","rword","maxJ","comb10MulTo","o","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","mulTo","mulf","isNegNum","muln","sqr","isqr","q","iushln","bits","s","carryMask","newCarry","ishln","iushrn","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","bhiBits","m","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","acc","modn","egcd","x","y","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","name","n","tmp","_tmp","ireduce","rlen","split","imulK","undefined","input","K256","call","output","outLen","prev","next","P224","P192","P25519","_prime","prime","imod","mod3","one","nOne","lpow","inv","windowSize","wnd","current","currentLen","mont","Mont","rinv","minv","u","this","INPUT_ERROR","FINALIZE_ERROR","WINDOW","window","root","JS_SHA3_NO_WINDOW","WEB_WORKER","NODE_JS","JS_SHA3_NO_NODE_JS","process","versions","node","global","COMMON_JS","JS_SHA3_NO_COMMON_JS","ARRAY_BUFFER","JS_SHA3_NO_ARRAY_BUFFER","ArrayBuffer","HEX_CHARS","SHAKE_PADDING","CSHAKE_PADDING","KECCAK_PADDING","PADDING","SHIFT","RC","BITS","SHAKE_BITS","OUTPUT_TYPES","CSHAKE_BYTEPAD","obj","JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW","isView","buffer","createOutputMethod","outputType","message","Keccak","update","createShakeOutputMethod","outputBits","createCshakeOutputMethod","methods","createKmacOutputMethod","key","createOutputMethods","method","createMethod","type","createShakeMethod","createCshakeMethod","bytepad","createKmacMethod","Kmac","algorithms","methodNames","algorithm","methodName","push","newMethodName","blocks","reset","finalized","block","blockCount","byteCount","outputBlocks","extraBytes","notString","Uint8Array","index","code","lastByteIndex","f","encode","bytes","unshift","encodeString","strs","paddingBytes","finalize","hex","arrayBuffer","array","Uint32Array","slice","digest","offset","l","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","b10","b11","b12","b13","b14","b15","b16","b17","b18","b19","b20","b21","b22","b23","b24","b25","b26","b27","b28","b29","b30","b31","b32","b33","b34","b35","b36","b37","b38","b39","b40","b41","b42","b43","b44","b45","b46","b47","b48","b49","isNaN","DataStr","toBN","_super","_this","startsWith","substr","HexString","leftPadding","newVal","fill","join","UintString","from","prefix","NumString","toBytes","threshold","padStart","IntString","Bytes","assertLength","Byte","Uint8","Bytes2","Uint16","Bytes3","Uint24","Bytes4","Uint32","Bytes5","Uint40","Bytes6","Uint48","Bytes7","Uint56","Bytes8","Uint64","Bytes9","Uint72","Bytes10","Uint80","Bytes11","Uint88","Bytes12","Uint96","Bytes13","Uint104","Bytes14","Uint112","Bytes15","Uint120","Bytes16","Uint128","Bytes17","Uint136","Bytes18","Uint144","Bytes19","Uint152","Bytes20","Uint160","Address","Bytes21","Uint168","Bytes22","Uint176","Bytes23","Uint184","Bytes24","Uint192","Bytes25","Uint200","Bytes26","Uint208","Bytes27","Uint216","Bytes28","Uint224","Bytes29","Uint232","Bytes30","Uint240","Bytes31","Uint248","Bytes32","Uint256","assertThreshold","Int8","Int16","Int24","Int32","Int40","Int48","Int56","Int64","Int72","Int80","Int88","Int96","Int104","Int112","Int120","Int128","Int136","Int144","Int152","Int160","Int168","Int176","Int184","Int192","Int200","Int208","Int216","Int224","Int232","Int240","Int248","Int256","toChecksumAddress","address","toLowerCase","hash","sha3","keccak256","parseInt","toUpperCase"],"sources":["../node_modules/tslib/tslib.es6.js","../node_modules/bn.js/lib/bn.js","../node_modules/js-sha3/src/sha3.js","../src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this._strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    var z = 0;\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      var b;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        b = c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n\n      r |= b;\n      z |= b;\n    }\n\n    assert(!(z & 0xf0), 'Invalid character in ' + str);\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","/**\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\n *\n * @version 0.8.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2018\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var INPUT_ERROR = 'input is invalid type';\n  var FINALIZE_ERROR = 'finalize already called';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA3_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n  var CSHAKE_PADDING = [4, 1024, 262144, 67108864];\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\n  var PADDING = [6, 1536, 393216, 100663296];\n  var SHIFT = [0, 8, 16, 24];\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\n    0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\n    2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\n    2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\n    2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n  var BITS = [224, 256, 384, 512];\n  var SHAKE_BITS = [128, 256];\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];\n  var CSHAKE_BYTEPAD = {\n    '128': 168,\n    '256': 136\n  };\n\n  if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (bits, padding, outputType) {\n    return function (message) {\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\n    };\n  };\n\n  var createShakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits) {\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n    };\n  };\n\n  var createCshakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits, n, s) {\n      return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();\n    };\n  };\n\n  var createKmacOutputMethod = function (bits, padding, outputType) {\n    return function (key, message, outputBits, s) {\n      return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();\n    };\n  };\n\n  var createOutputMethods = function (method, createMethod, bits, padding) {\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createMethod(bits, padding, type);\n    }\n    return method;\n  };\n\n  var createMethod = function (bits, padding) {\n    var method = createOutputMethod(bits, padding, 'hex');\n    method.create = function () {\n      return new Keccak(bits, padding, bits);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    return createOutputMethods(method, createOutputMethod, bits, padding);\n  };\n\n  var createShakeMethod = function (bits, padding) {\n    var method = createShakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits) {\n      return new Keccak(bits, padding, outputBits);\n    };\n    method.update = function (message, outputBits) {\n      return method.create(outputBits).update(message);\n    };\n    return createOutputMethods(method, createShakeOutputMethod, bits, padding);\n  };\n\n  var createCshakeMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createCshakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits, n, s) {\n      if (!n && !s) {\n        return methods['shake' + bits].create(outputBits);\n      } else {\n        return new Keccak(bits, padding, outputBits).bytepad([n, s], w);\n      }\n    };\n    method.update = function (message, outputBits, n, s) {\n      return method.create(outputBits, n, s).update(message);\n    };\n    return createOutputMethods(method, createCshakeOutputMethod, bits, padding);\n  };\n\n  var createKmacMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createKmacOutputMethod(bits, padding, 'hex');\n    method.create = function (key, outputBits, s) {\n      return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);\n    };\n    method.update = function (key, message, outputBits, s) {\n      return method.create(key, outputBits, s).update(message);\n    };\n    return createOutputMethods(method, createKmacOutputMethod, bits, padding);\n  };\n\n  var algorithms = [\n    { name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },\n    { name: 'cshake', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },\n    { name: 'kmac', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }\n  ];\n\n  var methods = {}, methodNames = [];\n\n  for (var i = 0; i < algorithms.length; ++i) {\n    var algorithm = algorithms[i];\n    var bits = algorithm.bits;\n    for (var j = 0; j < bits.length; ++j) {\n      var methodName = algorithm.name + '_' + bits[j];\n      methodNames.push(methodName);\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n      if (algorithm.name !== 'sha3') {\n        var newMethodName = algorithm.name + bits[j];\n        methodNames.push(newMethodName);\n        methods[newMethodName] = methods[methodName];\n      }\n    }\n  }\n\n  function Keccak(bits, padding, outputBits) {\n    this.blocks = [];\n    this.s = [];\n    this.padding = padding;\n    this.outputBits = outputBits;\n    this.reset = true;\n    this.finalized = false;\n    this.block = 0;\n    this.start = 0;\n    this.blockCount = (1600 - (bits << 1)) >> 5;\n    this.byteCount = this.blockCount << 2;\n    this.outputBlocks = outputBits >> 5;\n    this.extraBytes = (outputBits & 31) >> 3;\n\n    for (var i = 0; i < 50; ++i) {\n      this.s[i] = 0;\n    }\n  }\n\n  Keccak.prototype.update = function (message) {\n    if (this.finalized) {\n      throw new Error(FINALIZE_ERROR);\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var blocks = this.blocks, byteCount = this.byteCount, length = message.length,\n      blockCount = this.blockCount, index = 0, s = this.s, i, code;\n\n    while (index < length) {\n      if (this.reset) {\n        this.reset = false;\n        blocks[0] = this.block;\n        for (i = 1; i < blockCount + 1; ++i) {\n          blocks[i] = 0;\n        }\n      }\n      if (notString) {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n      this.lastByteIndex = i;\n      if (i >= byteCount) {\n        this.start = i - byteCount;\n        this.block = blocks[blockCount];\n        for (i = 0; i < blockCount; ++i) {\n          s[i] ^= blocks[i];\n        }\n        f(s);\n        this.reset = true;\n      } else {\n        this.start = i;\n      }\n    }\n    return this;\n  };\n\n  Keccak.prototype.encode = function (x, right) {\n    var o = x & 255, n = 1;\n    var bytes = [o];\n    x = x >> 8;\n    o = x & 255;\n    while (o > 0) {\n      bytes.unshift(o);\n      x = x >> 8;\n      o = x & 255;\n      ++n;\n    }\n    if (right) {\n      bytes.push(n);\n    } else {\n      bytes.unshift(n);\n    }\n    this.update(bytes);\n    return bytes.length;\n  };\n\n  Keccak.prototype.encodeString = function (str) {\n    var notString, type = typeof str;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (str === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {\n          str = new Uint8Array(str);\n        } else if (!Array.isArray(str)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var bytes = 0, length = str.length;\n    if (notString) {\n      bytes = length;\n    } else {\n      for (var i = 0; i < str.length; ++i) {\n        var code = str.charCodeAt(i);\n        if (code < 0x80) {\n          bytes += 1;\n        } else if (code < 0x800) {\n          bytes += 2;\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes += 3;\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++i) & 0x3ff));\n          bytes += 4;\n        }\n      }\n    }\n    bytes += this.encode(bytes * 8);\n    this.update(str);\n    return bytes;\n  };\n\n  Keccak.prototype.bytepad = function (strs, w) {\n    var bytes = this.encode(w);\n    for (var i = 0; i < strs.length; ++i) {\n      bytes += this.encodeString(strs[i]);\n    }\n    var paddingBytes = w - bytes % w;\n    var zeros = [];\n    zeros.length = paddingBytes;\n    this.update(zeros);\n    return this;\n  };\n\n  Keccak.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\n    blocks[i >> 2] |= this.padding[i & 3];\n    if (this.lastByteIndex === this.byteCount) {\n      blocks[0] = blocks[blockCount];\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n    blocks[blockCount - 1] |= 0x80000000;\n    for (i = 0; i < blockCount; ++i) {\n      s[i] ^= blocks[i];\n    }\n    f(s);\n  };\n\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var hex = '', block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        block = s[i];\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\n          HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\n          HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\n          HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n        i = 0;\n      }\n    }\n    if (extraBytes) {\n      block = s[i];\n      hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\n      if (extraBytes > 1) {\n        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\n      }\n      if (extraBytes > 2) {\n        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\n      }\n    }\n    return hex;\n  };\n\n  Keccak.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var bytes = this.outputBits >> 3;\n    var buffer;\n    if (extraBytes) {\n      buffer = new ArrayBuffer((outputBlocks + 1) << 2);\n    } else {\n      buffer = new ArrayBuffer(bytes);\n    }\n    var array = new Uint32Array(buffer);\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        array[j] = s[i];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      array[i] = s[i];\n      buffer = buffer.slice(0, bytes);\n    }\n    return buffer;\n  };\n\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var array = [], offset, block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        offset = j << 2;\n        block = s[i];\n        array[offset] = block & 0xFF;\n        array[offset + 1] = (block >> 8) & 0xFF;\n        array[offset + 2] = (block >> 16) & 0xFF;\n        array[offset + 3] = (block >> 24) & 0xFF;\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      offset = j << 2;\n      block = s[i];\n      array[offset] = block & 0xFF;\n      if (extraBytes > 1) {\n        array[offset + 1] = (block >> 8) & 0xFF;\n      }\n      if (extraBytes > 2) {\n        array[offset + 2] = (block >> 16) & 0xFF;\n      }\n    }\n    return array;\n  };\n\n  function Kmac(bits, padding, outputBits) {\n    Keccak.call(this, bits, padding, outputBits);\n  }\n\n  Kmac.prototype = new Keccak();\n\n  Kmac.prototype.finalize = function () {\n    this.encode(this.outputBits, true);\n    return Keccak.prototype.finalize.call(this);\n  };\n\n  var f = function (s) {\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\n      b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\n      b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\n      b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n    for (n = 0; n < 48; n += 2) {\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n      h = c8 ^ ((c2 << 1) | (c3 >>> 31));\n      l = c9 ^ ((c3 << 1) | (c2 >>> 31));\n      s[0] ^= h;\n      s[1] ^= l;\n      s[10] ^= h;\n      s[11] ^= l;\n      s[20] ^= h;\n      s[21] ^= l;\n      s[30] ^= h;\n      s[31] ^= l;\n      s[40] ^= h;\n      s[41] ^= l;\n      h = c0 ^ ((c4 << 1) | (c5 >>> 31));\n      l = c1 ^ ((c5 << 1) | (c4 >>> 31));\n      s[2] ^= h;\n      s[3] ^= l;\n      s[12] ^= h;\n      s[13] ^= l;\n      s[22] ^= h;\n      s[23] ^= l;\n      s[32] ^= h;\n      s[33] ^= l;\n      s[42] ^= h;\n      s[43] ^= l;\n      h = c2 ^ ((c6 << 1) | (c7 >>> 31));\n      l = c3 ^ ((c7 << 1) | (c6 >>> 31));\n      s[4] ^= h;\n      s[5] ^= l;\n      s[14] ^= h;\n      s[15] ^= l;\n      s[24] ^= h;\n      s[25] ^= l;\n      s[34] ^= h;\n      s[35] ^= l;\n      s[44] ^= h;\n      s[45] ^= l;\n      h = c4 ^ ((c8 << 1) | (c9 >>> 31));\n      l = c5 ^ ((c9 << 1) | (c8 >>> 31));\n      s[6] ^= h;\n      s[7] ^= l;\n      s[16] ^= h;\n      s[17] ^= l;\n      s[26] ^= h;\n      s[27] ^= l;\n      s[36] ^= h;\n      s[37] ^= l;\n      s[46] ^= h;\n      s[47] ^= l;\n      h = c6 ^ ((c0 << 1) | (c1 >>> 31));\n      l = c7 ^ ((c1 << 1) | (c0 >>> 31));\n      s[8] ^= h;\n      s[9] ^= l;\n      s[18] ^= h;\n      s[19] ^= l;\n      s[28] ^= h;\n      s[29] ^= l;\n      s[38] ^= h;\n      s[39] ^= l;\n      s[48] ^= h;\n      s[49] ^= l;\n\n      b0 = s[0];\n      b1 = s[1];\n      b32 = (s[11] << 4) | (s[10] >>> 28);\n      b33 = (s[10] << 4) | (s[11] >>> 28);\n      b14 = (s[20] << 3) | (s[21] >>> 29);\n      b15 = (s[21] << 3) | (s[20] >>> 29);\n      b46 = (s[31] << 9) | (s[30] >>> 23);\n      b47 = (s[30] << 9) | (s[31] >>> 23);\n      b28 = (s[40] << 18) | (s[41] >>> 14);\n      b29 = (s[41] << 18) | (s[40] >>> 14);\n      b20 = (s[2] << 1) | (s[3] >>> 31);\n      b21 = (s[3] << 1) | (s[2] >>> 31);\n      b2 = (s[13] << 12) | (s[12] >>> 20);\n      b3 = (s[12] << 12) | (s[13] >>> 20);\n      b34 = (s[22] << 10) | (s[23] >>> 22);\n      b35 = (s[23] << 10) | (s[22] >>> 22);\n      b16 = (s[33] << 13) | (s[32] >>> 19);\n      b17 = (s[32] << 13) | (s[33] >>> 19);\n      b48 = (s[42] << 2) | (s[43] >>> 30);\n      b49 = (s[43] << 2) | (s[42] >>> 30);\n      b40 = (s[5] << 30) | (s[4] >>> 2);\n      b41 = (s[4] << 30) | (s[5] >>> 2);\n      b22 = (s[14] << 6) | (s[15] >>> 26);\n      b23 = (s[15] << 6) | (s[14] >>> 26);\n      b4 = (s[25] << 11) | (s[24] >>> 21);\n      b5 = (s[24] << 11) | (s[25] >>> 21);\n      b36 = (s[34] << 15) | (s[35] >>> 17);\n      b37 = (s[35] << 15) | (s[34] >>> 17);\n      b18 = (s[45] << 29) | (s[44] >>> 3);\n      b19 = (s[44] << 29) | (s[45] >>> 3);\n      b10 = (s[6] << 28) | (s[7] >>> 4);\n      b11 = (s[7] << 28) | (s[6] >>> 4);\n      b42 = (s[17] << 23) | (s[16] >>> 9);\n      b43 = (s[16] << 23) | (s[17] >>> 9);\n      b24 = (s[26] << 25) | (s[27] >>> 7);\n      b25 = (s[27] << 25) | (s[26] >>> 7);\n      b6 = (s[36] << 21) | (s[37] >>> 11);\n      b7 = (s[37] << 21) | (s[36] >>> 11);\n      b38 = (s[47] << 24) | (s[46] >>> 8);\n      b39 = (s[46] << 24) | (s[47] >>> 8);\n      b30 = (s[8] << 27) | (s[9] >>> 5);\n      b31 = (s[9] << 27) | (s[8] >>> 5);\n      b12 = (s[18] << 20) | (s[19] >>> 12);\n      b13 = (s[19] << 20) | (s[18] >>> 12);\n      b44 = (s[29] << 7) | (s[28] >>> 25);\n      b45 = (s[28] << 7) | (s[29] >>> 25);\n      b26 = (s[38] << 8) | (s[39] >>> 24);\n      b27 = (s[39] << 8) | (s[38] >>> 24);\n      b8 = (s[48] << 14) | (s[49] >>> 18);\n      b9 = (s[49] << 14) | (s[48] >>> 18);\n\n      s[0] = b0 ^ (~b2 & b4);\n      s[1] = b1 ^ (~b3 & b5);\n      s[10] = b10 ^ (~b12 & b14);\n      s[11] = b11 ^ (~b13 & b15);\n      s[20] = b20 ^ (~b22 & b24);\n      s[21] = b21 ^ (~b23 & b25);\n      s[30] = b30 ^ (~b32 & b34);\n      s[31] = b31 ^ (~b33 & b35);\n      s[40] = b40 ^ (~b42 & b44);\n      s[41] = b41 ^ (~b43 & b45);\n      s[2] = b2 ^ (~b4 & b6);\n      s[3] = b3 ^ (~b5 & b7);\n      s[12] = b12 ^ (~b14 & b16);\n      s[13] = b13 ^ (~b15 & b17);\n      s[22] = b22 ^ (~b24 & b26);\n      s[23] = b23 ^ (~b25 & b27);\n      s[32] = b32 ^ (~b34 & b36);\n      s[33] = b33 ^ (~b35 & b37);\n      s[42] = b42 ^ (~b44 & b46);\n      s[43] = b43 ^ (~b45 & b47);\n      s[4] = b4 ^ (~b6 & b8);\n      s[5] = b5 ^ (~b7 & b9);\n      s[14] = b14 ^ (~b16 & b18);\n      s[15] = b15 ^ (~b17 & b19);\n      s[24] = b24 ^ (~b26 & b28);\n      s[25] = b25 ^ (~b27 & b29);\n      s[34] = b34 ^ (~b36 & b38);\n      s[35] = b35 ^ (~b37 & b39);\n      s[44] = b44 ^ (~b46 & b48);\n      s[45] = b45 ^ (~b47 & b49);\n      s[6] = b6 ^ (~b8 & b0);\n      s[7] = b7 ^ (~b9 & b1);\n      s[16] = b16 ^ (~b18 & b10);\n      s[17] = b17 ^ (~b19 & b11);\n      s[26] = b26 ^ (~b28 & b20);\n      s[27] = b27 ^ (~b29 & b21);\n      s[36] = b36 ^ (~b38 & b30);\n      s[37] = b37 ^ (~b39 & b31);\n      s[46] = b46 ^ (~b48 & b40);\n      s[47] = b47 ^ (~b49 & b41);\n      s[8] = b8 ^ (~b0 & b2);\n      s[9] = b9 ^ (~b1 & b3);\n      s[18] = b18 ^ (~b10 & b12);\n      s[19] = b19 ^ (~b11 & b13);\n      s[28] = b28 ^ (~b20 & b22);\n      s[29] = b29 ^ (~b21 & b23);\n      s[38] = b38 ^ (~b30 & b32);\n      s[39] = b39 ^ (~b31 & b33);\n      s[48] = b48 ^ (~b40 & b42);\n      s[49] = b49 ^ (~b41 & b43);\n\n      s[0] ^= RC[n];\n      s[1] ^= RC[n + 1];\n    }\n  };\n\n  if (COMMON_JS) {\n    module.exports = methods;\n  } else {\n    for (i = 0; i < methodNames.length; ++i) {\n      root[methodNames[i]] = methods[methodNames[i]];\n    }\n    if (AMD) {\n      define(function () {\n        return methods;\n      });\n    }\n  }\n})();\n","import BN from 'bn.js'\nimport sha3 from 'js-sha3'\n\nabstract class DataStr {\n  val: string\n  constructor (val: string) {\n    if (isNaN(val as any)) throw Error('NaN. Not a valid input.')\n    this.val = val.toString()\n  }\n\n  toString () {\n    return this.val\n  }\n\n  toJSON () {\n    return this.toString()\n  }\n\n  eq (n: DataStr): boolean {\n    return this.toBN().eq(n.toBN())\n  }\n\n  abstract toBN (): BN\n}\n\nexport class HexString extends DataStr {\n  isHex = true\n  constructor (val: string) {\n    super(val)\n    if (!this.val.startsWith('0x'))\n      throw Error(`Invalid value. ${val} does not start with 0x`)\n    if (this.val.length % 2 !== 0) {\n      this.val = `0x0${this.val.substr(2)}`\n    }\n  }\n\n  toBN (): BN {\n    return new BN(this.val.slice(2), 'hex')\n  }\n\n  byteLength () {\n    return Math.ceil((this.val.length - 2) / 2)\n  }\n\n  protected assertLength (len: number) {\n    const leftPadding = len * 2 - (this.val.length - 2)\n    if (leftPadding < 0) throw `It has ${this.byteLength()} bytes`\n    else if (leftPadding > 0) {\n      const newVal = `0x${Array(leftPadding)\n        .fill('0')\n        .join('')}${this.val.slice(2)}`\n      this.val = newVal\n    }\n  }\n\n  static from (val: string): HexString {\n    return new HexString(val)\n  }\n\n  toUintString (): UintString {\n    return new UintString(this.toBN().toString(10))\n  }\n\n  toBuffer (): Buffer {\n    return Buffer.from(this.val.slice(2), 'hex')\n  }\n}\n\nexport class NumString extends DataStr {\n  isNum = true\n  constructor (val: string) {\n    super(val)\n    if (val.startsWith('0x'))\n      throw Error(`It is not a number. ${val} starts with 0x.`)\n    // always remove prefixed zeroes\n    const prefix = this.val.startsWith('-') ? '-' : ''\n    while (this.val.startsWith('0') && this.val.length > 1) {\n      this.val = this.val.slice(1)\n    }\n    this.val = prefix + this.val\n  }\n\n  static from (val: string): NumString {\n    return new NumString(val)\n  }\n\n  toBN (): BN {\n    return new BN(this.val, 10)\n  }\n\n  toBytes (): HexString {\n    return new HexString(`0x${this.toBN().toString(16)}`)\n  }\n\n  toBuffer (): Buffer {\n    return this.toBytes().toBuffer()\n  }\n}\n\nexport type bytes = 'byte' | 'bytes2' | 'bytes3'\n\nexport class UintString extends NumString {\n  isUint = true\n\n  constructor (val: string) {\n    super(val)\n    if (this.val.startsWith('-'))\n      throw Error('It can not have a negative number.')\n  }\n\n  assertThreshold (threshold: string) {\n    if (this.val.padStart(threshold.length, '0') >= threshold) {\n      throw Error('Overflow.')\n    }\n  }\n\n  static from (val: string): UintString {\n    return new UintString(val)\n  }\n\n  toHexString (): HexString {\n    return new HexString(`0x${this.toBN().toString(16)}`)\n  }\n}\n\nexport class IntString extends NumString {\n  isInt = true\n  constructor (val: string) {\n    super(val)\n  }\n  assertThreshold (threshold: string) {\n    if (this.val.startsWith('-')) {\n      if (this.val.slice(1) > threshold) throw Error('Underflow.')\n    } else {\n      if (this.val >= threshold) throw Error('Overflow.')\n    }\n  }\n  static from (val: string): IntString {\n    return new IntString(val)\n  }\n}\n\nexport class Bytes extends HexString {\n  isBytes = true\n\n  constructor (val: string) {\n    super(val)\n  }\n\n  static from (val: string): Bytes {\n    return new Bytes(val)\n  }\n}\n\nexport class Byte extends HexString {\n  isByte = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(1)\n  }\n\n  static from (val: string): Byte {\n    return new Byte(val)\n  }\n\n  toUint (): Uint8 {\n    return new Uint8(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes2 extends HexString {\n  isBytes2 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(2)\n  }\n\n  static from (val: string): Bytes2 {\n    return new Bytes2(val)\n  }\n\n  toUint (): Uint16 {\n    return new Uint16(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes3 extends HexString {\n  isBytes3 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(3)\n  }\n\n  static from (val: string): Bytes3 {\n    return new Bytes3(val)\n  }\n\n  toUint (): Uint24 {\n    return new Uint24(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes4 extends HexString {\n  isBytes4 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(4)\n  }\n\n  static from (val: string): Bytes4 {\n    return new Bytes4(val)\n  }\n\n  toUint (): Uint32 {\n    return new Uint32(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes5 extends HexString {\n  isBytes5 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(5)\n  }\n\n  static from (val: string): Bytes5 {\n    return new Bytes5(val)\n  }\n\n  toUint (): Uint40 {\n    return new Uint40(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes6 extends HexString {\n  isBytes6 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(6)\n  }\n\n  static from (val: string): Bytes6 {\n    return new Bytes6(val)\n  }\n\n  toUint (): Uint48 {\n    return new Uint48(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes7 extends HexString {\n  isBytes7 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(7)\n  }\n\n  static from (val: string): Bytes7 {\n    return new Bytes7(val)\n  }\n\n  toUint (): Uint56 {\n    return new Uint56(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes8 extends HexString {\n  isBytes8 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(8)\n  }\n\n  static from (val: string): Bytes8 {\n    return new Bytes8(val)\n  }\n\n  toUint (): Uint64 {\n    return new Uint64(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes9 extends HexString {\n  isBytes9 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(9)\n  }\n\n  static from (val: string): Bytes9 {\n    return new Bytes9(val)\n  }\n\n  toUint (): Uint72 {\n    return new Uint72(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes10 extends HexString {\n  isBytes10 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(10)\n  }\n\n  static from (val: string): Bytes10 {\n    return new Bytes10(val)\n  }\n\n  toUint (): Uint80 {\n    return new Uint80(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes11 extends HexString {\n  isBytes11 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(11)\n  }\n\n  static from (val: string): Bytes11 {\n    return new Bytes11(val)\n  }\n\n  toUint (): Uint88 {\n    return new Uint88(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes12 extends HexString {\n  isBytes12 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(12)\n  }\n\n  static from (val: string): Bytes12 {\n    return new Bytes12(val)\n  }\n\n  toUint (): Uint96 {\n    return new Uint96(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes13 extends HexString {\n  isBytes13 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(13)\n  }\n\n  static from (val: string): Bytes13 {\n    return new Bytes13(val)\n  }\n\n  toUint (): Uint104 {\n    return new Uint104(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes14 extends HexString {\n  isBytes14 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(14)\n  }\n\n  static from (val: string): Bytes14 {\n    return new Bytes14(val)\n  }\n\n  toUint (): Uint112 {\n    return new Uint112(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes15 extends HexString {\n  isBytes15 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(15)\n  }\n\n  static from (val: string): Bytes15 {\n    return new Bytes15(val)\n  }\n\n  toUint (): Uint120 {\n    return new Uint120(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes16 extends HexString {\n  isBytes16 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(16)\n  }\n\n  static from (val: string): Bytes16 {\n    return new Bytes16(val)\n  }\n\n  toUint (): Uint128 {\n    return new Uint128(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes17 extends HexString {\n  isBytes17 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(17)\n  }\n\n  static from (val: string): Bytes17 {\n    return new Bytes17(val)\n  }\n\n  toUint (): Uint136 {\n    return new Uint136(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes18 extends HexString {\n  isBytes18 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(18)\n  }\n\n  static from (val: string): Bytes18 {\n    return new Bytes18(val)\n  }\n\n  toUint (): Uint144 {\n    return new Uint144(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes19 extends HexString {\n  isBytes19 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(19)\n  }\n\n  static from (val: string): Bytes19 {\n    return new Bytes19(val)\n  }\n\n  toUint (): Uint152 {\n    return new Uint152(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes20 extends HexString {\n  isBytes20 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(20)\n  }\n\n  static from (val: string): Bytes20 {\n    return new Bytes20(val)\n  }\n\n  toUint (): Uint160 {\n    return new Uint160(this.toBN().toString(10))\n  }\n\n  toAddress (): Address {\n    return new Address(this.val)\n  }\n}\n\nexport class Bytes21 extends HexString {\n  isBytes21 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(21)\n  }\n\n  static from (val: string): Bytes21 {\n    return new Bytes21(val)\n  }\n\n  toUint (): Uint168 {\n    return new Uint168(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes22 extends HexString {\n  isBytes22 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(22)\n  }\n\n  static from (val: string): Bytes22 {\n    return new Bytes22(val)\n  }\n\n  toUint (): Uint176 {\n    return new Uint176(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes23 extends HexString {\n  isBytes23 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(23)\n  }\n\n  static from (val: string): Bytes23 {\n    return new Bytes23(val)\n  }\n\n  toUint (): Uint184 {\n    return new Uint184(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes24 extends HexString {\n  isBytes24 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(24)\n  }\n\n  static from (val: string): Bytes24 {\n    return new Bytes24(val)\n  }\n\n  toUint (): Uint192 {\n    return new Uint192(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes25 extends HexString {\n  isBytes25 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(25)\n  }\n\n  static from (val: string): Bytes25 {\n    return new Bytes25(val)\n  }\n\n  toUint (): Uint200 {\n    return new Uint200(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes26 extends HexString {\n  isBytes26 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(26)\n  }\n\n  static from (val: string): Bytes26 {\n    return new Bytes26(val)\n  }\n\n  toUint (): Uint208 {\n    return new Uint208(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes27 extends HexString {\n  isBytes27 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(27)\n  }\n\n  static from (val: string): Bytes27 {\n    return new Bytes27(val)\n  }\n\n  toUint (): Uint216 {\n    return new Uint216(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes28 extends HexString {\n  isBytes28 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(28)\n  }\n\n  static from (val: string): Bytes28 {\n    return new Bytes28(val)\n  }\n\n  toUint (): Uint224 {\n    return new Uint224(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes29 extends HexString {\n  isBytes29 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(29)\n  }\n\n  static from (val: string): Bytes29 {\n    return new Bytes29(val)\n  }\n\n  toUint (): Uint232 {\n    return new Uint232(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes30 extends HexString {\n  isBytes30 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(30)\n  }\n\n  static from (val: string): Bytes30 {\n    return new Bytes30(val)\n  }\n\n  toUint (): Uint240 {\n    return new Uint240(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes31 extends HexString {\n  isBytes31 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(31)\n  }\n\n  static from (val: string): Bytes31 {\n    return new Bytes31(val)\n  }\n\n  toUint (): Uint248 {\n    return new Uint248(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes32 extends HexString {\n  isBytes32 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(32)\n  }\n\n  static from (val: string): Bytes32 {\n    return new Bytes32(val)\n  }\n\n  toUint (): Uint256 {\n    return new Uint256(this.toBN().toString(10))\n  }\n}\n\nexport class Uint8 extends UintString {\n  isUint8 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('256')\n  }\n  static from (val: string): Uint8 {\n    return new Uint8(val)\n  }\n  toByte (): Byte {\n    return new Byte(`0x${this.toBN().toString(16, 2)}`)\n  }\n}\n\nexport class Uint16 extends UintString {\n  isUint16 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('65536')\n  }\n  static from (val: string): Uint16 {\n    return new Uint16(val)\n  }\n\n  toBytes (): Bytes2 {\n    return new Bytes2(`0x${this.toBN().toString(16, 4)}`)\n  }\n}\n\nexport class Uint24 extends UintString {\n  isUint24 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('16777216')\n  }\n  static from (val: string): Uint24 {\n    return new Uint24(val)\n  }\n  toBytes (): Bytes3 {\n    return new Bytes3(`0x${this.toBN().toString(16, 6)}`)\n  }\n}\n\nexport class Uint32 extends UintString {\n  isUint32 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('4294967296')\n  }\n  static from (val: string): Uint32 {\n    return new Uint32(val)\n  }\n  toBytes (): Bytes4 {\n    return new Bytes4(`0x${this.toBN().toString(16, 8)}`)\n  }\n}\n\nexport class Uint40 extends UintString {\n  isUint40 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('1099511627776')\n  }\n  static from (val: string): Uint40 {\n    return new Uint40(val)\n  }\n  toBytes (): Bytes5 {\n    return new Bytes5(`0x${this.toBN().toString(16, 10)}`)\n  }\n}\n\nexport class Uint48 extends UintString {\n  isUint48 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('281474976710656')\n  }\n  static from (val: string): Uint48 {\n    return new Uint48(val)\n  }\n  toBytes (): Bytes6 {\n    return new Bytes6(`0x${this.toBN().toString(16, 12)}`)\n  }\n}\n\nexport class Uint56 extends UintString {\n  isUint56 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('72057594037927936')\n  }\n  static from (val: string): Uint56 {\n    return new Uint56(val)\n  }\n  toBytes (): Bytes7 {\n    return new Bytes7(`0x${this.toBN().toString(16, 14)}`)\n  }\n}\n\nexport class Uint64 extends UintString {\n  isUint64 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('18446744073709551616')\n  }\n  static from (val: string): Uint64 {\n    return new Uint64(val)\n  }\n  toBytes (): Bytes8 {\n    return new Bytes8(`0x${this.toBN().toString(16, 16)}`)\n  }\n}\n\nexport class Uint72 extends UintString {\n  isUint72 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('4722366482869645213696')\n  }\n  static from (val: string): Uint72 {\n    return new Uint72(val)\n  }\n  toBytes (): Bytes9 {\n    return new Bytes9(`0x${this.toBN().toString(16, 18)}`)\n  }\n}\n\nexport class Uint80 extends UintString {\n  isUint80 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('1208925819614629174706176')\n  }\n  static from (val: string): Uint80 {\n    return new Uint80(val)\n  }\n  toBytes (): Bytes10 {\n    return new Bytes10(`0x${this.toBN().toString(16, 20)}`)\n  }\n}\n\nexport class Uint88 extends UintString {\n  isUint88 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('309485009821345068724781056')\n  }\n  static from (val: string): Uint88 {\n    return new Uint88(val)\n  }\n  toBytes (): Bytes11 {\n    return new Bytes11(`0x${this.toBN().toString(16, 22)}`)\n  }\n}\n\nexport class Uint96 extends UintString {\n  isUint96 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('79228162514264337593543950336')\n  }\n  static from (val: string): Uint96 {\n    return new Uint96(val)\n  }\n  toBytes (): Bytes12 {\n    return new Bytes12(`0x${this.toBN().toString(16, 24)}`)\n  }\n}\n\nexport class Uint104 extends UintString {\n  isUint104 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('20282409603651670423947251286016')\n  }\n  static from (val: string): Uint104 {\n    return new Uint104(val)\n  }\n  toBytes (): Bytes13 {\n    return new Bytes13(`0x${this.toBN().toString(16, 26)}`)\n  }\n}\n\nexport class Uint112 extends UintString {\n  isUint112 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('5192296858534827628530496329220096')\n  }\n  static from (val: string): Uint112 {\n    return new Uint112(val)\n  }\n  toBytes (): Bytes14 {\n    return new Bytes14(`0x${this.toBN().toString(16, 28)}`)\n  }\n}\n\nexport class Uint120 extends UintString {\n  isUint120 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('1329227995784915872903807060280344576')\n  }\n  static from (val: string): Uint120 {\n    return new Uint120(val)\n  }\n  toBytes (): Bytes15 {\n    return new Bytes15(`0x${this.toBN().toString(16, 30)}`)\n  }\n}\n\nexport class Uint128 extends UintString {\n  isUint128 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('340282366920938463463374607431768211456')\n  }\n  static from (val: string): Uint128 {\n    return new Uint128(val)\n  }\n  toBytes (): Bytes16 {\n    return new Bytes16(`0x${this.toBN().toString(16, 32)}`)\n  }\n}\n\nexport class Uint136 extends UintString {\n  isUint136 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('87112285931760246646623899502532662132736')\n  }\n  static from (val: string): Uint136 {\n    return new Uint136(val)\n  }\n  toBytes (): Bytes17 {\n    return new Bytes17(`0x${this.toBN().toString(16, 34)}`)\n  }\n}\n\nexport class Uint144 extends UintString {\n  isUint144 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('22300745198530623141535718272648361505980416')\n  }\n  static from (val: string): Uint144 {\n    return new Uint144(val)\n  }\n  toBytes (): Bytes18 {\n    return new Bytes18(`0x${this.toBN().toString(16, 36)}`)\n  }\n}\n\nexport class Uint152 extends UintString {\n  isUint152 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('5708990770823839524233143877797980545530986496')\n  }\n  static from (val: string): Uint152 {\n    return new Uint152(val)\n  }\n  toBytes (): Bytes19 {\n    return new Bytes19(`0x${this.toBN().toString(16, 38)}`)\n  }\n}\n\nexport class Uint160 extends UintString {\n  isUint160 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('1461501637330902918203684832716283019655932542976')\n  }\n  static from (val: string): Uint160 {\n    return new Uint160(val)\n  }\n  toBytes (): Bytes20 {\n    return new Bytes20(`0x${this.toBN().toString(16, 40)}`)\n  }\n}\n\nexport class Uint168 extends UintString {\n  isUint168 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('374144419156711147060143317175368453031918731001856')\n  }\n  static from (val: string): Uint168 {\n    return new Uint168(val)\n  }\n  toBytes (): Bytes21 {\n    return new Bytes21(`0x${this.toBN().toString(16, 42)}`)\n  }\n}\n\nexport class Uint176 extends UintString {\n  isUint176 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '95780971304118053647396689196894323976171195136475136'\n    )\n  }\n  static from (val: string): Uint176 {\n    return new Uint176(val)\n  }\n  toBytes (): Bytes22 {\n    return new Bytes22(`0x${this.toBN().toString(16, 44)}`)\n  }\n}\n\nexport class Uint184 extends UintString {\n  isUint184 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '24519928653854221733733552434404946937899825954937634816'\n    )\n  }\n  static from (val: string): Uint184 {\n    return new Uint184(val)\n  }\n  toBytes (): Bytes23 {\n    return new Bytes23(`0x${this.toBN().toString(16, 46)}`)\n  }\n}\n\nexport class Uint192 extends UintString {\n  isUint192 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '6277101735386680763835789423207666416102355444464034512896'\n    )\n  }\n  static from (val: string): Uint192 {\n    return new Uint192(val)\n  }\n  toBytes (): Bytes24 {\n    return new Bytes24(`0x${this.toBN().toString(16, 48)}`)\n  }\n}\n\nexport class Uint200 extends UintString {\n  isUint200 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '1606938044258990275541962092341162602522202993782792835301376'\n    )\n  }\n  static from (val: string): Uint200 {\n    return new Uint200(val)\n  }\n  toBytes (): Bytes25 {\n    return new Bytes25(`0x${this.toBN().toString(16, 50)}`)\n  }\n}\n\nexport class Uint208 extends UintString {\n  isUint208 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '411376139330301510538742295639337626245683966408394965837152256'\n    )\n  }\n  static from (val: string): Uint208 {\n    return new Uint208(val)\n  }\n  toBytes (): Bytes26 {\n    return new Bytes26(`0x${this.toBN().toString(16, 52)}`)\n  }\n}\n\nexport class Uint216 extends UintString {\n  isUint216 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '105312291668557186697918027683670432318895095400549111254310977536'\n    )\n  }\n  static from (val: string): Uint216 {\n    return new Uint216(val)\n  }\n  toBytes (): Bytes27 {\n    return new Bytes27(`0x${this.toBN().toString(16, 54)}`)\n  }\n}\n\nexport class Uint224 extends UintString {\n  isUint224 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '26959946667150639794667015087019630673637144422540572481103610249216'\n    )\n  }\n  static from (val: string): Uint224 {\n    return new Uint224(val)\n  }\n  toBytes (): Bytes28 {\n    return new Bytes28(`0x${this.toBN().toString(16, 56)}`)\n  }\n}\n\nexport class Uint232 extends UintString {\n  isUint232 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '6901746346790563787434755862277025452451108972170386555162524223799296'\n    )\n  }\n  static from (val: string): Uint232 {\n    return new Uint232(val)\n  }\n  toBytes (): Bytes29 {\n    return new Bytes29(`0x${this.toBN().toString(16, 58)}`)\n  }\n}\n\nexport class Uint240 extends UintString {\n  isUint240 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '1766847064778384329583297500742918515827483896875618958121606201292619776'\n    )\n  }\n  static from (val: string): Uint240 {\n    return new Uint240(val)\n  }\n  toBytes (): Bytes30 {\n    return new Bytes30(`0x${this.toBN().toString(16, 60)}`)\n  }\n}\n\nexport class Uint248 extends UintString {\n  isUint248 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '452312848583266388373324160190187140051835877600158453279131187530910662656'\n    )\n  }\n  static from (val: string): Uint248 {\n    return new Uint248(val)\n  }\n  toBytes (): Bytes31 {\n    return new Bytes31(`0x${this.toBN().toString(16, 62)}`)\n  }\n}\n\nexport class Uint256 extends UintString {\n  isUint256 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '115792089237316195423570985008687907853269984665640564039457584007913129639936'\n    )\n  }\n  static from (val: string): Uint256 {\n    return new Uint256(val)\n  }\n  toBytes (): Bytes32 {\n    return new Bytes32(`0x${this.toBN().toString(16, 64)}`)\n  }\n}\n\nexport class Int8 extends IntString {\n  isInt8 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('128')\n  }\n  static from (val: string): Int8 {\n    return new Int8(val)\n  }\n}\n\nexport class Int16 extends IntString {\n  isInt16 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('32768')\n  }\n  static from (val: string): Int16 {\n    return new Int16(val)\n  }\n}\n\nexport class Int24 extends IntString {\n  isInt24 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('8388608')\n  }\n  static from (val: string): Int24 {\n    return new Int24(val)\n  }\n}\n\nexport class Int32 extends IntString {\n  isInt32 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('2147483648')\n  }\n  static from (val: string): Int32 {\n    return new Int32(val)\n  }\n}\n\nexport class Int40 extends IntString {\n  isInt40 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('549755813888')\n  }\n  static from (val: string): Int40 {\n    return new Int40(val)\n  }\n}\n\nexport class Int48 extends IntString {\n  isInt48 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('140737488355328')\n  }\n  static from (val: string): Int48 {\n    return new Int48(val)\n  }\n}\n\nexport class Int56 extends IntString {\n  isInt56 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('36028797018963968')\n  }\n  static from (val: string): Int56 {\n    return new Int56(val)\n  }\n}\n\nexport class Int64 extends IntString {\n  isInt64 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('9223372036854775808')\n  }\n  static from (val: string): Int64 {\n    return new Int64(val)\n  }\n}\n\nexport class Int72 extends IntString {\n  isInt72 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('2361183241434822606848')\n  }\n  static from (val: string): Int72 {\n    return new Int72(val)\n  }\n}\n\nexport class Int80 extends IntString {\n  isInt80 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('604462909807314587353088')\n  }\n  static from (val: string): Int80 {\n    return new Int80(val)\n  }\n}\n\nexport class Int88 extends IntString {\n  isInt88 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('154742504910672534362390528')\n  }\n  static from (val: string): Int88 {\n    return new Int88(val)\n  }\n}\n\nexport class Int96 extends IntString {\n  isInt96 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('39614081257132168796771975168')\n  }\n  static from (val: string): Int96 {\n    return new Int96(val)\n  }\n}\n\nexport class Int104 extends IntString {\n  isInt104 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('10141204801825835211973625643008')\n  }\n  static from (val: string): Int104 {\n    return new Int104(val)\n  }\n}\n\nexport class Int112 extends IntString {\n  isInt112 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('2596148429267413814265248164610048')\n  }\n  static from (val: string): Int112 {\n    return new Int112(val)\n  }\n}\n\nexport class Int120 extends IntString {\n  isInt120 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('664613997892457936451903530140172288')\n  }\n  static from (val: string): Int120 {\n    return new Int120(val)\n  }\n}\n\nexport class Int128 extends IntString {\n  isInt128 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('170141183460469231731687303715884105728')\n  }\n  static from (val: string): Int128 {\n    return new Int128(val)\n  }\n}\n\nexport class Int136 extends IntString {\n  isInt136 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('43556142965880123323311949751266331066368')\n  }\n  static from (val: string): Int136 {\n    return new Int136(val)\n  }\n}\n\nexport class Int144 extends IntString {\n  isInt144 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('11150372599265311570767859136324180752990208')\n  }\n  static from (val: string): Int144 {\n    return new Int144(val)\n  }\n}\n\nexport class Int152 extends IntString {\n  isInt152 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('2854495385411919762116571938898990272765493248')\n  }\n  static from (val: string): Int152 {\n    return new Int152(val)\n  }\n}\n\nexport class Int160 extends IntString {\n  isInt160 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('730750818665451459101842416358141509827966271488')\n  }\n  static from (val: string): Int160 {\n    return new Int160(val)\n  }\n}\n\nexport class Int168 extends IntString {\n  isInt168 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('187072209578355573530071658587684226515959365500928')\n  }\n  static from (val: string): Int168 {\n    return new Int168(val)\n  }\n}\n\nexport class Int176 extends IntString {\n  isInt176 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '47890485652059026823698344598447161988085597568237568'\n    )\n  }\n  static from (val: string): Int176 {\n    return new Int176(val)\n  }\n}\n\nexport class Int184 extends IntString {\n  isInt184 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '12259964326927110866866776217202473468949912977468817408'\n    )\n  }\n  static from (val: string): Int184 {\n    return new Int184(val)\n  }\n}\n\nexport class Int192 extends IntString {\n  isInt192 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '3138550867693340381917894711603833208051177722232017256448'\n    )\n  }\n  static from (val: string): Int192 {\n    return new Int192(val)\n  }\n}\n\nexport class Int200 extends IntString {\n  isInt200 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '803469022129495137770981046170581301261101496891396417650688'\n    )\n  }\n  static from (val: string): Int200 {\n    return new Int200(val)\n  }\n}\n\nexport class Int208 extends IntString {\n  isInt208 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '205688069665150755269371147819668813122841983204197482918576128'\n    )\n  }\n  static from (val: string): Int208 {\n    return new Int208(val)\n  }\n}\n\nexport class Int216 extends IntString {\n  isInt216 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '52656145834278593348959013841835216159447547700274555627155488768'\n    )\n  }\n  static from (val: string): Int216 {\n    return new Int216(val)\n  }\n}\n\nexport class Int224 extends IntString {\n  isInt224 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '13479973333575319897333507543509815336818572211270286240551805124608'\n    )\n  }\n  static from (val: string): Int224 {\n    return new Int224(val)\n  }\n}\n\nexport class Int232 extends IntString {\n  isInt232 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '3450873173395281893717377931138512726225554486085193277581262111899648'\n    )\n  }\n  static from (val: string): Int232 {\n    return new Int232(val)\n  }\n}\n\nexport class Int240 extends IntString {\n  isInt240 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '883423532389192164791648750371459257913741948437809479060803100646309888'\n    )\n  }\n  static from (val: string): Int240 {\n    return new Int240(val)\n  }\n}\n\nexport class Int248 extends IntString {\n  isInt248 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '226156424291633194186662080095093570025917938800079226639565593765455331328'\n    )\n  }\n  static from (val: string): Int248 {\n    return new Int248(val)\n  }\n}\n\nexport class Int256 extends IntString {\n  isInt256 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '57896044618658097711785492504343953926634992332820282019728792003956564819968'\n    )\n  }\n  static from (val: string): Int256 {\n    return new Int256(val)\n  }\n}\n\nexport class Address extends Bytes20 {\n  constructor (val: string) {\n    super(val)\n    this.val = Address.toChecksumAddress(val)\n  }\n\n  static from (val: string): Address {\n    return new Address(val)\n  }\n\n  /**\n   * @dev Check EIP-55 for the details\n   * https://github.com/ethereum/EIPs/blob/master/EIPS/eip-55.md#implementation\n   * @param address Ethereum 20 bytes address value\n   */\n  static toChecksumAddress (address: string) {\n    address = address.toLowerCase().replace('0x', '')\n    const hash = sha3.keccak256\n      .update(address)\n      .hex()\n    let ret = '0x'\n    for (let i = 0; i < address.length; i += 1) {\n      if (parseInt(hash[i], 16) >= 8) {\n        ret += address[i].toUpperCase()\n      } else {\n        ret += address[i]\n      }\n    }\n    return ret\n  }\n}\n"]},"metadata":{},"sourceType":"module"}