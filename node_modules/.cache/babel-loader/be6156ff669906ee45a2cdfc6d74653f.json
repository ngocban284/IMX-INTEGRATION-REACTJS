{"ast":null,"code":"/**\n * Circular Shift Right\n *\n * @example\n * circularShiftRight([1,0,1,1,0,1]) => [1,1,0,1,1,0]\n *\n * @see {@link https://en.wikipedia.org/wiki/Circular_shift}\n *\n * @param {Array} bits input data\n * @param {number} amount how far should it be shifted\n * @return {Array} [ROR bits]\n */\nexport default (function (bits, amount) {\n  var result = [];\n  if (amount > bits.length) throw new Error('shift amount can’t be larger than bits array length');\n\n  for (var i = 0; i < bits.length; i++) result[(i + amount) % bits.length] = bits[i];\n\n  return result;\n});","map":{"version":3,"names":["bits","amount","result","length","Error","i"],"sources":["/Users/ngocban/Desktop/imx-integration-reactjs/node_modules/bitwise/esm/bits/circular-shift-right.js"],"sourcesContent":["/**\n * Circular Shift Right\n *\n * @example\n * circularShiftRight([1,0,1,1,0,1]) => [1,1,0,1,1,0]\n *\n * @see {@link https://en.wikipedia.org/wiki/Circular_shift}\n *\n * @param {Array} bits input data\n * @param {number} amount how far should it be shifted\n * @return {Array} [ROR bits]\n */\nexport default (function (bits, amount) {\n    var result = [];\n    if (amount > bits.length)\n        throw new Error('shift amount can’t be larger than bits array length');\n    for (var i = 0; i < bits.length; i++)\n        result[(i + amount) % bits.length] = bits[i];\n    return result;\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,UAAUA,IAAV,EAAgBC,MAAhB,EAAwB;EACpC,IAAIC,MAAM,GAAG,EAAb;EACA,IAAID,MAAM,GAAGD,IAAI,CAACG,MAAlB,EACI,MAAM,IAAIC,KAAJ,CAAU,qDAAV,CAAN;;EACJ,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,IAAI,CAACG,MAAzB,EAAiCE,CAAC,EAAlC,EACIH,MAAM,CAAC,CAACG,CAAC,GAAGJ,MAAL,IAAeD,IAAI,CAACG,MAArB,CAAN,GAAqCH,IAAI,CAACK,CAAD,CAAzC;;EACJ,OAAOH,MAAP;AACH,CAPD"},"metadata":{},"sourceType":"module"}