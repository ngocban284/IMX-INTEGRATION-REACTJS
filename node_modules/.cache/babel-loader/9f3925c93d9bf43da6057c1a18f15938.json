{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.intersperse = exports.prependToAll = exports.unzip = exports.zip = exports.zipWith = exports.sort = exports.lefts = exports.rights = exports.reverse = exports.modifyAt = exports.deleteAt = exports.updateAt = exports.insertAt = exports.findLastIndex = exports.findLastMap = exports.findLast = exports.findFirstMap = exports.findFirst = exports.findIndex = exports.dropLeftWhile = exports.dropRight = exports.dropLeft = exports.spanLeft = exports.takeLeftWhile = exports.takeRight = exports.takeLeft = exports.init = exports.tail = exports.last = exports.head = exports.snoc = exports.cons = exports.lookup = exports.isOutOfBound = exports.isNonEmpty = exports.isEmpty = exports.scanRight = exports.scanLeft = exports.foldRight = exports.foldLeft = exports.flatten = exports.replicate = exports.range = exports.makeBy = exports.getOrd = exports.getEq = exports.getMonoid = exports.getShow = exports.toArray = exports.fromArray = void 0;\nexports.FunctorWithIndex = exports.Functor = exports.URI = exports.unfold = exports.wilt = exports.wither = exports.traverseWithIndex = exports.sequence = exports.traverse = exports.reduceRightWithIndex = exports.reduceRight = exports.reduceWithIndex = exports.foldMap = exports.reduce = exports.foldMapWithIndex = exports.duplicate = exports.extend = exports.filterWithIndex = exports.partitionMapWithIndex = exports.partitionMap = exports.partitionWithIndex = exports.partition = exports.compact = exports.filterMap = exports.filterMapWithIndex = exports.filter = exports.separate = exports.mapWithIndex = exports.map = exports.chainFirst = exports.chainWithIndex = exports.chain = exports.apSecond = exports.apFirst = exports.ap = exports.alt = exports.altW = exports.zero = exports.of = exports.difference = exports.intersection = exports.union = exports.comprehension = exports.chunksOf = exports.splitAt = exports.chop = exports.sortBy = exports.uniq = exports.elem = exports.rotate = void 0;\nexports.apS = exports.bind = exports.bindTo = exports.Do = exports.some = exports.every = exports.empty = exports.unsafeDeleteAt = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.readonlyArray = exports.Witherable = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.FilterableWithIndex = exports.Filterable = exports.Compactable = exports.Extend = exports.Alternative = exports.Alt = exports.Unfoldable = exports.Monad = exports.Applicative = void 0;\n\nvar function_1 = require(\"./function\");\n\nvar O = __importStar(require(\"./Option\"));\n\nvar Ord_1 = require(\"./Ord\"); // -------------------------------------------------------------------------------------\n// model\n// -------------------------------------------------------------------------------------\n\n/**\n * @category constructors\n * @since 2.5.0\n */\n// tslint:disable-next-line: readonly-array\n\n\nfunction fromArray(as) {\n  var l = as.length;\n\n  if (l === 0) {\n    return exports.empty;\n  }\n\n  var ras = Array(l);\n\n  for (var i = 0; i < l; i++) {\n    ras[i] = as[i];\n  }\n\n  return ras;\n}\n\nexports.fromArray = fromArray;\n/**\n * @category destructors\n * @since 2.5.0\n */\n// tslint:disable-next-line: readonly-array\n\nfunction toArray(ras) {\n  var l = ras.length;\n  var as = Array(l);\n\n  for (var i = 0; i < l; i++) {\n    as[i] = ras[i];\n  }\n\n  return as;\n}\n\nexports.toArray = toArray;\n/**\n * @category instances\n * @since 2.5.0\n */\n\nfunction getShow(S) {\n  return {\n    show: function (as) {\n      return \"[\" + as.map(S.show).join(', ') + \"]\";\n    }\n  };\n}\n\nexports.getShow = getShow;\n\nvar concat = function (x, y) {\n  var lenx = x.length;\n\n  if (lenx === 0) {\n    return y;\n  }\n\n  var leny = y.length;\n\n  if (leny === 0) {\n    return x;\n  }\n\n  var r = Array(lenx + leny);\n\n  for (var i = 0; i < lenx; i++) {\n    r[i] = x[i];\n  }\n\n  for (var i = 0; i < leny; i++) {\n    r[i + lenx] = y[i];\n  }\n\n  return r;\n};\n/**\n * Returns a `Monoid` for `ReadonlyArray<A>`\n *\n * @example\n * import { getMonoid } from 'fp-ts/ReadonlyArray'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.5.0\n */\n\n\nfunction getMonoid() {\n  return {\n    concat: concat,\n    empty: exports.empty\n  };\n}\n\nexports.getMonoid = getMonoid;\n/**\n * Derives an `Eq` over the `ReadonlyArray` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import { eqString } from 'fp-ts/Eq'\n * import { getEq } from 'fp-ts/ReadonlyArray'\n *\n * const E = getEq(eqString)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.5.0\n */\n\nfunction getEq(E) {\n  return {\n    equals: function (xs, ys) {\n      return xs === ys || xs.length === ys.length && xs.every(function (x, i) {\n        return E.equals(x, ys[i]);\n      });\n    }\n  };\n}\n\nexports.getEq = getEq;\n/**\n * Derives an `Ord` over the `ReadonlyArray` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/ReadonlyArray'\n * import { ordString } from 'fp-ts/Ord'\n *\n * const O = getOrd(ordString)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n *\n * @category instances\n * @since 2.5.0\n */\n\nfunction getOrd(O) {\n  return Ord_1.fromCompare(function (a, b) {\n    var aLen = a.length;\n    var bLen = b.length;\n    var len = Math.min(aLen, bLen);\n\n    for (var i = 0; i < len; i++) {\n      var ordering = O.compare(a[i], b[i]);\n\n      if (ordering !== 0) {\n        return ordering;\n      }\n    }\n\n    return Ord_1.ordNumber.compare(aLen, bLen);\n  });\n}\n\nexports.getOrd = getOrd;\n/**\n * Return a list of length `n` with element `i` initialized with `f(i)`\n *\n * @example\n * import { makeBy } from 'fp-ts/ReadonlyArray'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.5.0\n */\n\nfunction makeBy(n, f) {\n  // tslint:disable-next-line: readonly-array\n  var r = [];\n\n  for (var i = 0; i < n; i++) {\n    r.push(f(i));\n  }\n\n  return r;\n}\n\nexports.makeBy = makeBy;\n/**\n * Create an array containing a range of integers, including both endpoints\n *\n * @example\n * import { range } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.5.0\n */\n\nfunction range(start, end) {\n  return makeBy(end - start + 1, function (i) {\n    return start + i;\n  });\n}\n\nexports.range = range;\n/**\n * Create an array containing a value repeated the specified number of times\n *\n * @example\n * import { replicate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.5.0\n */\n\nfunction replicate(n, a) {\n  return makeBy(n, function () {\n    return a;\n  });\n}\n\nexports.replicate = replicate;\n/**\n * Removes one level of nesting\n *\n * Derivable from `Monad`.\n *\n * @example\n * import { flatten } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(flatten([[1], [2], [3]]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nfunction flatten(mma) {\n  var rLen = 0;\n  var len = mma.length;\n\n  for (var i = 0; i < len; i++) {\n    rLen += mma[i].length;\n  }\n\n  var r = Array(rLen);\n  var start = 0;\n\n  for (var i = 0; i < len; i++) {\n    var arr = mma[i];\n    var l = arr.length;\n\n    for (var j = 0; j < l; j++) {\n      r[j + start] = arr[j];\n    }\n\n    start += l;\n  }\n\n  return r;\n}\n\nexports.flatten = flatten;\n/**\n * Break an array into its first element and remaining elements\n *\n * @example\n * import { foldLeft } from 'fp-ts/ReadonlyArray'\n *\n * const len: <A>(as: ReadonlyArray<A>) => number = foldLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category destructors\n * @since 2.5.0\n */\n\nfunction foldLeft(onEmpty, onCons) {\n  return function (as) {\n    return isEmpty(as) ? onEmpty() : onCons(as[0], as.slice(1));\n  };\n}\n\nexports.foldLeft = foldLeft;\n/**\n * Break an array into its initial elements and the last element\n *\n * @category destructors\n * @since 2.5.0\n */\n\nfunction foldRight(onEmpty, onCons) {\n  return function (as) {\n    return isEmpty(as) ? onEmpty() : onCons(as.slice(0, as.length - 1), as[as.length - 1]);\n  };\n}\n\nexports.foldRight = foldRight;\n/**\n * Same as `reduce` but it carries over the intermediate steps\n *\n * @example\n * import { scanLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nfunction scanLeft(b, f) {\n  return function (as) {\n    var l = as.length; // tslint:disable-next-line: readonly-array\n\n    var r = new Array(l + 1);\n    r[0] = b;\n\n    for (var i = 0; i < l; i++) {\n      r[i + 1] = f(r[i], as[i]);\n    }\n\n    return r;\n  };\n}\n\nexports.scanLeft = scanLeft;\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nfunction scanRight(b, f) {\n  return function (as) {\n    var l = as.length; // tslint:disable-next-line: readonly-array\n\n    var r = new Array(l + 1);\n    r[l] = b;\n\n    for (var i = l - 1; i >= 0; i--) {\n      r[i] = f(as[i], r[i + 1]);\n    }\n\n    return r;\n  };\n}\n\nexports.scanRight = scanRight;\n/**\n * Test whether an array is empty\n *\n * @example\n * import { isEmpty } from 'fp-ts/ReadonlyArray'\n *\n * assert.strictEqual(isEmpty([]), true)\n *\n * @since 2.5.0\n */\n\nfunction isEmpty(as) {\n  return as.length === 0;\n}\n\nexports.isEmpty = isEmpty;\n/**\n * Test whether an array is non empty narrowing down the type to `NonEmptyReadonlyArray<A>`\n *\n * @category guards\n * @since 2.5.0\n */\n\nfunction isNonEmpty(as) {\n  return as.length > 0;\n}\n\nexports.isNonEmpty = isNonEmpty;\n/**\n * Test whether an array contains a particular index\n *\n * @since 2.5.0\n */\n\nfunction isOutOfBound(i, as) {\n  return i < 0 || i >= as.length;\n}\n\nexports.isOutOfBound = isOutOfBound;\n\nfunction lookup(i, as) {\n  return as === undefined ? function (as) {\n    return lookup(i, as);\n  } : isOutOfBound(i, as) ? O.none : O.some(as[i]);\n}\n\nexports.lookup = lookup;\n\nfunction cons(head, tail) {\n  if (tail === undefined) {\n    return function (tail) {\n      return cons(head, tail);\n    };\n  }\n\n  var len = tail.length;\n  var r = Array(len + 1);\n\n  for (var i = 0; i < len; i++) {\n    r[i + 1] = tail[i];\n  }\n\n  r[0] = head;\n  return r;\n}\n\nexports.cons = cons; // TODO: curry and make data-last in v3\n\n/**\n * Append an element to the end of an array, creating a new non empty array\n *\n * @example\n * import { snoc } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(snoc([1, 2, 3], 4), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.5.0\n */\n\nfunction snoc(init, end) {\n  var len = init.length;\n  var r = Array(len + 1);\n\n  for (var i = 0; i < len; i++) {\n    r[i] = init[i];\n  }\n\n  r[len] = end;\n  return r;\n}\n\nexports.snoc = snoc;\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @since 2.5.0\n */\n\nfunction head(as) {\n  return isEmpty(as) ? O.none : O.some(as[0]);\n}\n\nexports.head = head;\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @since 2.5.0\n */\n\nfunction last(as) {\n  return lookup(as.length - 1, as);\n}\n\nexports.last = last;\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @since 2.5.0\n */\n\nfunction tail(as) {\n  return isEmpty(as) ? O.none : O.some(as.slice(1));\n}\n\nexports.tail = tail;\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @since 2.5.0\n */\n\nfunction init(as) {\n  var len = as.length;\n  return len === 0 ? O.none : O.some(as.slice(0, len - 1));\n}\n\nexports.init = init;\n/**\n * Keep only a number of elements from the start of an array, creating a new array.\n * `n` must be a natural number\n *\n * @example\n * import { takeLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(takeLeft(2)([1, 2, 3]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nfunction takeLeft(n) {\n  return function (as) {\n    return as.slice(0, n);\n  };\n}\n\nexports.takeLeft = takeLeft;\n/**\n * Keep only a number of elements from the end of an array, creating a new array.\n * `n` must be a natural number\n *\n * @example\n * import { takeRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(takeRight(2)([1, 2, 3, 4, 5]), [4, 5])\n *\n * @since 2.5.0\n */\n\nfunction takeRight(n) {\n  return function (as) {\n    return n === 0 ? exports.empty : as.slice(-n);\n  };\n}\n\nexports.takeRight = takeRight;\n\nfunction takeLeftWhile(predicate) {\n  return function (as) {\n    var i = spanIndexUncurry(as, predicate);\n    var init = Array(i);\n\n    for (var j = 0; j < i; j++) {\n      init[j] = as[j];\n    }\n\n    return init;\n  };\n}\n\nexports.takeLeftWhile = takeLeftWhile;\n\nvar spanIndexUncurry = function (as, predicate) {\n  var l = as.length;\n  var i = 0;\n\n  for (; i < l; i++) {\n    if (!predicate(as[i])) {\n      break;\n    }\n  }\n\n  return i;\n};\n\nfunction spanLeft(predicate) {\n  return function (as) {\n    var i = spanIndexUncurry(as, predicate);\n    var init = Array(i);\n\n    for (var j = 0; j < i; j++) {\n      init[j] = as[j];\n    }\n\n    var l = as.length;\n    var rest = Array(l - i);\n\n    for (var j = i; j < l; j++) {\n      rest[j - i] = as[j];\n    }\n\n    return {\n      init: init,\n      rest: rest\n    };\n  };\n}\n\nexports.spanLeft = spanLeft;\n/**\n * Drop a number of elements from the start of an array, creating a new array\n *\n * @example\n * import { dropLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(dropLeft(2)([1, 2, 3]), [3])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nfunction dropLeft(n) {\n  return function (as) {\n    return as.slice(n, as.length);\n  };\n}\n\nexports.dropLeft = dropLeft;\n/**\n * Drop a number of elements from the end of an array, creating a new array\n *\n * @example\n * import { dropRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(dropRight(2)([1, 2, 3, 4, 5]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nfunction dropRight(n) {\n  return function (as) {\n    return as.slice(0, as.length - n);\n  };\n}\n\nexports.dropRight = dropRight;\n/**\n * Remove the longest initial subarray for which all element satisfy the specified predicate, creating a new array\n *\n * @example\n * import { dropLeftWhile } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(dropLeftWhile((n: number) => n % 2 === 1)([1, 3, 2, 4, 5]), [2, 4, 5])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nfunction dropLeftWhile(predicate) {\n  return function (as) {\n    var i = spanIndexUncurry(as, predicate);\n    var l = as.length;\n    var rest = Array(l - i);\n\n    for (var j = i; j < l; j++) {\n      rest[j - i] = as[j];\n    }\n\n    return rest;\n  };\n}\n\nexports.dropLeftWhile = dropLeftWhile;\n/**\n * Find the first index for which a predicate holds\n *\n * @example\n * import { findIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.5.0\n */\n\nfunction findIndex(predicate) {\n  return function (as) {\n    var len = as.length;\n\n    for (var i = 0; i < len; i++) {\n      if (predicate(as[i])) {\n        return O.some(i);\n      }\n    }\n\n    return O.none;\n  };\n}\n\nexports.findIndex = findIndex;\n\nfunction findFirst(predicate) {\n  return function (as) {\n    var len = as.length;\n\n    for (var i = 0; i < len; i++) {\n      if (predicate(as[i])) {\n        return O.some(as[i]);\n      }\n    }\n\n    return O.none;\n  };\n}\n\nexports.findFirst = findFirst;\n/**\n * Find the first element returned by an option based selector function\n *\n * @example\n * import { findFirstMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   name: string\n *   age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the first person that has an age\n * assert.deepStrictEqual(findFirstMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Mary'))\n *\n * @since 2.5.0\n */\n\nfunction findFirstMap(f) {\n  return function (as) {\n    var len = as.length;\n\n    for (var i = 0; i < len; i++) {\n      var v = f(as[i]);\n\n      if (O.isSome(v)) {\n        return v;\n      }\n    }\n\n    return O.none;\n  };\n}\n\nexports.findFirstMap = findFirstMap;\n\nfunction findLast(predicate) {\n  return function (as) {\n    var len = as.length;\n\n    for (var i = len - 1; i >= 0; i--) {\n      if (predicate(as[i])) {\n        return O.some(as[i]);\n      }\n    }\n\n    return O.none;\n  };\n}\n\nexports.findLast = findLast;\n/**\n * Find the last element returned by an option based selector function\n *\n * @example\n * import { findLastMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   name: string\n *   age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the last person that has an age\n * assert.deepStrictEqual(findLastMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Joey'))\n *\n * @since 2.5.0\n */\n\nfunction findLastMap(f) {\n  return function (as) {\n    var len = as.length;\n\n    for (var i = len - 1; i >= 0; i--) {\n      var v = f(as[i]);\n\n      if (O.isSome(v)) {\n        return v;\n      }\n    }\n\n    return O.none;\n  };\n}\n\nexports.findLastMap = findLastMap;\n/**\n * Returns the index of the last element of the list which matches the predicate\n *\n * @example\n * import { findLastIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   a: number\n *   b: number\n * }\n * const xs: ReadonlyArray<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { a: number }) => x.a === 4)(xs), none)\n *\n *\n * @since 2.5.0\n */\n\nfunction findLastIndex(predicate) {\n  return function (as) {\n    var len = as.length;\n\n    for (var i = len - 1; i >= 0; i--) {\n      if (predicate(as[i])) {\n        return O.some(i);\n      }\n    }\n\n    return O.none;\n  };\n}\n\nexports.findLastIndex = findLastIndex;\n/**\n * Insert an element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { insertAt } from 'fp-ts/ReadonlyArray'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.5.0\n */\n\nfunction insertAt(i, a) {\n  return function (as) {\n    return i < 0 || i > as.length ? O.none : O.some(unsafeInsertAt(i, a, as));\n  };\n}\n\nexports.insertAt = insertAt;\n/**\n * Change the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { updateAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.5.0\n */\n\nfunction updateAt(i, a) {\n  return function (as) {\n    return isOutOfBound(i, as) ? O.none : O.some(unsafeUpdateAt(i, a, as));\n  };\n}\n\nexports.updateAt = updateAt;\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { deleteAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.5.0\n */\n\nfunction deleteAt(i) {\n  return function (as) {\n    return isOutOfBound(i, as) ? O.none : O.some(unsafeDeleteAt(i, as));\n  };\n}\n\nexports.deleteAt = deleteAt;\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds\n *\n * @example\n * import { modifyAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.5.0\n */\n\nfunction modifyAt(i, f) {\n  return function (as) {\n    return isOutOfBound(i, as) ? O.none : O.some(unsafeUpdateAt(i, f(as[i]), as));\n  };\n}\n\nexports.modifyAt = modifyAt;\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nfunction reverse(as) {\n  if (isEmpty(as)) {\n    return as;\n  }\n\n  return as.slice().reverse();\n}\n\nexports.reverse = reverse;\n/**\n * Extracts from an array of `Either` all the `Right` elements. All the `Right` elements are extracted in order\n *\n * @example\n * import { rights } from 'fp-ts/ReadonlyArray'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nfunction rights(as) {\n  // tslint:disable-next-line: readonly-array\n  var r = [];\n  var len = as.length;\n\n  for (var i = 0; i < len; i++) {\n    var a = as[i];\n\n    if (a._tag === 'Right') {\n      r.push(a.right);\n    }\n  }\n\n  return r;\n}\n\nexports.rights = rights;\n/**\n * Extracts from an array of `Either` all the `Left` elements. All the `Left` elements are extracted in order\n *\n * @example\n * import { lefts } from 'fp-ts/ReadonlyArray'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @since 2.5.0\n */\n\nfunction lefts(as) {\n  // tslint:disable-next-line: readonly-array\n  var r = [];\n  var len = as.length;\n\n  for (var i = 0; i < len; i++) {\n    var a = as[i];\n\n    if (a._tag === 'Left') {\n      r.push(a.left);\n    }\n  }\n\n  return r;\n}\n\nexports.lefts = lefts;\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/ReadonlyArray'\n * import { ordNumber } from 'fp-ts/Ord'\n *\n * assert.deepStrictEqual(sort(ordNumber)([3, 2, 1]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar sort = function (O) {\n  return function (as) {\n    return as.length <= 1 ? as : as.slice().sort(O.compare);\n  };\n};\n\nexports.sort = sort; // TODO: curry and make data-last in v3\n\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nfunction zipWith(fa, fb, f) {\n  // tslint:disable-next-line: readonly-array\n  var fc = [];\n  var len = Math.min(fa.length, fb.length);\n\n  for (var i = 0; i < len; i++) {\n    fc[i] = f(fa[i], fb[i]);\n  }\n\n  return fc;\n}\n\nexports.zipWith = zipWith;\n\nfunction zip(as, bs) {\n  if (bs === undefined) {\n    return function (bs) {\n      return zip(bs, as);\n    };\n  }\n\n  return zipWith(as, bs, function (a, b) {\n    return [a, b];\n  });\n}\n\nexports.zip = zip;\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @since 2.5.0\n */\n\nfunction unzip(as) {\n  // tslint:disable-next-line: readonly-array\n  var fa = []; // tslint:disable-next-line: readonly-array\n\n  var fb = [];\n\n  for (var i = 0; i < as.length; i++) {\n    fa[i] = as[i][0];\n    fb[i] = as[i][1];\n  }\n\n  return [fa, fb];\n}\n\nexports.unzip = unzip;\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependToAll } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(prependToAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\n\nvar prependToAll = function (e) {\n  return function (xs) {\n    // tslint:disable-next-line: readonly-array\n    var ys = [];\n\n    for (var _i = 0, xs_1 = xs; _i < xs_1.length; _i++) {\n      var x = xs_1[_i];\n      ys.push(e, x);\n    }\n\n    return ys;\n  };\n};\n\nexports.prependToAll = prependToAll;\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\n\nfunction intersperse(e) {\n  return function (as) {\n    var length = as.length;\n\n    if (length === 0) {\n      return as;\n    }\n\n    return cons(as[0], exports.prependToAll(e)(as.slice(1, as.length)));\n  };\n}\n\nexports.intersperse = intersperse;\n/**\n * Rotate an array to the right by `n` steps\n *\n * @example\n * import { rotate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nfunction rotate(n) {\n  return function (as) {\n    var len = as.length;\n\n    if (n === 0 || len <= 1 || len === Math.abs(n)) {\n      return as;\n    } else if (n < 0) {\n      return rotate(len + n)(as);\n    } else {\n      return as.slice(-n).concat(as.slice(0, len - n));\n    }\n  };\n}\n\nexports.rotate = rotate;\n\nfunction elem(E) {\n  return function (a, as) {\n    if (as === undefined) {\n      var elemE_1 = elem(E);\n      return function (as) {\n        return elemE_1(a, as);\n      };\n    }\n\n    var predicate = function (element) {\n      return E.equals(element, a);\n    };\n\n    var i = 0;\n    var len = as.length;\n\n    for (; i < len; i++) {\n      if (predicate(as[i])) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n}\n\nexports.elem = elem;\n/**\n * Remove duplicates from an array, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/ReadonlyArray'\n * import { eqNumber } from 'fp-ts/Eq'\n *\n * assert.deepStrictEqual(uniq(eqNumber)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nfunction uniq(E) {\n  var elemS = elem(E);\n  return function (as) {\n    var len = as.length;\n\n    if (len <= 1) {\n      return as;\n    } // tslint:disable-next-line: readonly-array\n\n\n    var r = [];\n    var i = 0;\n\n    for (; i < len; i++) {\n      var a = as[i];\n\n      if (!elemS(a, r)) {\n        r.push(a);\n      }\n    }\n\n    return len === r.length ? as : r;\n  };\n}\n\nexports.uniq = uniq;\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/ReadonlyArray'\n * import { ord, ordString, ordNumber } from 'fp-ts/Ord'\n *\n * interface Person {\n *   name: string\n *   age: number\n * }\n * const byName = ord.contramap(ordString, (p: Person) => p.name)\n * const byAge = ord.contramap(ordNumber, (p: Person) => p.age)\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nfunction sortBy(ords) {\n  var M = Ord_1.getMonoid();\n  return exports.sort(ords.reduce(M.concat, M.empty));\n}\n\nexports.sortBy = sortBy;\n/**\n * A useful recursion pattern for processing an array to produce a new array, often used for \"chopping\" up the input\n * array. Typically chop is called with some function that will consume an initial prefix of the array and produce a\n * value and the rest of the array.\n *\n * @example\n * import { Eq, eqNumber } from 'fp-ts/Eq'\n * import { chop, spanLeft } from 'fp-ts/ReadonlyArray'\n *\n * const group = <A>(S: Eq<A>): ((as: ReadonlyArray<A>) => ReadonlyArray<ReadonlyArray<A>>) => {\n *   return chop(as => {\n *     const { init, rest } = spanLeft((a: A) => S.equals(a, as[0]))(as)\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(eqNumber)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar chop = function (f) {\n  return function (as) {\n    // tslint:disable-next-line: readonly-array\n    var result = [];\n    var cs = as;\n\n    while (isNonEmpty(cs)) {\n      var _a = f(cs),\n          b = _a[0],\n          c = _a[1];\n\n      result.push(b);\n      cs = c;\n    }\n\n    return result;\n  };\n};\n\nexports.chop = chop;\n/**\n * Splits an array into two pieces, the first piece has `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @since 2.5.0\n */\n\nfunction splitAt(n) {\n  return function (as) {\n    return [as.slice(0, n), as.slice(n)];\n  };\n}\n\nexports.splitAt = splitAt;\n/**\n * Splits an array into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the array. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `xs`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n *\n * @since 2.5.0\n */\n\nfunction chunksOf(n) {\n  var f = exports.chop(splitAt(n));\n  return function (as) {\n    return as.length === 0 ? exports.empty : isOutOfBound(n - 1, as) ? [as] : f(as);\n  };\n}\n\nexports.chunksOf = chunksOf;\n\nfunction comprehension(input, f, g) {\n  if (g === void 0) {\n    g = function () {\n      return true;\n    };\n  }\n\n  var go = function (scope, input) {\n    if (input.length === 0) {\n      return g.apply(void 0, scope) ? [f.apply(void 0, scope)] : exports.empty;\n    } else {\n      return chain_(input[0], function (x) {\n        return go(snoc(scope, x), input.slice(1));\n      });\n    }\n  };\n\n  return go(exports.empty, input);\n}\n\nexports.comprehension = comprehension;\n\nfunction union(E) {\n  var elemE = elem(E);\n  return function (xs, ys) {\n    if (ys === undefined) {\n      var unionE_1 = union(E);\n      return function (ys) {\n        return unionE_1(ys, xs);\n      };\n    }\n\n    return concat(xs, ys.filter(function (a) {\n      return !elemE(a, xs);\n    }));\n  };\n}\n\nexports.union = union;\n\nfunction intersection(E) {\n  var elemE = elem(E);\n  return function (xs, ys) {\n    if (ys === undefined) {\n      var intersectionE_1 = intersection(E);\n      return function (ys) {\n        return intersectionE_1(ys, xs);\n      };\n    }\n\n    return xs.filter(function (a) {\n      return elemE(a, ys);\n    });\n  };\n}\n\nexports.intersection = intersection;\n\nfunction difference(E) {\n  var elemE = elem(E);\n  return function (xs, ys) {\n    if (ys === undefined) {\n      var differenceE_1 = difference(E);\n      return function (ys) {\n        return differenceE_1(ys, xs);\n      };\n    }\n\n    return xs.filter(function (a) {\n      return !elemE(a, ys);\n    });\n  };\n}\n\nexports.difference = difference;\n/**\n * Wrap a value into the type constructor.\n *\n * @category Applicative\n * @since 2.5.0\n */\n\nvar of = function (a) {\n  return [a];\n};\n\nexports.of = of;\n/**\n * @category Alternative\n * @since 2.7.0\n */\n\nvar zero = function () {\n  return exports.empty;\n};\n\nexports.zero = zero; // -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n\nvar map_ = function (fa, f) {\n  return function_1.pipe(fa, exports.map(f));\n};\n\nvar mapWithIndex_ = function (fa, f) {\n  return function_1.pipe(fa, exports.mapWithIndex(f));\n};\n\nvar ap_ = function (fab, fa) {\n  return function_1.pipe(fab, exports.ap(fa));\n};\n\nvar chain_ = function (ma, f) {\n  return function_1.pipe(ma, exports.chain(f));\n};\n\nvar filter_ = function (fa, predicate) {\n  return function_1.pipe(fa, exports.filter(predicate));\n};\n\nvar filterMap_ = function (fa, f) {\n  return function_1.pipe(fa, exports.filterMap(f));\n};\n\nvar partitionWithIndex_ = function (fa, predicateWithIndex) {\n  return function_1.pipe(fa, exports.partitionWithIndex(predicateWithIndex));\n};\n\nvar partition_ = function (fa, predicate) {\n  return function_1.pipe(fa, exports.partition(predicate));\n};\n\nvar partitionMap_ = function (fa, f) {\n  return function_1.pipe(fa, exports.partitionMap(f));\n};\n\nvar partitionMapWithIndex_ = function (fa, f) {\n  return function_1.pipe(fa, exports.partitionMapWithIndex(f));\n};\n\nvar alt_ = function (fa, that) {\n  return function_1.pipe(fa, exports.alt(that));\n};\n\nvar reduce_ = function (fa, b, f) {\n  return function_1.pipe(fa, exports.reduce(b, f));\n};\n\nvar foldMap_ = function (M) {\n  var foldMapM = exports.foldMap(M);\n  return function (fa, f) {\n    return function_1.pipe(fa, foldMapM(f));\n  };\n};\n\nvar reduceRight_ = function (fa, b, f) {\n  return function_1.pipe(fa, exports.reduceRight(b, f));\n};\n\nvar reduceWithIndex_ = function (fa, b, f) {\n  var l = fa.length;\n  var r = b;\n\n  for (var i = 0; i < l; i++) {\n    r = f(i, r, fa[i]);\n  }\n\n  return r;\n};\n\nvar foldMapWithIndex_ = function (M) {\n  return function (fa, f) {\n    return fa.reduce(function (b, a, i) {\n      return M.concat(b, f(i, a));\n    }, M.empty);\n  };\n};\n\nvar reduceRightWithIndex_ = function (fa, b, f) {\n  return function_1.pipe(fa, exports.reduceRightWithIndex(b, f));\n};\n\nvar filterMapWithIndex_ = function (fa, f) {\n  return function_1.pipe(fa, exports.filterMapWithIndex(f));\n};\n\nvar filterWithIndex_ = function (fa, predicateWithIndex) {\n  return function_1.pipe(fa, exports.filterWithIndex(predicateWithIndex));\n};\n\nvar extend_ = function (fa, f) {\n  return function_1.pipe(fa, exports.extend(f));\n};\n\nvar traverse_ = function (F) {\n  var traverseF = exports.traverse(F);\n  return function (ta, f) {\n    return function_1.pipe(ta, traverseF(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar traverseWithIndex_ = function (F) {\n  var traverseWithIndexF = exports.traverseWithIndex(F);\n  return function (ta, f) {\n    return function_1.pipe(ta, traverseWithIndexF(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar wither_ = function (F) {\n  var witherF = exports.wither(F);\n  return function (fa, f) {\n    return function_1.pipe(fa, witherF(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar wilt_ = function (F) {\n  var wiltF = exports.wilt(F);\n  return function (fa, f) {\n    return function_1.pipe(fa, wiltF(f));\n  };\n}; // -------------------------------------------------------------------------------------\n// pipeables\n// -------------------------------------------------------------------------------------\n\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\n\n\nvar altW = function (that) {\n  return function (fa) {\n    return concat(fa, that());\n  };\n};\n\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.5.0\n */\n\nexports.alt = exports.altW;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.5.0\n */\n\nvar ap = function (fa) {\n  return exports.chain(function (f) {\n    return function_1.pipe(fa, exports.map(f));\n  });\n};\n\nexports.ap = ap;\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar apFirst = function (fb) {\n  return function_1.flow(exports.map(function (a) {\n    return function () {\n      return a;\n    };\n  }), exports.ap(fb));\n};\n\nexports.apFirst = apFirst;\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar apSecond = function (fb) {\n  return function_1.flow(exports.map(function () {\n    return function (b) {\n      return b;\n    };\n  }), exports.ap(fb));\n};\n\nexports.apSecond = apSecond;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.5.0\n */\n\nvar chain = function (f) {\n  return function (ma) {\n    return function_1.pipe(ma, exports.chainWithIndex(function (_, a) {\n      return f(a);\n    }));\n  };\n};\n\nexports.chain = chain;\n/**\n * @since 2.7.0\n */\n\nvar chainWithIndex = function (f) {\n  return function (ma) {\n    var outLen = 0;\n    var l = ma.length;\n    var temp = new Array(l);\n\n    for (var i = 0; i < l; i++) {\n      var e = ma[i];\n      var arr = f(i, e);\n      outLen += arr.length;\n      temp[i] = arr;\n    }\n\n    var out = Array(outLen);\n    var start = 0;\n\n    for (var i = 0; i < l; i++) {\n      var arr = temp[i];\n      var l_1 = arr.length;\n\n      for (var j = 0; j < l_1; j++) {\n        out[j + start] = arr[j];\n      }\n\n      start += l_1;\n    }\n\n    return out;\n  };\n};\n\nexports.chainWithIndex = chainWithIndex;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Monad`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar chainFirst = function (f) {\n  return exports.chain(function (a) {\n    return function_1.pipe(f(a), exports.map(function () {\n      return a;\n    }));\n  });\n};\n\nexports.chainFirst = chainFirst;\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.5.0\n */\n\nvar map = function (f) {\n  return function (fa) {\n    return fa.map(function (a) {\n      return f(a);\n    });\n  };\n};\n\nexports.map = map;\n/**\n * @category FunctorWithIndex\n * @since 2.5.0\n */\n\nvar mapWithIndex = function (f) {\n  return function (fa) {\n    return fa.map(function (a, i) {\n      return f(i, a);\n    });\n  };\n};\n\nexports.mapWithIndex = mapWithIndex;\n/**\n * @category Compactable\n * @since 2.5.0\n */\n\nvar separate = function (fa) {\n  // tslint:disable-next-line: readonly-array\n  var left = []; // tslint:disable-next-line: readonly-array\n\n  var right = [];\n\n  for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n    var e = fa_1[_i];\n\n    if (e._tag === 'Left') {\n      left.push(e.left);\n    } else {\n      right.push(e.right);\n    }\n  }\n\n  return {\n    left: left,\n    right: right\n  };\n};\n\nexports.separate = separate;\n/**\n * @category Filterable\n * @since 2.5.0\n */\n\nvar filter = function (predicate) {\n  return function (fa) {\n    return fa.filter(predicate);\n  };\n};\n\nexports.filter = filter;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\n\nvar filterMapWithIndex = function (f) {\n  return function (fa) {\n    // tslint:disable-next-line: readonly-array\n    var result = [];\n\n    for (var i = 0; i < fa.length; i++) {\n      var optionB = f(i, fa[i]);\n\n      if (O.isSome(optionB)) {\n        result.push(optionB.value);\n      }\n    }\n\n    return result;\n  };\n};\n\nexports.filterMapWithIndex = filterMapWithIndex;\n/**\n * @category Filterable\n * @since 2.5.0\n */\n\nvar filterMap = function (f) {\n  return exports.filterMapWithIndex(function (_, a) {\n    return f(a);\n  });\n};\n\nexports.filterMap = filterMap;\n/**\n * @category Compactable\n * @since 2.5.0\n */\n\nexports.compact = /*#__PURE__*/exports.filterMap(function_1.identity);\n/**\n * @category Filterable\n * @since 2.5.0\n */\n\nvar partition = function (predicate) {\n  return exports.partitionWithIndex(function (_, a) {\n    return predicate(a);\n  });\n};\n\nexports.partition = partition;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\n\nvar partitionWithIndex = function (predicateWithIndex) {\n  return function (fa) {\n    // tslint:disable-next-line: readonly-array\n    var left = []; // tslint:disable-next-line: readonly-array\n\n    var right = [];\n\n    for (var i = 0; i < fa.length; i++) {\n      var a = fa[i];\n\n      if (predicateWithIndex(i, a)) {\n        right.push(a);\n      } else {\n        left.push(a);\n      }\n    }\n\n    return {\n      left: left,\n      right: right\n    };\n  };\n};\n\nexports.partitionWithIndex = partitionWithIndex;\n/**\n * @category Filterable\n * @since 2.5.0\n */\n\nvar partitionMap = function (f) {\n  return exports.partitionMapWithIndex(function (_, a) {\n    return f(a);\n  });\n};\n\nexports.partitionMap = partitionMap;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\n\nvar partitionMapWithIndex = function (f) {\n  return function (fa) {\n    // tslint:disable-next-line: readonly-array\n    var left = []; // tslint:disable-next-line: readonly-array\n\n    var right = [];\n\n    for (var i = 0; i < fa.length; i++) {\n      var e = f(i, fa[i]);\n\n      if (e._tag === 'Left') {\n        left.push(e.left);\n      } else {\n        right.push(e.right);\n      }\n    }\n\n    return {\n      left: left,\n      right: right\n    };\n  };\n};\n\nexports.partitionMapWithIndex = partitionMapWithIndex;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\n\nvar filterWithIndex = function (predicateWithIndex) {\n  return function (fa) {\n    return fa.filter(function (a, i) {\n      return predicateWithIndex(i, a);\n    });\n  };\n};\n\nexports.filterWithIndex = filterWithIndex;\n/**\n * @category Extend\n * @since 2.5.0\n */\n\nvar extend = function (f) {\n  return function (wa) {\n    return wa.map(function (_, i, as) {\n      return f(as.slice(i));\n    });\n  };\n};\n\nexports.extend = extend;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexports.duplicate = /*#__PURE__*/exports.extend(function_1.identity);\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\n\nvar foldMapWithIndex = function (M) {\n  var foldMapWithIndexM = foldMapWithIndex_(M);\n  return function (f) {\n    return function (fa) {\n      return foldMapWithIndexM(fa, f);\n    };\n  };\n};\n\nexports.foldMapWithIndex = foldMapWithIndex;\n/**\n * @category Foldable\n * @since 2.5.0\n */\n\nvar reduce = function (b, f) {\n  return exports.reduceWithIndex(b, function (_, b, a) {\n    return f(b, a);\n  });\n};\n\nexports.reduce = reduce;\n/**\n * @category Foldable\n * @since 2.5.0\n */\n\nvar foldMap = function (M) {\n  var foldMapWithIndexM = exports.foldMapWithIndex(M);\n  return function (f) {\n    return foldMapWithIndexM(function (_, a) {\n      return f(a);\n    });\n  };\n};\n\nexports.foldMap = foldMap;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\n\nvar reduceWithIndex = function (b, f) {\n  return function (fa) {\n    return reduceWithIndex_(fa, b, f);\n  };\n};\n\nexports.reduceWithIndex = reduceWithIndex;\n/**\n * @category Foldable\n * @since 2.5.0\n */\n\nvar reduceRight = function (b, f) {\n  return exports.reduceRightWithIndex(b, function (_, a, b) {\n    return f(a, b);\n  });\n};\n\nexports.reduceRight = reduceRight;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\n\nvar reduceRightWithIndex = function (b, f) {\n  return function (fa) {\n    return fa.reduceRight(function (b, a, i) {\n      return f(i, a, b);\n    }, b);\n  };\n};\n\nexports.reduceRightWithIndex = reduceRightWithIndex;\n/**\n * **for optimized and stack safe version check the data types `traverseArray` function**\n * @category Traversable\n * @since 2.6.3\n */\n\nvar traverse = function (F) {\n  var traverseWithIndexF = exports.traverseWithIndex(F);\n  return function (f) {\n    return traverseWithIndexF(function (_, a) {\n      return f(a);\n    });\n  };\n};\n\nexports.traverse = traverse;\n/**\n * **for optimized and stack safe version check the data types `sequenceArray` function**\n * @category Traversable\n * @since 2.6.3\n */\n\nvar sequence = function (F) {\n  return function (ta) {\n    return reduce_(ta, F.of(exports.zero()), function (fas, fa) {\n      return F.ap(F.map(fas, function (as) {\n        return function (a) {\n          return snoc(as, a);\n        };\n      }), fa);\n    });\n  };\n};\n\nexports.sequence = sequence;\n/**\n * **for optimized and stack safe version check the data types `traverseArrayWithIndex` function**\n * @category TraversableWithIndex\n * @since 2.6.3\n */\n\nvar traverseWithIndex = function (F) {\n  return function (f) {\n    return exports.reduceWithIndex(F.of(exports.zero()), function (i, fbs, a) {\n      return F.ap(F.map(fbs, function (bs) {\n        return function (b) {\n          return snoc(bs, b);\n        };\n      }), f(i, a));\n    });\n  };\n};\n\nexports.traverseWithIndex = traverseWithIndex;\n/**\n * @category Witherable\n * @since 2.6.5\n */\n\nvar wither = function (F) {\n  var traverseF = exports.traverse(F);\n  return function (f) {\n    return function (fa) {\n      return F.map(function_1.pipe(fa, traverseF(f)), exports.compact);\n    };\n  };\n};\n\nexports.wither = wither;\n/**\n * @category Witherable\n * @since 2.6.5\n */\n\nvar wilt = function (F) {\n  var traverseF = exports.traverse(F);\n  return function (f) {\n    return function (fa) {\n      return F.map(function_1.pipe(fa, traverseF(f)), exports.separate);\n    };\n  };\n};\n\nexports.wilt = wilt;\n/**\n * @category Unfoldable\n * @since 2.6.6\n */\n\nvar unfold = function (b, f) {\n  // tslint:disable-next-line: readonly-array\n  var ret = [];\n  var bb = b;\n\n  while (true) {\n    var mt = f(bb);\n\n    if (O.isSome(mt)) {\n      var _a = mt.value,\n          a = _a[0],\n          b_1 = _a[1];\n      ret.push(a);\n      bb = b_1;\n    } else {\n      break;\n    }\n  }\n\n  return ret;\n};\n\nexports.unfold = unfold; // -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n\n/**\n * @category instances\n * @since 2.5.0\n */\n\nexports.URI = 'ReadonlyArray';\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Functor = {\n  URI: exports.URI,\n  map: map_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.FunctorWithIndex = {\n  URI: exports.URI,\n  map: map_,\n  mapWithIndex: mapWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Applicative = {\n  URI: exports.URI,\n  map: map_,\n  ap: ap_,\n  of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Monad = {\n  URI: exports.URI,\n  map: map_,\n  ap: ap_,\n  of: exports.of,\n  chain: chain_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Unfoldable = {\n  URI: exports.URI,\n  unfold: exports.unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Alt = {\n  URI: exports.URI,\n  map: map_,\n  alt: alt_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Alternative = {\n  URI: exports.URI,\n  map: map_,\n  ap: ap_,\n  of: exports.of,\n  alt: alt_,\n  zero: exports.zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Extend = {\n  URI: exports.URI,\n  map: map_,\n  extend: extend_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Compactable = {\n  URI: exports.URI,\n  compact: exports.compact,\n  separate: exports.separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Filterable = {\n  URI: exports.URI,\n  map: map_,\n  compact: exports.compact,\n  separate: exports.separate,\n  filter: filter_,\n  filterMap: filterMap_,\n  partition: partition_,\n  partitionMap: partitionMap_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.FilterableWithIndex = {\n  URI: exports.URI,\n  map: map_,\n  mapWithIndex: mapWithIndex_,\n  compact: exports.compact,\n  separate: exports.separate,\n  filter: filter_,\n  filterMap: filterMap_,\n  partition: partition_,\n  partitionMap: partitionMap_,\n  partitionMapWithIndex: partitionMapWithIndex_,\n  partitionWithIndex: partitionWithIndex_,\n  filterMapWithIndex: filterMapWithIndex_,\n  filterWithIndex: filterWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Foldable = {\n  URI: exports.URI,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.FoldableWithIndex = {\n  URI: exports.URI,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_,\n  reduceWithIndex: reduceWithIndex_,\n  foldMapWithIndex: foldMapWithIndex_,\n  reduceRightWithIndex: reduceRightWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Traversable = {\n  URI: exports.URI,\n  map: map_,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_,\n  traverse: traverse_,\n  sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.TraversableWithIndex = {\n  URI: exports.URI,\n  map: map_,\n  mapWithIndex: mapWithIndex_,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_,\n  reduceWithIndex: reduceWithIndex_,\n  foldMapWithIndex: foldMapWithIndex_,\n  reduceRightWithIndex: reduceRightWithIndex_,\n  traverse: traverse_,\n  sequence: exports.sequence,\n  traverseWithIndex: traverseWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Witherable = {\n  URI: exports.URI,\n  map: map_,\n  compact: exports.compact,\n  separate: exports.separate,\n  filter: filter_,\n  filterMap: filterMap_,\n  partition: partition_,\n  partitionMap: partitionMap_,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_,\n  traverse: traverse_,\n  sequence: exports.sequence,\n  wither: wither_,\n  wilt: wilt_\n}; // TODO: remove in v3\n\n/**\n * @category instances\n * @since 2.5.0\n */\n\nexports.readonlyArray = {\n  URI: exports.URI,\n  compact: exports.compact,\n  separate: exports.separate,\n  map: map_,\n  ap: ap_,\n  of: exports.of,\n  chain: chain_,\n  filter: filter_,\n  filterMap: filterMap_,\n  partition: partition_,\n  partitionMap: partitionMap_,\n  mapWithIndex: mapWithIndex_,\n  partitionMapWithIndex: partitionMapWithIndex_,\n  partitionWithIndex: partitionWithIndex_,\n  filterMapWithIndex: filterMapWithIndex_,\n  filterWithIndex: filterWithIndex_,\n  alt: alt_,\n  zero: exports.zero,\n  unfold: exports.unfold,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_,\n  traverse: traverse_,\n  sequence: exports.sequence,\n  reduceWithIndex: reduceWithIndex_,\n  foldMapWithIndex: foldMapWithIndex_,\n  reduceRightWithIndex: reduceRightWithIndex_,\n  traverseWithIndex: traverseWithIndex_,\n  extend: extend_,\n  wither: wither_,\n  wilt: wilt_\n}; // -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n\n/**\n * @category unsafe\n * @since 2.5.0\n */\n\nfunction unsafeInsertAt(i, a, as) {\n  var xs = as.slice();\n  xs.splice(i, 0, a);\n  return xs;\n}\n\nexports.unsafeInsertAt = unsafeInsertAt;\n/**\n * @category unsafe\n * @since 2.5.0\n */\n\nfunction unsafeUpdateAt(i, a, as) {\n  if (as[i] === a) {\n    return as;\n  } else {\n    var xs = as.slice();\n    xs[i] = a;\n    return xs;\n  }\n}\n\nexports.unsafeUpdateAt = unsafeUpdateAt;\n/**\n * @category unsafe\n * @since 2.5.0\n */\n\nfunction unsafeDeleteAt(i, as) {\n  var xs = as.slice();\n  xs.splice(i, 1);\n  return xs;\n}\n\nexports.unsafeDeleteAt = unsafeDeleteAt; // -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n\n/**\n * An empty array\n *\n * @since 2.5.0\n */\n\nexports.empty = [];\n/**\n * Check if a predicate holds true for every array member.\n *\n * @example\n * import { every } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], every(isPositive)), true)\n * assert.deepStrictEqual(pipe([1, 2, -3], every(isPositive)), false)\n *\n * @since 2.9.0\n */\n\nvar every = function (predicate) {\n  return function (as) {\n    return as.every(predicate);\n  };\n};\n\nexports.every = every;\n/**\n * Check if a predicate holds true for any array member.\n *\n * @example\n * import { some } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * assert.deepStrictEqual(pipe([-1, -2, 3], some(isPositive)), true)\n * assert.deepStrictEqual(pipe([-1, -2, -3], some(isPositive)), false)\n *\n * @since 2.9.0\n */\n\nvar some = function (predicate) {\n  return function (as) {\n    return as.some(predicate);\n  };\n};\n\nexports.some = some; // -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.9.0\n */\n\nexports.Do = /*#__PURE__*/exports.of({});\n/**\n * @since 2.8.0\n */\n\nvar bindTo = function (name) {\n  return exports.map(function_1.bindTo_(name));\n};\n\nexports.bindTo = bindTo;\n/**\n * @since 2.8.0\n */\n\nvar bind = function (name, f) {\n  return exports.chain(function (a) {\n    return function_1.pipe(f(a), exports.map(function (b) {\n      return function_1.bind_(a, name, b);\n    }));\n  });\n};\n\nexports.bind = bind; // -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.8.0\n */\n\nvar apS = function (name, fb) {\n  return function_1.flow(exports.map(function (a) {\n    return function (b) {\n      return function_1.bind_(a, name, b);\n    };\n  }), exports.ap(fb));\n};\n\nexports.apS = apS;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","prototype","hasOwnProperty","call","exports","intersperse","prependToAll","unzip","zip","zipWith","sort","lefts","rights","reverse","modifyAt","deleteAt","updateAt","insertAt","findLastIndex","findLastMap","findLast","findFirstMap","findFirst","findIndex","dropLeftWhile","dropRight","dropLeft","spanLeft","takeLeftWhile","takeRight","takeLeft","init","tail","last","head","snoc","cons","lookup","isOutOfBound","isNonEmpty","isEmpty","scanRight","scanLeft","foldRight","foldLeft","flatten","replicate","range","makeBy","getOrd","getEq","getMonoid","getShow","toArray","fromArray","FunctorWithIndex","Functor","URI","unfold","wilt","wither","traverseWithIndex","sequence","traverse","reduceRightWithIndex","reduceRight","reduceWithIndex","foldMap","reduce","foldMapWithIndex","duplicate","extend","filterWithIndex","partitionMapWithIndex","partitionMap","partitionWithIndex","partition","compact","filterMap","filterMapWithIndex","filter","separate","mapWithIndex","map","chainFirst","chainWithIndex","chain","apSecond","apFirst","ap","alt","altW","zero","of","difference","intersection","union","comprehension","chunksOf","splitAt","chop","sortBy","uniq","elem","rotate","apS","bind","bindTo","Do","some","every","empty","unsafeDeleteAt","unsafeUpdateAt","unsafeInsertAt","readonlyArray","Witherable","TraversableWithIndex","Traversable","FoldableWithIndex","Foldable","FilterableWithIndex","Filterable","Compactable","Extend","Alternative","Alt","Unfoldable","Monad","Applicative","function_1","require","O","Ord_1","as","l","length","ras","Array","i","S","show","join","concat","x","y","lenx","leny","r","E","equals","xs","ys","fromCompare","a","b","aLen","bLen","len","Math","min","ordering","compare","ordNumber","n","f","push","start","end","mma","rLen","arr","j","onEmpty","onCons","slice","none","predicate","spanIndexUncurry","rest","isSome","_tag","right","left","fa","fb","fc","bs","e","_i","xs_1","abs","elemE_1","element","elemS","ords","M","cs","_a","c","input","g","go","scope","apply","chain_","elemE","unionE_1","intersectionE_1","differenceE_1","map_","pipe","mapWithIndex_","ap_","fab","ma","filter_","filterMap_","partitionWithIndex_","predicateWithIndex","partition_","partitionMap_","partitionMapWithIndex_","alt_","that","reduce_","foldMap_","foldMapM","reduceRight_","reduceWithIndex_","foldMapWithIndex_","reduceRightWithIndex_","filterMapWithIndex_","filterWithIndex_","extend_","traverse_","F","traverseF","ta","traverseWithIndex_","traverseWithIndexF","wither_","witherF","wilt_","wiltF","flow","_","outLen","temp","out","l_1","fa_1","optionB","identity","wa","foldMapWithIndexM","fas","fbs","ret","bb","mt","b_1","splice","name","bindTo_","bind_"],"sources":["/Users/ngocban/Desktop/imx-integration-reactjs/node_modules/fp-ts/lib/ReadonlyArray.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.intersperse = exports.prependToAll = exports.unzip = exports.zip = exports.zipWith = exports.sort = exports.lefts = exports.rights = exports.reverse = exports.modifyAt = exports.deleteAt = exports.updateAt = exports.insertAt = exports.findLastIndex = exports.findLastMap = exports.findLast = exports.findFirstMap = exports.findFirst = exports.findIndex = exports.dropLeftWhile = exports.dropRight = exports.dropLeft = exports.spanLeft = exports.takeLeftWhile = exports.takeRight = exports.takeLeft = exports.init = exports.tail = exports.last = exports.head = exports.snoc = exports.cons = exports.lookup = exports.isOutOfBound = exports.isNonEmpty = exports.isEmpty = exports.scanRight = exports.scanLeft = exports.foldRight = exports.foldLeft = exports.flatten = exports.replicate = exports.range = exports.makeBy = exports.getOrd = exports.getEq = exports.getMonoid = exports.getShow = exports.toArray = exports.fromArray = void 0;\nexports.FunctorWithIndex = exports.Functor = exports.URI = exports.unfold = exports.wilt = exports.wither = exports.traverseWithIndex = exports.sequence = exports.traverse = exports.reduceRightWithIndex = exports.reduceRight = exports.reduceWithIndex = exports.foldMap = exports.reduce = exports.foldMapWithIndex = exports.duplicate = exports.extend = exports.filterWithIndex = exports.partitionMapWithIndex = exports.partitionMap = exports.partitionWithIndex = exports.partition = exports.compact = exports.filterMap = exports.filterMapWithIndex = exports.filter = exports.separate = exports.mapWithIndex = exports.map = exports.chainFirst = exports.chainWithIndex = exports.chain = exports.apSecond = exports.apFirst = exports.ap = exports.alt = exports.altW = exports.zero = exports.of = exports.difference = exports.intersection = exports.union = exports.comprehension = exports.chunksOf = exports.splitAt = exports.chop = exports.sortBy = exports.uniq = exports.elem = exports.rotate = void 0;\nexports.apS = exports.bind = exports.bindTo = exports.Do = exports.some = exports.every = exports.empty = exports.unsafeDeleteAt = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.readonlyArray = exports.Witherable = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.FilterableWithIndex = exports.Filterable = exports.Compactable = exports.Extend = exports.Alternative = exports.Alt = exports.Unfoldable = exports.Monad = exports.Applicative = void 0;\nvar function_1 = require(\"./function\");\nvar O = __importStar(require(\"./Option\"));\nvar Ord_1 = require(\"./Ord\");\n// -------------------------------------------------------------------------------------\n// model\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.5.0\n */\n// tslint:disable-next-line: readonly-array\nfunction fromArray(as) {\n    var l = as.length;\n    if (l === 0) {\n        return exports.empty;\n    }\n    var ras = Array(l);\n    for (var i = 0; i < l; i++) {\n        ras[i] = as[i];\n    }\n    return ras;\n}\nexports.fromArray = fromArray;\n/**\n * @category destructors\n * @since 2.5.0\n */\n// tslint:disable-next-line: readonly-array\nfunction toArray(ras) {\n    var l = ras.length;\n    var as = Array(l);\n    for (var i = 0; i < l; i++) {\n        as[i] = ras[i];\n    }\n    return as;\n}\nexports.toArray = toArray;\n/**\n * @category instances\n * @since 2.5.0\n */\nfunction getShow(S) {\n    return {\n        show: function (as) { return \"[\" + as.map(S.show).join(', ') + \"]\"; }\n    };\n}\nexports.getShow = getShow;\nvar concat = function (x, y) {\n    var lenx = x.length;\n    if (lenx === 0) {\n        return y;\n    }\n    var leny = y.length;\n    if (leny === 0) {\n        return x;\n    }\n    var r = Array(lenx + leny);\n    for (var i = 0; i < lenx; i++) {\n        r[i] = x[i];\n    }\n    for (var i = 0; i < leny; i++) {\n        r[i + lenx] = y[i];\n    }\n    return r;\n};\n/**\n * Returns a `Monoid` for `ReadonlyArray<A>`\n *\n * @example\n * import { getMonoid } from 'fp-ts/ReadonlyArray'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.5.0\n */\nfunction getMonoid() {\n    return {\n        concat: concat,\n        empty: exports.empty\n    };\n}\nexports.getMonoid = getMonoid;\n/**\n * Derives an `Eq` over the `ReadonlyArray` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import { eqString } from 'fp-ts/Eq'\n * import { getEq } from 'fp-ts/ReadonlyArray'\n *\n * const E = getEq(eqString)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.5.0\n */\nfunction getEq(E) {\n    return {\n        equals: function (xs, ys) { return xs === ys || (xs.length === ys.length && xs.every(function (x, i) { return E.equals(x, ys[i]); })); }\n    };\n}\nexports.getEq = getEq;\n/**\n * Derives an `Ord` over the `ReadonlyArray` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/ReadonlyArray'\n * import { ordString } from 'fp-ts/Ord'\n *\n * const O = getOrd(ordString)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n *\n * @category instances\n * @since 2.5.0\n */\nfunction getOrd(O) {\n    return Ord_1.fromCompare(function (a, b) {\n        var aLen = a.length;\n        var bLen = b.length;\n        var len = Math.min(aLen, bLen);\n        for (var i = 0; i < len; i++) {\n            var ordering = O.compare(a[i], b[i]);\n            if (ordering !== 0) {\n                return ordering;\n            }\n        }\n        return Ord_1.ordNumber.compare(aLen, bLen);\n    });\n}\nexports.getOrd = getOrd;\n/**\n * Return a list of length `n` with element `i` initialized with `f(i)`\n *\n * @example\n * import { makeBy } from 'fp-ts/ReadonlyArray'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.5.0\n */\nfunction makeBy(n, f) {\n    // tslint:disable-next-line: readonly-array\n    var r = [];\n    for (var i = 0; i < n; i++) {\n        r.push(f(i));\n    }\n    return r;\n}\nexports.makeBy = makeBy;\n/**\n * Create an array containing a range of integers, including both endpoints\n *\n * @example\n * import { range } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.5.0\n */\nfunction range(start, end) {\n    return makeBy(end - start + 1, function (i) { return start + i; });\n}\nexports.range = range;\n/**\n * Create an array containing a value repeated the specified number of times\n *\n * @example\n * import { replicate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.5.0\n */\nfunction replicate(n, a) {\n    return makeBy(n, function () { return a; });\n}\nexports.replicate = replicate;\n/**\n * Removes one level of nesting\n *\n * Derivable from `Monad`.\n *\n * @example\n * import { flatten } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(flatten([[1], [2], [3]]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nfunction flatten(mma) {\n    var rLen = 0;\n    var len = mma.length;\n    for (var i = 0; i < len; i++) {\n        rLen += mma[i].length;\n    }\n    var r = Array(rLen);\n    var start = 0;\n    for (var i = 0; i < len; i++) {\n        var arr = mma[i];\n        var l = arr.length;\n        for (var j = 0; j < l; j++) {\n            r[j + start] = arr[j];\n        }\n        start += l;\n    }\n    return r;\n}\nexports.flatten = flatten;\n/**\n * Break an array into its first element and remaining elements\n *\n * @example\n * import { foldLeft } from 'fp-ts/ReadonlyArray'\n *\n * const len: <A>(as: ReadonlyArray<A>) => number = foldLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category destructors\n * @since 2.5.0\n */\nfunction foldLeft(onEmpty, onCons) {\n    return function (as) { return (isEmpty(as) ? onEmpty() : onCons(as[0], as.slice(1))); };\n}\nexports.foldLeft = foldLeft;\n/**\n * Break an array into its initial elements and the last element\n *\n * @category destructors\n * @since 2.5.0\n */\nfunction foldRight(onEmpty, onCons) {\n    return function (as) { return (isEmpty(as) ? onEmpty() : onCons(as.slice(0, as.length - 1), as[as.length - 1])); };\n}\nexports.foldRight = foldRight;\n/**\n * Same as `reduce` but it carries over the intermediate steps\n *\n * @example\n * import { scanLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n *\n * @category combinators\n * @since 2.5.0\n */\nfunction scanLeft(b, f) {\n    return function (as) {\n        var l = as.length;\n        // tslint:disable-next-line: readonly-array\n        var r = new Array(l + 1);\n        r[0] = b;\n        for (var i = 0; i < l; i++) {\n            r[i + 1] = f(r[i], as[i]);\n        }\n        return r;\n    };\n}\nexports.scanLeft = scanLeft;\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @category combinators\n * @since 2.5.0\n */\nfunction scanRight(b, f) {\n    return function (as) {\n        var l = as.length;\n        // tslint:disable-next-line: readonly-array\n        var r = new Array(l + 1);\n        r[l] = b;\n        for (var i = l - 1; i >= 0; i--) {\n            r[i] = f(as[i], r[i + 1]);\n        }\n        return r;\n    };\n}\nexports.scanRight = scanRight;\n/**\n * Test whether an array is empty\n *\n * @example\n * import { isEmpty } from 'fp-ts/ReadonlyArray'\n *\n * assert.strictEqual(isEmpty([]), true)\n *\n * @since 2.5.0\n */\nfunction isEmpty(as) {\n    return as.length === 0;\n}\nexports.isEmpty = isEmpty;\n/**\n * Test whether an array is non empty narrowing down the type to `NonEmptyReadonlyArray<A>`\n *\n * @category guards\n * @since 2.5.0\n */\nfunction isNonEmpty(as) {\n    return as.length > 0;\n}\nexports.isNonEmpty = isNonEmpty;\n/**\n * Test whether an array contains a particular index\n *\n * @since 2.5.0\n */\nfunction isOutOfBound(i, as) {\n    return i < 0 || i >= as.length;\n}\nexports.isOutOfBound = isOutOfBound;\nfunction lookup(i, as) {\n    return as === undefined ? function (as) { return lookup(i, as); } : isOutOfBound(i, as) ? O.none : O.some(as[i]);\n}\nexports.lookup = lookup;\nfunction cons(head, tail) {\n    if (tail === undefined) {\n        return function (tail) { return cons(head, tail); };\n    }\n    var len = tail.length;\n    var r = Array(len + 1);\n    for (var i = 0; i < len; i++) {\n        r[i + 1] = tail[i];\n    }\n    r[0] = head;\n    return r;\n}\nexports.cons = cons;\n// TODO: curry and make data-last in v3\n/**\n * Append an element to the end of an array, creating a new non empty array\n *\n * @example\n * import { snoc } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(snoc([1, 2, 3], 4), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.5.0\n */\nfunction snoc(init, end) {\n    var len = init.length;\n    var r = Array(len + 1);\n    for (var i = 0; i < len; i++) {\n        r[i] = init[i];\n    }\n    r[len] = end;\n    return r;\n}\nexports.snoc = snoc;\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @since 2.5.0\n */\nfunction head(as) {\n    return isEmpty(as) ? O.none : O.some(as[0]);\n}\nexports.head = head;\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @since 2.5.0\n */\nfunction last(as) {\n    return lookup(as.length - 1, as);\n}\nexports.last = last;\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @since 2.5.0\n */\nfunction tail(as) {\n    return isEmpty(as) ? O.none : O.some(as.slice(1));\n}\nexports.tail = tail;\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @since 2.5.0\n */\nfunction init(as) {\n    var len = as.length;\n    return len === 0 ? O.none : O.some(as.slice(0, len - 1));\n}\nexports.init = init;\n/**\n * Keep only a number of elements from the start of an array, creating a new array.\n * `n` must be a natural number\n *\n * @example\n * import { takeLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(takeLeft(2)([1, 2, 3]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\nfunction takeLeft(n) {\n    return function (as) { return as.slice(0, n); };\n}\nexports.takeLeft = takeLeft;\n/**\n * Keep only a number of elements from the end of an array, creating a new array.\n * `n` must be a natural number\n *\n * @example\n * import { takeRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(takeRight(2)([1, 2, 3, 4, 5]), [4, 5])\n *\n * @since 2.5.0\n */\nfunction takeRight(n) {\n    return function (as) { return (n === 0 ? exports.empty : as.slice(-n)); };\n}\nexports.takeRight = takeRight;\nfunction takeLeftWhile(predicate) {\n    return function (as) {\n        var i = spanIndexUncurry(as, predicate);\n        var init = Array(i);\n        for (var j = 0; j < i; j++) {\n            init[j] = as[j];\n        }\n        return init;\n    };\n}\nexports.takeLeftWhile = takeLeftWhile;\nvar spanIndexUncurry = function (as, predicate) {\n    var l = as.length;\n    var i = 0;\n    for (; i < l; i++) {\n        if (!predicate(as[i])) {\n            break;\n        }\n    }\n    return i;\n};\nfunction spanLeft(predicate) {\n    return function (as) {\n        var i = spanIndexUncurry(as, predicate);\n        var init = Array(i);\n        for (var j = 0; j < i; j++) {\n            init[j] = as[j];\n        }\n        var l = as.length;\n        var rest = Array(l - i);\n        for (var j = i; j < l; j++) {\n            rest[j - i] = as[j];\n        }\n        return { init: init, rest: rest };\n    };\n}\nexports.spanLeft = spanLeft;\n/**\n * Drop a number of elements from the start of an array, creating a new array\n *\n * @example\n * import { dropLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(dropLeft(2)([1, 2, 3]), [3])\n *\n * @category combinators\n * @since 2.5.0\n */\nfunction dropLeft(n) {\n    return function (as) { return as.slice(n, as.length); };\n}\nexports.dropLeft = dropLeft;\n/**\n * Drop a number of elements from the end of an array, creating a new array\n *\n * @example\n * import { dropRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(dropRight(2)([1, 2, 3, 4, 5]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nfunction dropRight(n) {\n    return function (as) { return as.slice(0, as.length - n); };\n}\nexports.dropRight = dropRight;\n/**\n * Remove the longest initial subarray for which all element satisfy the specified predicate, creating a new array\n *\n * @example\n * import { dropLeftWhile } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(dropLeftWhile((n: number) => n % 2 === 1)([1, 3, 2, 4, 5]), [2, 4, 5])\n *\n * @category combinators\n * @since 2.5.0\n */\nfunction dropLeftWhile(predicate) {\n    return function (as) {\n        var i = spanIndexUncurry(as, predicate);\n        var l = as.length;\n        var rest = Array(l - i);\n        for (var j = i; j < l; j++) {\n            rest[j - i] = as[j];\n        }\n        return rest;\n    };\n}\nexports.dropLeftWhile = dropLeftWhile;\n/**\n * Find the first index for which a predicate holds\n *\n * @example\n * import { findIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.5.0\n */\nfunction findIndex(predicate) {\n    return function (as) {\n        var len = as.length;\n        for (var i = 0; i < len; i++) {\n            if (predicate(as[i])) {\n                return O.some(i);\n            }\n        }\n        return O.none;\n    };\n}\nexports.findIndex = findIndex;\nfunction findFirst(predicate) {\n    return function (as) {\n        var len = as.length;\n        for (var i = 0; i < len; i++) {\n            if (predicate(as[i])) {\n                return O.some(as[i]);\n            }\n        }\n        return O.none;\n    };\n}\nexports.findFirst = findFirst;\n/**\n * Find the first element returned by an option based selector function\n *\n * @example\n * import { findFirstMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   name: string\n *   age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the first person that has an age\n * assert.deepStrictEqual(findFirstMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Mary'))\n *\n * @since 2.5.0\n */\nfunction findFirstMap(f) {\n    return function (as) {\n        var len = as.length;\n        for (var i = 0; i < len; i++) {\n            var v = f(as[i]);\n            if (O.isSome(v)) {\n                return v;\n            }\n        }\n        return O.none;\n    };\n}\nexports.findFirstMap = findFirstMap;\nfunction findLast(predicate) {\n    return function (as) {\n        var len = as.length;\n        for (var i = len - 1; i >= 0; i--) {\n            if (predicate(as[i])) {\n                return O.some(as[i]);\n            }\n        }\n        return O.none;\n    };\n}\nexports.findLast = findLast;\n/**\n * Find the last element returned by an option based selector function\n *\n * @example\n * import { findLastMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   name: string\n *   age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the last person that has an age\n * assert.deepStrictEqual(findLastMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Joey'))\n *\n * @since 2.5.0\n */\nfunction findLastMap(f) {\n    return function (as) {\n        var len = as.length;\n        for (var i = len - 1; i >= 0; i--) {\n            var v = f(as[i]);\n            if (O.isSome(v)) {\n                return v;\n            }\n        }\n        return O.none;\n    };\n}\nexports.findLastMap = findLastMap;\n/**\n * Returns the index of the last element of the list which matches the predicate\n *\n * @example\n * import { findLastIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   a: number\n *   b: number\n * }\n * const xs: ReadonlyArray<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { a: number }) => x.a === 4)(xs), none)\n *\n *\n * @since 2.5.0\n */\nfunction findLastIndex(predicate) {\n    return function (as) {\n        var len = as.length;\n        for (var i = len - 1; i >= 0; i--) {\n            if (predicate(as[i])) {\n                return O.some(i);\n            }\n        }\n        return O.none;\n    };\n}\nexports.findLastIndex = findLastIndex;\n/**\n * Insert an element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { insertAt } from 'fp-ts/ReadonlyArray'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.5.0\n */\nfunction insertAt(i, a) {\n    return function (as) { return (i < 0 || i > as.length ? O.none : O.some(unsafeInsertAt(i, a, as))); };\n}\nexports.insertAt = insertAt;\n/**\n * Change the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { updateAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.5.0\n */\nfunction updateAt(i, a) {\n    return function (as) { return (isOutOfBound(i, as) ? O.none : O.some(unsafeUpdateAt(i, a, as))); };\n}\nexports.updateAt = updateAt;\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { deleteAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.5.0\n */\nfunction deleteAt(i) {\n    return function (as) { return (isOutOfBound(i, as) ? O.none : O.some(unsafeDeleteAt(i, as))); };\n}\nexports.deleteAt = deleteAt;\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds\n *\n * @example\n * import { modifyAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.5.0\n */\nfunction modifyAt(i, f) {\n    return function (as) { return (isOutOfBound(i, as) ? O.none : O.some(unsafeUpdateAt(i, f(as[i]), as))); };\n}\nexports.modifyAt = modifyAt;\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @category combinators\n * @since 2.5.0\n */\nfunction reverse(as) {\n    if (isEmpty(as)) {\n        return as;\n    }\n    return as.slice().reverse();\n}\nexports.reverse = reverse;\n/**\n * Extracts from an array of `Either` all the `Right` elements. All the `Right` elements are extracted in order\n *\n * @example\n * import { rights } from 'fp-ts/ReadonlyArray'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\nfunction rights(as) {\n    // tslint:disable-next-line: readonly-array\n    var r = [];\n    var len = as.length;\n    for (var i = 0; i < len; i++) {\n        var a = as[i];\n        if (a._tag === 'Right') {\n            r.push(a.right);\n        }\n    }\n    return r;\n}\nexports.rights = rights;\n/**\n * Extracts from an array of `Either` all the `Left` elements. All the `Left` elements are extracted in order\n *\n * @example\n * import { lefts } from 'fp-ts/ReadonlyArray'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @since 2.5.0\n */\nfunction lefts(as) {\n    // tslint:disable-next-line: readonly-array\n    var r = [];\n    var len = as.length;\n    for (var i = 0; i < len; i++) {\n        var a = as[i];\n        if (a._tag === 'Left') {\n            r.push(a.left);\n        }\n    }\n    return r;\n}\nexports.lefts = lefts;\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/ReadonlyArray'\n * import { ordNumber } from 'fp-ts/Ord'\n *\n * assert.deepStrictEqual(sort(ordNumber)([3, 2, 1]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar sort = function (O) { return function (as) {\n    return as.length <= 1 ? as : as.slice().sort(O.compare);\n}; };\nexports.sort = sort;\n// TODO: curry and make data-last in v3\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @category combinators\n * @since 2.5.0\n */\nfunction zipWith(fa, fb, f) {\n    // tslint:disable-next-line: readonly-array\n    var fc = [];\n    var len = Math.min(fa.length, fb.length);\n    for (var i = 0; i < len; i++) {\n        fc[i] = f(fa[i], fb[i]);\n    }\n    return fc;\n}\nexports.zipWith = zipWith;\nfunction zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return zipWith(as, bs, function (a, b) { return [a, b]; });\n}\nexports.zip = zip;\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @since 2.5.0\n */\nfunction unzip(as) {\n    // tslint:disable-next-line: readonly-array\n    var fa = [];\n    // tslint:disable-next-line: readonly-array\n    var fb = [];\n    for (var i = 0; i < as.length; i++) {\n        fa[i] = as[i][0];\n        fb[i] = as[i][1];\n    }\n    return [fa, fb];\n}\nexports.unzip = unzip;\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependToAll } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(prependToAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\nvar prependToAll = function (e) { return function (xs) {\n    // tslint:disable-next-line: readonly-array\n    var ys = [];\n    for (var _i = 0, xs_1 = xs; _i < xs_1.length; _i++) {\n        var x = xs_1[_i];\n        ys.push(e, x);\n    }\n    return ys;\n}; };\nexports.prependToAll = prependToAll;\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\nfunction intersperse(e) {\n    return function (as) {\n        var length = as.length;\n        if (length === 0) {\n            return as;\n        }\n        return cons(as[0], exports.prependToAll(e)(as.slice(1, as.length)));\n    };\n}\nexports.intersperse = intersperse;\n/**\n * Rotate an array to the right by `n` steps\n *\n * @example\n * import { rotate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nfunction rotate(n) {\n    return function (as) {\n        var len = as.length;\n        if (n === 0 || len <= 1 || len === Math.abs(n)) {\n            return as;\n        }\n        else if (n < 0) {\n            return rotate(len + n)(as);\n        }\n        else {\n            return as.slice(-n).concat(as.slice(0, len - n));\n        }\n    };\n}\nexports.rotate = rotate;\nfunction elem(E) {\n    return function (a, as) {\n        if (as === undefined) {\n            var elemE_1 = elem(E);\n            return function (as) { return elemE_1(a, as); };\n        }\n        var predicate = function (element) { return E.equals(element, a); };\n        var i = 0;\n        var len = as.length;\n        for (; i < len; i++) {\n            if (predicate(as[i])) {\n                return true;\n            }\n        }\n        return false;\n    };\n}\nexports.elem = elem;\n/**\n * Remove duplicates from an array, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/ReadonlyArray'\n * import { eqNumber } from 'fp-ts/Eq'\n *\n * assert.deepStrictEqual(uniq(eqNumber)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\nfunction uniq(E) {\n    var elemS = elem(E);\n    return function (as) {\n        var len = as.length;\n        if (len <= 1) {\n            return as;\n        }\n        // tslint:disable-next-line: readonly-array\n        var r = [];\n        var i = 0;\n        for (; i < len; i++) {\n            var a = as[i];\n            if (!elemS(a, r)) {\n                r.push(a);\n            }\n        }\n        return len === r.length ? as : r;\n    };\n}\nexports.uniq = uniq;\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/ReadonlyArray'\n * import { ord, ordString, ordNumber } from 'fp-ts/Ord'\n *\n * interface Person {\n *   name: string\n *   age: number\n * }\n * const byName = ord.contramap(ordString, (p: Person) => p.name)\n * const byAge = ord.contramap(ordNumber, (p: Person) => p.age)\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.5.0\n */\nfunction sortBy(ords) {\n    var M = Ord_1.getMonoid();\n    return exports.sort(ords.reduce(M.concat, M.empty));\n}\nexports.sortBy = sortBy;\n/**\n * A useful recursion pattern for processing an array to produce a new array, often used for \"chopping\" up the input\n * array. Typically chop is called with some function that will consume an initial prefix of the array and produce a\n * value and the rest of the array.\n *\n * @example\n * import { Eq, eqNumber } from 'fp-ts/Eq'\n * import { chop, spanLeft } from 'fp-ts/ReadonlyArray'\n *\n * const group = <A>(S: Eq<A>): ((as: ReadonlyArray<A>) => ReadonlyArray<ReadonlyArray<A>>) => {\n *   return chop(as => {\n *     const { init, rest } = spanLeft((a: A) => S.equals(a, as[0]))(as)\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(eqNumber)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar chop = function (f) { return function (as) {\n    // tslint:disable-next-line: readonly-array\n    var result = [];\n    var cs = as;\n    while (isNonEmpty(cs)) {\n        var _a = f(cs), b = _a[0], c = _a[1];\n        result.push(b);\n        cs = c;\n    }\n    return result;\n}; };\nexports.chop = chop;\n/**\n * Splits an array into two pieces, the first piece has `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @since 2.5.0\n */\nfunction splitAt(n) {\n    return function (as) { return [as.slice(0, n), as.slice(n)]; };\n}\nexports.splitAt = splitAt;\n/**\n * Splits an array into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the array. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `xs`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n *\n * @since 2.5.0\n */\nfunction chunksOf(n) {\n    var f = exports.chop(splitAt(n));\n    return function (as) { return (as.length === 0 ? exports.empty : isOutOfBound(n - 1, as) ? [as] : f(as)); };\n}\nexports.chunksOf = chunksOf;\nfunction comprehension(input, f, g) {\n    if (g === void 0) { g = function () { return true; }; }\n    var go = function (scope, input) {\n        if (input.length === 0) {\n            return g.apply(void 0, scope) ? [f.apply(void 0, scope)] : exports.empty;\n        }\n        else {\n            return chain_(input[0], function (x) { return go(snoc(scope, x), input.slice(1)); });\n        }\n    };\n    return go(exports.empty, input);\n}\nexports.comprehension = comprehension;\nfunction union(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var unionE_1 = union(E);\n            return function (ys) { return unionE_1(ys, xs); };\n        }\n        return concat(xs, ys.filter(function (a) { return !elemE(a, xs); }));\n    };\n}\nexports.union = union;\nfunction intersection(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var intersectionE_1 = intersection(E);\n            return function (ys) { return intersectionE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return elemE(a, ys); });\n    };\n}\nexports.intersection = intersection;\nfunction difference(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var differenceE_1 = difference(E);\n            return function (ys) { return differenceE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return !elemE(a, ys); });\n    };\n}\nexports.difference = difference;\n/**\n * Wrap a value into the type constructor.\n *\n * @category Applicative\n * @since 2.5.0\n */\nvar of = function (a) { return [a]; };\nexports.of = of;\n/**\n * @category Alternative\n * @since 2.7.0\n */\nvar zero = function () { return exports.empty; };\nexports.zero = zero;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar map_ = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\nvar mapWithIndex_ = function (fa, f) { return function_1.pipe(fa, exports.mapWithIndex(f)); };\nvar ap_ = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };\nvar chain_ = function (ma, f) {\n    return function_1.pipe(ma, exports.chain(f));\n};\nvar filter_ = function (fa, predicate) { return function_1.pipe(fa, exports.filter(predicate)); };\nvar filterMap_ = function (fa, f) { return function_1.pipe(fa, exports.filterMap(f)); };\nvar partitionWithIndex_ = function (fa, predicateWithIndex) { return function_1.pipe(fa, exports.partitionWithIndex(predicateWithIndex)); };\nvar partition_ = function (fa, predicate) { return function_1.pipe(fa, exports.partition(predicate)); };\nvar partitionMap_ = function (fa, f) { return function_1.pipe(fa, exports.partitionMap(f)); };\nvar partitionMapWithIndex_ = function (fa, f) { return function_1.pipe(fa, exports.partitionMapWithIndex(f)); };\nvar alt_ = function (fa, that) { return function_1.pipe(fa, exports.alt(that)); };\nvar reduce_ = function (fa, b, f) { return function_1.pipe(fa, exports.reduce(b, f)); };\nvar foldMap_ = function (M) {\n    var foldMapM = exports.foldMap(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapM(f)); };\n};\nvar reduceRight_ = function (fa, b, f) { return function_1.pipe(fa, exports.reduceRight(b, f)); };\nvar reduceWithIndex_ = function (fa, b, f) {\n    var l = fa.length;\n    var r = b;\n    for (var i = 0; i < l; i++) {\n        r = f(i, r, fa[i]);\n    }\n    return r;\n};\nvar foldMapWithIndex_ = function (M) { return function (fa, f) {\n    return fa.reduce(function (b, a, i) { return M.concat(b, f(i, a)); }, M.empty);\n}; };\nvar reduceRightWithIndex_ = function (fa, b, f) {\n    return function_1.pipe(fa, exports.reduceRightWithIndex(b, f));\n};\nvar filterMapWithIndex_ = function (fa, f) {\n    return function_1.pipe(fa, exports.filterMapWithIndex(f));\n};\nvar filterWithIndex_ = function (fa, predicateWithIndex) { return function_1.pipe(fa, exports.filterWithIndex(predicateWithIndex)); };\nvar extend_ = function (fa, f) { return function_1.pipe(fa, exports.extend(f)); };\nvar traverse_ = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar traverseWithIndex_ = function (F) {\n    var traverseWithIndexF = exports.traverseWithIndex(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseWithIndexF(f)); };\n};\n/* istanbul ignore next */\nvar wither_ = function (F) {\n    var witherF = exports.wither(F);\n    return function (fa, f) { return function_1.pipe(fa, witherF(f)); };\n};\n/* istanbul ignore next */\nvar wilt_ = function (F) {\n    var wiltF = exports.wilt(F);\n    return function (fa, f) { return function_1.pipe(fa, wiltF(f)); };\n};\n// -------------------------------------------------------------------------------------\n// pipeables\n// -------------------------------------------------------------------------------------\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nvar altW = function (that) { return function (fa) { return concat(fa, that()); }; };\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.5.0\n */\nexports.alt = exports.altW;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.5.0\n */\nvar ap = function (fa) {\n    return exports.chain(function (f) { return function_1.pipe(fa, exports.map(f)); });\n};\nexports.ap = ap;\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nvar apFirst = function (fb) {\n    return function_1.flow(exports.map(function (a) { return function () { return a; }; }), exports.ap(fb));\n};\nexports.apFirst = apFirst;\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nvar apSecond = function (fb) {\n    return function_1.flow(exports.map(function () { return function (b) { return b; }; }), exports.ap(fb));\n};\nexports.apSecond = apSecond;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.5.0\n */\nvar chain = function (f) { return function (ma) {\n    return function_1.pipe(ma, exports.chainWithIndex(function (_, a) { return f(a); }));\n}; };\nexports.chain = chain;\n/**\n * @since 2.7.0\n */\nvar chainWithIndex = function (f) { return function (ma) {\n    var outLen = 0;\n    var l = ma.length;\n    var temp = new Array(l);\n    for (var i = 0; i < l; i++) {\n        var e = ma[i];\n        var arr = f(i, e);\n        outLen += arr.length;\n        temp[i] = arr;\n    }\n    var out = Array(outLen);\n    var start = 0;\n    for (var i = 0; i < l; i++) {\n        var arr = temp[i];\n        var l_1 = arr.length;\n        for (var j = 0; j < l_1; j++) {\n            out[j + start] = arr[j];\n        }\n        start += l_1;\n    }\n    return out;\n}; };\nexports.chainWithIndex = chainWithIndex;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Monad`.\n *\n * @category combinators\n * @since 2.5.0\n */\nvar chainFirst = function (f) {\n    return exports.chain(function (a) {\n        return function_1.pipe(f(a), exports.map(function () { return a; }));\n    });\n};\nexports.chainFirst = chainFirst;\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.5.0\n */\nvar map = function (f) { return function (fa) {\n    return fa.map(function (a) { return f(a); });\n}; };\nexports.map = map;\n/**\n * @category FunctorWithIndex\n * @since 2.5.0\n */\nvar mapWithIndex = function (f) { return function (fa) { return fa.map(function (a, i) { return f(i, a); }); }; };\nexports.mapWithIndex = mapWithIndex;\n/**\n * @category Compactable\n * @since 2.5.0\n */\nvar separate = function (fa) {\n    // tslint:disable-next-line: readonly-array\n    var left = [];\n    // tslint:disable-next-line: readonly-array\n    var right = [];\n    for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n        var e = fa_1[_i];\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return {\n        left: left,\n        right: right\n    };\n};\nexports.separate = separate;\n/**\n * @category Filterable\n * @since 2.5.0\n */\nvar filter = function (predicate) { return function (fa) { return fa.filter(predicate); }; };\nexports.filter = filter;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nvar filterMapWithIndex = function (f) { return function (fa) {\n    // tslint:disable-next-line: readonly-array\n    var result = [];\n    for (var i = 0; i < fa.length; i++) {\n        var optionB = f(i, fa[i]);\n        if (O.isSome(optionB)) {\n            result.push(optionB.value);\n        }\n    }\n    return result;\n}; };\nexports.filterMapWithIndex = filterMapWithIndex;\n/**\n * @category Filterable\n * @since 2.5.0\n */\nvar filterMap = function (f) {\n    return exports.filterMapWithIndex(function (_, a) { return f(a); });\n};\nexports.filterMap = filterMap;\n/**\n * @category Compactable\n * @since 2.5.0\n */\nexports.compact = \n/*#__PURE__*/\nexports.filterMap(function_1.identity);\n/**\n * @category Filterable\n * @since 2.5.0\n */\nvar partition = function (predicate) {\n    return exports.partitionWithIndex(function (_, a) { return predicate(a); });\n};\nexports.partition = partition;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nvar partitionWithIndex = function (predicateWithIndex) { return function (fa) {\n    // tslint:disable-next-line: readonly-array\n    var left = [];\n    // tslint:disable-next-line: readonly-array\n    var right = [];\n    for (var i = 0; i < fa.length; i++) {\n        var a = fa[i];\n        if (predicateWithIndex(i, a)) {\n            right.push(a);\n        }\n        else {\n            left.push(a);\n        }\n    }\n    return {\n        left: left,\n        right: right\n    };\n}; };\nexports.partitionWithIndex = partitionWithIndex;\n/**\n * @category Filterable\n * @since 2.5.0\n */\nvar partitionMap = function (f) {\n    return exports.partitionMapWithIndex(function (_, a) { return f(a); });\n};\nexports.partitionMap = partitionMap;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nvar partitionMapWithIndex = function (f) { return function (fa) {\n    // tslint:disable-next-line: readonly-array\n    var left = [];\n    // tslint:disable-next-line: readonly-array\n    var right = [];\n    for (var i = 0; i < fa.length; i++) {\n        var e = f(i, fa[i]);\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return {\n        left: left,\n        right: right\n    };\n}; };\nexports.partitionMapWithIndex = partitionMapWithIndex;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nvar filterWithIndex = function (predicateWithIndex) { return function (fa) {\n    return fa.filter(function (a, i) { return predicateWithIndex(i, a); });\n}; };\nexports.filterWithIndex = filterWithIndex;\n/**\n * @category Extend\n * @since 2.5.0\n */\nvar extend = function (f) { return function (wa) { return wa.map(function (_, i, as) { return f(as.slice(i)); }); }; };\nexports.extend = extend;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.duplicate = \n/*#__PURE__*/\nexports.extend(function_1.identity);\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nvar foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = foldMapWithIndex_(M);\n    return function (f) { return function (fa) { return foldMapWithIndexM(fa, f); }; };\n};\nexports.foldMapWithIndex = foldMapWithIndex;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nvar reduce = function (b, f) {\n    return exports.reduceWithIndex(b, function (_, b, a) { return f(b, a); });\n};\nexports.reduce = reduce;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nvar foldMap = function (M) {\n    var foldMapWithIndexM = exports.foldMapWithIndex(M);\n    return function (f) { return foldMapWithIndexM(function (_, a) { return f(a); }); };\n};\nexports.foldMap = foldMap;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nvar reduceWithIndex = function (b, f) { return function (fa) { return reduceWithIndex_(fa, b, f); }; };\nexports.reduceWithIndex = reduceWithIndex;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nvar reduceRight = function (b, f) {\n    return exports.reduceRightWithIndex(b, function (_, a, b) { return f(a, b); });\n};\nexports.reduceRight = reduceRight;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nvar reduceRightWithIndex = function (b, f) { return function (fa) { return fa.reduceRight(function (b, a, i) { return f(i, a, b); }, b); }; };\nexports.reduceRightWithIndex = reduceRightWithIndex;\n/**\n * **for optimized and stack safe version check the data types `traverseArray` function**\n * @category Traversable\n * @since 2.6.3\n */\nvar traverse = function (F) {\n    var traverseWithIndexF = exports.traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\nexports.traverse = traverse;\n/**\n * **for optimized and stack safe version check the data types `sequenceArray` function**\n * @category Traversable\n * @since 2.6.3\n */\nvar sequence = function (F) { return function (ta) {\n    return reduce_(ta, F.of(exports.zero()), function (fas, fa) {\n        return F.ap(F.map(fas, function (as) { return function (a) { return snoc(as, a); }; }), fa);\n    });\n}; };\nexports.sequence = sequence;\n/**\n * **for optimized and stack safe version check the data types `traverseArrayWithIndex` function**\n * @category TraversableWithIndex\n * @since 2.6.3\n */\nvar traverseWithIndex = function (F) { return function (f) {\n    return exports.reduceWithIndex(F.of(exports.zero()), function (i, fbs, a) {\n        return F.ap(F.map(fbs, function (bs) { return function (b) { return snoc(bs, b); }; }), f(i, a));\n    });\n}; };\nexports.traverseWithIndex = traverseWithIndex;\n/**\n * @category Witherable\n * @since 2.6.5\n */\nvar wither = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (f) { return function (fa) { return F.map(function_1.pipe(fa, traverseF(f)), exports.compact); }; };\n};\nexports.wither = wither;\n/**\n * @category Witherable\n * @since 2.6.5\n */\nvar wilt = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (f) { return function (fa) { return F.map(function_1.pipe(fa, traverseF(f)), exports.separate); }; };\n};\nexports.wilt = wilt;\n/**\n * @category Unfoldable\n * @since 2.6.6\n */\nvar unfold = function (b, f) {\n    // tslint:disable-next-line: readonly-array\n    var ret = [];\n    var bb = b;\n    while (true) {\n        var mt = f(bb);\n        if (O.isSome(mt)) {\n            var _a = mt.value, a = _a[0], b_1 = _a[1];\n            ret.push(a);\n            bb = b_1;\n        }\n        else {\n            break;\n        }\n    }\n    return ret;\n};\nexports.unfold = unfold;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.5.0\n */\nexports.URI = 'ReadonlyArray';\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: map_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FunctorWithIndex = {\n    URI: exports.URI,\n    map: map_,\n    mapWithIndex: mapWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: map_,\n    ap: ap_,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: map_,\n    ap: ap_,\n    of: exports.of,\n    chain: chain_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Unfoldable = {\n    URI: exports.URI,\n    unfold: exports.unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: map_,\n    alt: alt_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alternative = {\n    URI: exports.URI,\n    map: map_,\n    ap: ap_,\n    of: exports.of,\n    alt: alt_,\n    zero: exports.zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Extend = {\n    URI: exports.URI,\n    map: map_,\n    extend: extend_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Compactable = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Filterable = {\n    URI: exports.URI,\n    map: map_,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: filter_,\n    filterMap: filterMap_,\n    partition: partition_,\n    partitionMap: partitionMap_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FilterableWithIndex = {\n    URI: exports.URI,\n    map: map_,\n    mapWithIndex: mapWithIndex_,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: filter_,\n    filterMap: filterMap_,\n    partition: partition_,\n    partitionMap: partitionMap_,\n    partitionMapWithIndex: partitionMapWithIndex_,\n    partitionWithIndex: partitionWithIndex_,\n    filterMapWithIndex: filterMapWithIndex_,\n    filterWithIndex: filterWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FoldableWithIndex = {\n    URI: exports.URI,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    reduceWithIndex: reduceWithIndex_,\n    foldMapWithIndex: foldMapWithIndex_,\n    reduceRightWithIndex: reduceRightWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: map_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.TraversableWithIndex = {\n    URI: exports.URI,\n    map: map_,\n    mapWithIndex: mapWithIndex_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    reduceWithIndex: reduceWithIndex_,\n    foldMapWithIndex: foldMapWithIndex_,\n    reduceRightWithIndex: reduceRightWithIndex_,\n    traverse: traverse_,\n    sequence: exports.sequence,\n    traverseWithIndex: traverseWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Witherable = {\n    URI: exports.URI,\n    map: map_,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: filter_,\n    filterMap: filterMap_,\n    partition: partition_,\n    partitionMap: partitionMap_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: exports.sequence,\n    wither: wither_,\n    wilt: wilt_\n};\n// TODO: remove in v3\n/**\n * @category instances\n * @since 2.5.0\n */\nexports.readonlyArray = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate,\n    map: map_,\n    ap: ap_,\n    of: exports.of,\n    chain: chain_,\n    filter: filter_,\n    filterMap: filterMap_,\n    partition: partition_,\n    partitionMap: partitionMap_,\n    mapWithIndex: mapWithIndex_,\n    partitionMapWithIndex: partitionMapWithIndex_,\n    partitionWithIndex: partitionWithIndex_,\n    filterMapWithIndex: filterMapWithIndex_,\n    filterWithIndex: filterWithIndex_,\n    alt: alt_,\n    zero: exports.zero,\n    unfold: exports.unfold,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: exports.sequence,\n    reduceWithIndex: reduceWithIndex_,\n    foldMapWithIndex: foldMapWithIndex_,\n    reduceRightWithIndex: reduceRightWithIndex_,\n    traverseWithIndex: traverseWithIndex_,\n    extend: extend_,\n    wither: wither_,\n    wilt: wilt_\n};\n// -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n/**\n * @category unsafe\n * @since 2.5.0\n */\nfunction unsafeInsertAt(i, a, as) {\n    var xs = as.slice();\n    xs.splice(i, 0, a);\n    return xs;\n}\nexports.unsafeInsertAt = unsafeInsertAt;\n/**\n * @category unsafe\n * @since 2.5.0\n */\nfunction unsafeUpdateAt(i, a, as) {\n    if (as[i] === a) {\n        return as;\n    }\n    else {\n        var xs = as.slice();\n        xs[i] = a;\n        return xs;\n    }\n}\nexports.unsafeUpdateAt = unsafeUpdateAt;\n/**\n * @category unsafe\n * @since 2.5.0\n */\nfunction unsafeDeleteAt(i, as) {\n    var xs = as.slice();\n    xs.splice(i, 1);\n    return xs;\n}\nexports.unsafeDeleteAt = unsafeDeleteAt;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * An empty array\n *\n * @since 2.5.0\n */\nexports.empty = [];\n/**\n * Check if a predicate holds true for every array member.\n *\n * @example\n * import { every } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], every(isPositive)), true)\n * assert.deepStrictEqual(pipe([1, 2, -3], every(isPositive)), false)\n *\n * @since 2.9.0\n */\nvar every = function (predicate) { return function (as) { return as.every(predicate); }; };\nexports.every = every;\n/**\n * Check if a predicate holds true for any array member.\n *\n * @example\n * import { some } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * assert.deepStrictEqual(pipe([-1, -2, 3], some(isPositive)), true)\n * assert.deepStrictEqual(pipe([-1, -2, -3], some(isPositive)), false)\n *\n * @since 2.9.0\n */\nvar some = function (predicate) { return function (as) { return as.some(predicate); }; };\nexports.some = some;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexports.Do = \n/*#__PURE__*/\nexports.of({});\n/**\n * @since 2.8.0\n */\nvar bindTo = function (name) {\n    return exports.map(function_1.bindTo_(name));\n};\nexports.bindTo = bindTo;\n/**\n * @since 2.8.0\n */\nvar bind = function (name, f) {\n    return exports.chain(function (a) {\n        return function_1.pipe(f(a), exports.map(function (b) { return function_1.bind_(a, name, b); }));\n    });\n};\nexports.bind = bind;\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nvar apS = function (name, fb) {\n    return function_1.flow(exports.map(function (a) { return function (b) { return function_1.bind_(a, name, b); }; }), exports.ap(fb));\n};\nexports.apS = apS;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}