{"ast":null,"code":"var _jsxFileName = \"/Users/ngocban/Desktop/imx-integration-reactjs/src/Marketplace.tsx\",\n    _s = $RefreshSig$();\n\nimport { ImmutableOrderStatus } from '@imtbl/imx-sdk';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire('dotenv').config();\n\nconst Marketplace = _ref => {\n  _s();\n\n  let {\n    client,\n    link\n  } = _ref;\n  const [marketplace, setMarketplace] = useState(Object);\n  const [buyOrderId, setBuyOrderId] = useState('');\n  useEffect(() => {\n    load();\n  }, []);\n\n  async function load() {\n    // setMarketplace(await client.getOrders({status: ImmutableOrderStatus.active, user: '0xc120a52ad90bb926bafcdfc9161740dcf4a2cea1'}))\n    setMarketplace(await client.getOrders({\n      status: ImmutableOrderStatus.active\n    }));\n  }\n\n  ; // buy an asset\n\n  async function buyNFT() {\n    await link.buy({\n      orderIds: [buyOrderId]\n    });\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Buy asset:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Order ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: buyOrderId,\n          onChange: e => setBuyOrderId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: buyNFT,\n        children: \"Buy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Marketplace (active sell orders):\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), JSON.stringify(marketplace.result)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Marketplace, \"hk+MGT+liXbJI6VbcpE7Aurz9Zo=\");\n\n_c = Marketplace;\nexport default Marketplace;\n\nvar _c;\n\n$RefreshReg$(_c, \"Marketplace\");","map":{"version":3,"names":["ImmutableOrderStatus","useEffect","useState","require","config","Marketplace","client","link","marketplace","setMarketplace","Object","buyOrderId","setBuyOrderId","load","getOrders","status","active","buyNFT","buy","orderIds","e","target","value","JSON","stringify","result"],"sources":["/Users/ngocban/Desktop/imx-integration-reactjs/src/Marketplace.tsx"],"sourcesContent":["import { Link, ImmutableXClient, ImmutableMethodResults, ImmutableOrderStatus} from '@imtbl/imx-sdk';\nimport { useEffect, useState } from 'react';\nrequire('dotenv').config();\n\ninterface MarketplaceProps {\n  client: ImmutableXClient,\n  link: Link\n}\n\nconst Marketplace = ({client, link}: MarketplaceProps) => {\n  const [marketplace, setMarketplace] = useState<ImmutableMethodResults.ImmutableGetOrdersResult>(Object);\n  const [buyOrderId, setBuyOrderId] = useState('');\n\n  useEffect(() => {\n    load()\n  }, [])\n\n  async function load(): Promise<void> {\n    // setMarketplace(await client.getOrders({status: ImmutableOrderStatus.active, user: '0xc120a52ad90bb926bafcdfc9161740dcf4a2cea1'}))\n    setMarketplace(await client.getOrders({status: ImmutableOrderStatus.active}))\n  };\n\n  // buy an asset\n  async function buyNFT() {\n    await link.buy({\n      orderIds:[buyOrderId]\n    })\n  };\n\n  return (\n    <div>\n      <div>\n        Buy asset:\n        <br/>\n        <label>\n          Order ID:\n          <input type=\"text\" value={buyOrderId} onChange={e => setBuyOrderId(e.target.value)} />\n        </label>\n        <button onClick={buyNFT}>Buy</button>\n      </div>\n      <br/><br/><br/>\n      <div>\n        Marketplace (active sell orders):\n        <br/>\n        {JSON.stringify(marketplace.result)}\n      </div>\n    </div>\n  );\n}\n\nexport default Marketplace;\n"],"mappings":";;;AAAA,SAAyDA,oBAAzD,QAAoF,gBAApF;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AACAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAOA,MAAMC,WAAW,GAAG,QAAsC;EAAA;;EAAA,IAArC;IAACC,MAAD;IAASC;EAAT,CAAqC;EACxD,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAkDQ,MAAlD,CAA9C;EACA,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;EAEAD,SAAS,CAAC,MAAM;IACdY,IAAI;EACL,CAFQ,EAEN,EAFM,CAAT;;EAIA,eAAeA,IAAf,GAAqC;IACnC;IACAJ,cAAc,CAAC,MAAMH,MAAM,CAACQ,SAAP,CAAiB;MAACC,MAAM,EAAEf,oBAAoB,CAACgB;IAA9B,CAAjB,CAAP,CAAd;EACD;;EAAA,CAXuD,CAaxD;;EACA,eAAeC,MAAf,GAAwB;IACtB,MAAMV,IAAI,CAACW,GAAL,CAAS;MACbC,QAAQ,EAAC,CAACR,UAAD;IADI,CAAT,CAAN;EAGD;;EAAA;EAED,oBACE;IAAA,wBACE;MAAA,sCAEE;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAA,qCAEE;UAAO,IAAI,EAAC,MAAZ;UAAmB,KAAK,EAAEA,UAA1B;UAAsC,QAAQ,EAAES,CAAC,IAAIR,aAAa,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV;QAAlE;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF,eAOE;QAAQ,OAAO,EAAEL,MAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAUE;MAAA;MAAA;MAAA;IAAA,QAVF,eAUO;MAAA;MAAA;MAAA;IAAA,QAVP,eAUY;MAAA;MAAA;MAAA;IAAA,QAVZ,eAWE;MAAA,6DAEE;QAAA;QAAA;QAAA;MAAA,QAFF,EAGGM,IAAI,CAACC,SAAL,CAAehB,WAAW,CAACiB,MAA3B,CAHH;IAAA;MAAA;MAAA;MAAA;IAAA,QAXF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD,CAvCD;;GAAMpB,W;;KAAAA,W;AAyCN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}