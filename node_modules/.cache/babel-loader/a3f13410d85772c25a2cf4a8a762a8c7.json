{"ast":null,"code":"/**\n * @since 0.3.2\n */\nimport * as t from 'io-ts';\n/**\n * Changes the output type of the given runtime type\n *\n * @example\n * import * as t from 'io-ts'\n * import { mapOutput } from 'io-ts-types/es6/mapOutput'\n * import { optionFromNullable } from 'io-ts-types/es6/optionFromNullable'\n * import { none, some } from 'fp-ts/es6/Option'\n *\n * // Input: t.Type<Option<number>, number | null, t.mixed>\n * const Input = optionFromNullable(t.number)\n *\n * const toUndefined = <A>(x: A | null): A | undefined => (x === null ? undefined : x)\n *\n * // Output: t.Type<Option<number>, number | undefined, t.mixed>\n * const Output = mapOutput(Input, toUndefined)\n *\n * assert.strictEqual(Output.encode(none), undefined)\n * assert.strictEqual(Output.encode(some(1)), 1)\n *\n * @since 0.3.2\n */\n\nexport function mapOutput(codec, f, name) {\n  if (name === void 0) {\n    name = codec.name;\n  }\n\n  return new t.Type(name, codec.is, codec.validate, function (a) {\n    return f(codec.encode(a));\n  });\n}","map":{"version":3,"names":["t","mapOutput","codec","f","name","Type","is","validate","a","encode"],"sources":["/Users/ngocban/Desktop/imx-integration-reactjs/node_modules/io-ts-types/es6/mapOutput.js"],"sourcesContent":["/**\n * @since 0.3.2\n */\nimport * as t from 'io-ts';\n/**\n * Changes the output type of the given runtime type\n *\n * @example\n * import * as t from 'io-ts'\n * import { mapOutput } from 'io-ts-types/es6/mapOutput'\n * import { optionFromNullable } from 'io-ts-types/es6/optionFromNullable'\n * import { none, some } from 'fp-ts/es6/Option'\n *\n * // Input: t.Type<Option<number>, number | null, t.mixed>\n * const Input = optionFromNullable(t.number)\n *\n * const toUndefined = <A>(x: A | null): A | undefined => (x === null ? undefined : x)\n *\n * // Output: t.Type<Option<number>, number | undefined, t.mixed>\n * const Output = mapOutput(Input, toUndefined)\n *\n * assert.strictEqual(Output.encode(none), undefined)\n * assert.strictEqual(Output.encode(some(1)), 1)\n *\n * @since 0.3.2\n */\nexport function mapOutput(codec, f, name) {\n    if (name === void 0) { name = codec.name; }\n    return new t.Type(name, codec.is, codec.validate, function (a) { return f(codec.encode(a)); });\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAO,KAAKA,CAAZ,MAAmB,OAAnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAA0BC,CAA1B,EAA6BC,IAA7B,EAAmC;EACtC,IAAIA,IAAI,KAAK,KAAK,CAAlB,EAAqB;IAAEA,IAAI,GAAGF,KAAK,CAACE,IAAb;EAAoB;;EAC3C,OAAO,IAAIJ,CAAC,CAACK,IAAN,CAAWD,IAAX,EAAiBF,KAAK,CAACI,EAAvB,EAA2BJ,KAAK,CAACK,QAAjC,EAA2C,UAAUC,CAAV,EAAa;IAAE,OAAOL,CAAC,CAACD,KAAK,CAACO,MAAN,CAAaD,CAAb,CAAD,CAAR;EAA4B,CAAtF,CAAP;AACH"},"metadata":{},"sourceType":"module"}