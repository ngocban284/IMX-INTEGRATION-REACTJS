{"ast":null,"code":"import { identity, pipe, bind_, bindTo_, flow } from './function';\nimport * as O from './Option';\nimport { fromCompare, getMonoid as getOrdMonoid, ordNumber } from './Ord'; // -------------------------------------------------------------------------------------\n// model\n// -------------------------------------------------------------------------------------\n\n/**\n * @category constructors\n * @since 2.5.0\n */\n// tslint:disable-next-line: readonly-array\n\nexport function fromArray(as) {\n  var l = as.length;\n\n  if (l === 0) {\n    return empty;\n  }\n\n  var ras = Array(l);\n\n  for (var i = 0; i < l; i++) {\n    ras[i] = as[i];\n  }\n\n  return ras;\n}\n/**\n * @category destructors\n * @since 2.5.0\n */\n// tslint:disable-next-line: readonly-array\n\nexport function toArray(ras) {\n  var l = ras.length;\n  var as = Array(l);\n\n  for (var i = 0; i < l; i++) {\n    as[i] = ras[i];\n  }\n\n  return as;\n}\n/**\n * @category instances\n * @since 2.5.0\n */\n\nexport function getShow(S) {\n  return {\n    show: function (as) {\n      return \"[\" + as.map(S.show).join(', ') + \"]\";\n    }\n  };\n}\n\nvar concat = function (x, y) {\n  var lenx = x.length;\n\n  if (lenx === 0) {\n    return y;\n  }\n\n  var leny = y.length;\n\n  if (leny === 0) {\n    return x;\n  }\n\n  var r = Array(lenx + leny);\n\n  for (var i = 0; i < lenx; i++) {\n    r[i] = x[i];\n  }\n\n  for (var i = 0; i < leny; i++) {\n    r[i + lenx] = y[i];\n  }\n\n  return r;\n};\n/**\n * Returns a `Monoid` for `ReadonlyArray<A>`\n *\n * @example\n * import { getMonoid } from 'fp-ts/ReadonlyArray'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.5.0\n */\n\n\nexport function getMonoid() {\n  return {\n    concat: concat,\n    empty: empty\n  };\n}\n/**\n * Derives an `Eq` over the `ReadonlyArray` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import { eqString } from 'fp-ts/Eq'\n * import { getEq } from 'fp-ts/ReadonlyArray'\n *\n * const E = getEq(eqString)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.5.0\n */\n\nexport function getEq(E) {\n  return {\n    equals: function (xs, ys) {\n      return xs === ys || xs.length === ys.length && xs.every(function (x, i) {\n        return E.equals(x, ys[i]);\n      });\n    }\n  };\n}\n/**\n * Derives an `Ord` over the `ReadonlyArray` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/ReadonlyArray'\n * import { ordString } from 'fp-ts/Ord'\n *\n * const O = getOrd(ordString)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n *\n * @category instances\n * @since 2.5.0\n */\n\nexport function getOrd(O) {\n  return fromCompare(function (a, b) {\n    var aLen = a.length;\n    var bLen = b.length;\n    var len = Math.min(aLen, bLen);\n\n    for (var i = 0; i < len; i++) {\n      var ordering = O.compare(a[i], b[i]);\n\n      if (ordering !== 0) {\n        return ordering;\n      }\n    }\n\n    return ordNumber.compare(aLen, bLen);\n  });\n}\n/**\n * Return a list of length `n` with element `i` initialized with `f(i)`\n *\n * @example\n * import { makeBy } from 'fp-ts/ReadonlyArray'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.5.0\n */\n\nexport function makeBy(n, f) {\n  // tslint:disable-next-line: readonly-array\n  var r = [];\n\n  for (var i = 0; i < n; i++) {\n    r.push(f(i));\n  }\n\n  return r;\n}\n/**\n * Create an array containing a range of integers, including both endpoints\n *\n * @example\n * import { range } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.5.0\n */\n\nexport function range(start, end) {\n  return makeBy(end - start + 1, function (i) {\n    return start + i;\n  });\n}\n/**\n * Create an array containing a value repeated the specified number of times\n *\n * @example\n * import { replicate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.5.0\n */\n\nexport function replicate(n, a) {\n  return makeBy(n, function () {\n    return a;\n  });\n}\n/**\n * Removes one level of nesting\n *\n * Derivable from `Monad`.\n *\n * @example\n * import { flatten } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(flatten([[1], [2], [3]]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport function flatten(mma) {\n  var rLen = 0;\n  var len = mma.length;\n\n  for (var i = 0; i < len; i++) {\n    rLen += mma[i].length;\n  }\n\n  var r = Array(rLen);\n  var start = 0;\n\n  for (var i = 0; i < len; i++) {\n    var arr = mma[i];\n    var l = arr.length;\n\n    for (var j = 0; j < l; j++) {\n      r[j + start] = arr[j];\n    }\n\n    start += l;\n  }\n\n  return r;\n}\n/**\n * Break an array into its first element and remaining elements\n *\n * @example\n * import { foldLeft } from 'fp-ts/ReadonlyArray'\n *\n * const len: <A>(as: ReadonlyArray<A>) => number = foldLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category destructors\n * @since 2.5.0\n */\n\nexport function foldLeft(onEmpty, onCons) {\n  return function (as) {\n    return isEmpty(as) ? onEmpty() : onCons(as[0], as.slice(1));\n  };\n}\n/**\n * Break an array into its initial elements and the last element\n *\n * @category destructors\n * @since 2.5.0\n */\n\nexport function foldRight(onEmpty, onCons) {\n  return function (as) {\n    return isEmpty(as) ? onEmpty() : onCons(as.slice(0, as.length - 1), as[as.length - 1]);\n  };\n}\n/**\n * Same as `reduce` but it carries over the intermediate steps\n *\n * @example\n * import { scanLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport function scanLeft(b, f) {\n  return function (as) {\n    var l = as.length; // tslint:disable-next-line: readonly-array\n\n    var r = new Array(l + 1);\n    r[0] = b;\n\n    for (var i = 0; i < l; i++) {\n      r[i + 1] = f(r[i], as[i]);\n    }\n\n    return r;\n  };\n}\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport function scanRight(b, f) {\n  return function (as) {\n    var l = as.length; // tslint:disable-next-line: readonly-array\n\n    var r = new Array(l + 1);\n    r[l] = b;\n\n    for (var i = l - 1; i >= 0; i--) {\n      r[i] = f(as[i], r[i + 1]);\n    }\n\n    return r;\n  };\n}\n/**\n * Test whether an array is empty\n *\n * @example\n * import { isEmpty } from 'fp-ts/ReadonlyArray'\n *\n * assert.strictEqual(isEmpty([]), true)\n *\n * @since 2.5.0\n */\n\nexport function isEmpty(as) {\n  return as.length === 0;\n}\n/**\n * Test whether an array is non empty narrowing down the type to `NonEmptyReadonlyArray<A>`\n *\n * @category guards\n * @since 2.5.0\n */\n\nexport function isNonEmpty(as) {\n  return as.length > 0;\n}\n/**\n * Test whether an array contains a particular index\n *\n * @since 2.5.0\n */\n\nexport function isOutOfBound(i, as) {\n  return i < 0 || i >= as.length;\n}\nexport function lookup(i, as) {\n  return as === undefined ? function (as) {\n    return lookup(i, as);\n  } : isOutOfBound(i, as) ? O.none : O.some(as[i]);\n}\nexport function cons(head, tail) {\n  if (tail === undefined) {\n    return function (tail) {\n      return cons(head, tail);\n    };\n  }\n\n  var len = tail.length;\n  var r = Array(len + 1);\n\n  for (var i = 0; i < len; i++) {\n    r[i + 1] = tail[i];\n  }\n\n  r[0] = head;\n  return r;\n} // TODO: curry and make data-last in v3\n\n/**\n * Append an element to the end of an array, creating a new non empty array\n *\n * @example\n * import { snoc } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(snoc([1, 2, 3], 4), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.5.0\n */\n\nexport function snoc(init, end) {\n  var len = init.length;\n  var r = Array(len + 1);\n\n  for (var i = 0; i < len; i++) {\n    r[i] = init[i];\n  }\n\n  r[len] = end;\n  return r;\n}\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @since 2.5.0\n */\n\nexport function head(as) {\n  return isEmpty(as) ? O.none : O.some(as[0]);\n}\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @since 2.5.0\n */\n\nexport function last(as) {\n  return lookup(as.length - 1, as);\n}\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @since 2.5.0\n */\n\nexport function tail(as) {\n  return isEmpty(as) ? O.none : O.some(as.slice(1));\n}\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @since 2.5.0\n */\n\nexport function init(as) {\n  var len = as.length;\n  return len === 0 ? O.none : O.some(as.slice(0, len - 1));\n}\n/**\n * Keep only a number of elements from the start of an array, creating a new array.\n * `n` must be a natural number\n *\n * @example\n * import { takeLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(takeLeft(2)([1, 2, 3]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport function takeLeft(n) {\n  return function (as) {\n    return as.slice(0, n);\n  };\n}\n/**\n * Keep only a number of elements from the end of an array, creating a new array.\n * `n` must be a natural number\n *\n * @example\n * import { takeRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(takeRight(2)([1, 2, 3, 4, 5]), [4, 5])\n *\n * @since 2.5.0\n */\n\nexport function takeRight(n) {\n  return function (as) {\n    return n === 0 ? empty : as.slice(-n);\n  };\n}\nexport function takeLeftWhile(predicate) {\n  return function (as) {\n    var i = spanIndexUncurry(as, predicate);\n    var init = Array(i);\n\n    for (var j = 0; j < i; j++) {\n      init[j] = as[j];\n    }\n\n    return init;\n  };\n}\n\nvar spanIndexUncurry = function (as, predicate) {\n  var l = as.length;\n  var i = 0;\n\n  for (; i < l; i++) {\n    if (!predicate(as[i])) {\n      break;\n    }\n  }\n\n  return i;\n};\n\nexport function spanLeft(predicate) {\n  return function (as) {\n    var i = spanIndexUncurry(as, predicate);\n    var init = Array(i);\n\n    for (var j = 0; j < i; j++) {\n      init[j] = as[j];\n    }\n\n    var l = as.length;\n    var rest = Array(l - i);\n\n    for (var j = i; j < l; j++) {\n      rest[j - i] = as[j];\n    }\n\n    return {\n      init: init,\n      rest: rest\n    };\n  };\n}\n/**\n * Drop a number of elements from the start of an array, creating a new array\n *\n * @example\n * import { dropLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(dropLeft(2)([1, 2, 3]), [3])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport function dropLeft(n) {\n  return function (as) {\n    return as.slice(n, as.length);\n  };\n}\n/**\n * Drop a number of elements from the end of an array, creating a new array\n *\n * @example\n * import { dropRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(dropRight(2)([1, 2, 3, 4, 5]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport function dropRight(n) {\n  return function (as) {\n    return as.slice(0, as.length - n);\n  };\n}\n/**\n * Remove the longest initial subarray for which all element satisfy the specified predicate, creating a new array\n *\n * @example\n * import { dropLeftWhile } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(dropLeftWhile((n: number) => n % 2 === 1)([1, 3, 2, 4, 5]), [2, 4, 5])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport function dropLeftWhile(predicate) {\n  return function (as) {\n    var i = spanIndexUncurry(as, predicate);\n    var l = as.length;\n    var rest = Array(l - i);\n\n    for (var j = i; j < l; j++) {\n      rest[j - i] = as[j];\n    }\n\n    return rest;\n  };\n}\n/**\n * Find the first index for which a predicate holds\n *\n * @example\n * import { findIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.5.0\n */\n\nexport function findIndex(predicate) {\n  return function (as) {\n    var len = as.length;\n\n    for (var i = 0; i < len; i++) {\n      if (predicate(as[i])) {\n        return O.some(i);\n      }\n    }\n\n    return O.none;\n  };\n}\nexport function findFirst(predicate) {\n  return function (as) {\n    var len = as.length;\n\n    for (var i = 0; i < len; i++) {\n      if (predicate(as[i])) {\n        return O.some(as[i]);\n      }\n    }\n\n    return O.none;\n  };\n}\n/**\n * Find the first element returned by an option based selector function\n *\n * @example\n * import { findFirstMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   name: string\n *   age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the first person that has an age\n * assert.deepStrictEqual(findFirstMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Mary'))\n *\n * @since 2.5.0\n */\n\nexport function findFirstMap(f) {\n  return function (as) {\n    var len = as.length;\n\n    for (var i = 0; i < len; i++) {\n      var v = f(as[i]);\n\n      if (O.isSome(v)) {\n        return v;\n      }\n    }\n\n    return O.none;\n  };\n}\nexport function findLast(predicate) {\n  return function (as) {\n    var len = as.length;\n\n    for (var i = len - 1; i >= 0; i--) {\n      if (predicate(as[i])) {\n        return O.some(as[i]);\n      }\n    }\n\n    return O.none;\n  };\n}\n/**\n * Find the last element returned by an option based selector function\n *\n * @example\n * import { findLastMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   name: string\n *   age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the last person that has an age\n * assert.deepStrictEqual(findLastMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Joey'))\n *\n * @since 2.5.0\n */\n\nexport function findLastMap(f) {\n  return function (as) {\n    var len = as.length;\n\n    for (var i = len - 1; i >= 0; i--) {\n      var v = f(as[i]);\n\n      if (O.isSome(v)) {\n        return v;\n      }\n    }\n\n    return O.none;\n  };\n}\n/**\n * Returns the index of the last element of the list which matches the predicate\n *\n * @example\n * import { findLastIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   a: number\n *   b: number\n * }\n * const xs: ReadonlyArray<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { a: number }) => x.a === 4)(xs), none)\n *\n *\n * @since 2.5.0\n */\n\nexport function findLastIndex(predicate) {\n  return function (as) {\n    var len = as.length;\n\n    for (var i = len - 1; i >= 0; i--) {\n      if (predicate(as[i])) {\n        return O.some(i);\n      }\n    }\n\n    return O.none;\n  };\n}\n/**\n * Insert an element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { insertAt } from 'fp-ts/ReadonlyArray'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.5.0\n */\n\nexport function insertAt(i, a) {\n  return function (as) {\n    return i < 0 || i > as.length ? O.none : O.some(unsafeInsertAt(i, a, as));\n  };\n}\n/**\n * Change the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { updateAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.5.0\n */\n\nexport function updateAt(i, a) {\n  return function (as) {\n    return isOutOfBound(i, as) ? O.none : O.some(unsafeUpdateAt(i, a, as));\n  };\n}\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { deleteAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.5.0\n */\n\nexport function deleteAt(i) {\n  return function (as) {\n    return isOutOfBound(i, as) ? O.none : O.some(unsafeDeleteAt(i, as));\n  };\n}\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds\n *\n * @example\n * import { modifyAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.5.0\n */\n\nexport function modifyAt(i, f) {\n  return function (as) {\n    return isOutOfBound(i, as) ? O.none : O.some(unsafeUpdateAt(i, f(as[i]), as));\n  };\n}\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport function reverse(as) {\n  if (isEmpty(as)) {\n    return as;\n  }\n\n  return as.slice().reverse();\n}\n/**\n * Extracts from an array of `Either` all the `Right` elements. All the `Right` elements are extracted in order\n *\n * @example\n * import { rights } from 'fp-ts/ReadonlyArray'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport function rights(as) {\n  // tslint:disable-next-line: readonly-array\n  var r = [];\n  var len = as.length;\n\n  for (var i = 0; i < len; i++) {\n    var a = as[i];\n\n    if (a._tag === 'Right') {\n      r.push(a.right);\n    }\n  }\n\n  return r;\n}\n/**\n * Extracts from an array of `Either` all the `Left` elements. All the `Left` elements are extracted in order\n *\n * @example\n * import { lefts } from 'fp-ts/ReadonlyArray'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @since 2.5.0\n */\n\nexport function lefts(as) {\n  // tslint:disable-next-line: readonly-array\n  var r = [];\n  var len = as.length;\n\n  for (var i = 0; i < len; i++) {\n    var a = as[i];\n\n    if (a._tag === 'Left') {\n      r.push(a.left);\n    }\n  }\n\n  return r;\n}\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/ReadonlyArray'\n * import { ordNumber } from 'fp-ts/Ord'\n *\n * assert.deepStrictEqual(sort(ordNumber)([3, 2, 1]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var sort = function (O) {\n  return function (as) {\n    return as.length <= 1 ? as : as.slice().sort(O.compare);\n  };\n}; // TODO: curry and make data-last in v3\n\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport function zipWith(fa, fb, f) {\n  // tslint:disable-next-line: readonly-array\n  var fc = [];\n  var len = Math.min(fa.length, fb.length);\n\n  for (var i = 0; i < len; i++) {\n    fc[i] = f(fa[i], fb[i]);\n  }\n\n  return fc;\n}\nexport function zip(as, bs) {\n  if (bs === undefined) {\n    return function (bs) {\n      return zip(bs, as);\n    };\n  }\n\n  return zipWith(as, bs, function (a, b) {\n    return [a, b];\n  });\n}\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @since 2.5.0\n */\n\nexport function unzip(as) {\n  // tslint:disable-next-line: readonly-array\n  var fa = []; // tslint:disable-next-line: readonly-array\n\n  var fb = [];\n\n  for (var i = 0; i < as.length; i++) {\n    fa[i] = as[i][0];\n    fb[i] = as[i][1];\n  }\n\n  return [fa, fb];\n}\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependToAll } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(prependToAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\n\nexport var prependToAll = function (e) {\n  return function (xs) {\n    // tslint:disable-next-line: readonly-array\n    var ys = [];\n\n    for (var _i = 0, xs_1 = xs; _i < xs_1.length; _i++) {\n      var x = xs_1[_i];\n      ys.push(e, x);\n    }\n\n    return ys;\n  };\n};\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\n\nexport function intersperse(e) {\n  return function (as) {\n    var length = as.length;\n\n    if (length === 0) {\n      return as;\n    }\n\n    return cons(as[0], prependToAll(e)(as.slice(1, as.length)));\n  };\n}\n/**\n * Rotate an array to the right by `n` steps\n *\n * @example\n * import { rotate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport function rotate(n) {\n  return function (as) {\n    var len = as.length;\n\n    if (n === 0 || len <= 1 || len === Math.abs(n)) {\n      return as;\n    } else if (n < 0) {\n      return rotate(len + n)(as);\n    } else {\n      return as.slice(-n).concat(as.slice(0, len - n));\n    }\n  };\n}\nexport function elem(E) {\n  return function (a, as) {\n    if (as === undefined) {\n      var elemE_1 = elem(E);\n      return function (as) {\n        return elemE_1(a, as);\n      };\n    }\n\n    var predicate = function (element) {\n      return E.equals(element, a);\n    };\n\n    var i = 0;\n    var len = as.length;\n\n    for (; i < len; i++) {\n      if (predicate(as[i])) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n}\n/**\n * Remove duplicates from an array, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/ReadonlyArray'\n * import { eqNumber } from 'fp-ts/Eq'\n *\n * assert.deepStrictEqual(uniq(eqNumber)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport function uniq(E) {\n  var elemS = elem(E);\n  return function (as) {\n    var len = as.length;\n\n    if (len <= 1) {\n      return as;\n    } // tslint:disable-next-line: readonly-array\n\n\n    var r = [];\n    var i = 0;\n\n    for (; i < len; i++) {\n      var a = as[i];\n\n      if (!elemS(a, r)) {\n        r.push(a);\n      }\n    }\n\n    return len === r.length ? as : r;\n  };\n}\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/ReadonlyArray'\n * import { ord, ordString, ordNumber } from 'fp-ts/Ord'\n *\n * interface Person {\n *   name: string\n *   age: number\n * }\n * const byName = ord.contramap(ordString, (p: Person) => p.name)\n * const byAge = ord.contramap(ordNumber, (p: Person) => p.age)\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport function sortBy(ords) {\n  var M = getOrdMonoid();\n  return sort(ords.reduce(M.concat, M.empty));\n}\n/**\n * A useful recursion pattern for processing an array to produce a new array, often used for \"chopping\" up the input\n * array. Typically chop is called with some function that will consume an initial prefix of the array and produce a\n * value and the rest of the array.\n *\n * @example\n * import { Eq, eqNumber } from 'fp-ts/Eq'\n * import { chop, spanLeft } from 'fp-ts/ReadonlyArray'\n *\n * const group = <A>(S: Eq<A>): ((as: ReadonlyArray<A>) => ReadonlyArray<ReadonlyArray<A>>) => {\n *   return chop(as => {\n *     const { init, rest } = spanLeft((a: A) => S.equals(a, as[0]))(as)\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(eqNumber)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var chop = function (f) {\n  return function (as) {\n    // tslint:disable-next-line: readonly-array\n    var result = [];\n    var cs = as;\n\n    while (isNonEmpty(cs)) {\n      var _a = f(cs),\n          b = _a[0],\n          c = _a[1];\n\n      result.push(b);\n      cs = c;\n    }\n\n    return result;\n  };\n};\n/**\n * Splits an array into two pieces, the first piece has `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @since 2.5.0\n */\n\nexport function splitAt(n) {\n  return function (as) {\n    return [as.slice(0, n), as.slice(n)];\n  };\n}\n/**\n * Splits an array into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the array. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `xs`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n *\n * @since 2.5.0\n */\n\nexport function chunksOf(n) {\n  var f = chop(splitAt(n));\n  return function (as) {\n    return as.length === 0 ? empty : isOutOfBound(n - 1, as) ? [as] : f(as);\n  };\n}\nexport function comprehension(input, f, g) {\n  if (g === void 0) {\n    g = function () {\n      return true;\n    };\n  }\n\n  var go = function (scope, input) {\n    if (input.length === 0) {\n      return g.apply(void 0, scope) ? [f.apply(void 0, scope)] : empty;\n    } else {\n      return chain_(input[0], function (x) {\n        return go(snoc(scope, x), input.slice(1));\n      });\n    }\n  };\n\n  return go(empty, input);\n}\nexport function union(E) {\n  var elemE = elem(E);\n  return function (xs, ys) {\n    if (ys === undefined) {\n      var unionE_1 = union(E);\n      return function (ys) {\n        return unionE_1(ys, xs);\n      };\n    }\n\n    return concat(xs, ys.filter(function (a) {\n      return !elemE(a, xs);\n    }));\n  };\n}\nexport function intersection(E) {\n  var elemE = elem(E);\n  return function (xs, ys) {\n    if (ys === undefined) {\n      var intersectionE_1 = intersection(E);\n      return function (ys) {\n        return intersectionE_1(ys, xs);\n      };\n    }\n\n    return xs.filter(function (a) {\n      return elemE(a, ys);\n    });\n  };\n}\nexport function difference(E) {\n  var elemE = elem(E);\n  return function (xs, ys) {\n    if (ys === undefined) {\n      var differenceE_1 = difference(E);\n      return function (ys) {\n        return differenceE_1(ys, xs);\n      };\n    }\n\n    return xs.filter(function (a) {\n      return !elemE(a, ys);\n    });\n  };\n}\n/**\n * Wrap a value into the type constructor.\n *\n * @category Applicative\n * @since 2.5.0\n */\n\nexport var of = function (a) {\n  return [a];\n};\n/**\n * @category Alternative\n * @since 2.7.0\n */\n\nexport var zero = function () {\n  return empty;\n}; // -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n\nvar map_ = function (fa, f) {\n  return pipe(fa, map(f));\n};\n\nvar mapWithIndex_ = function (fa, f) {\n  return pipe(fa, mapWithIndex(f));\n};\n\nvar ap_ = function (fab, fa) {\n  return pipe(fab, ap(fa));\n};\n\nvar chain_ = function (ma, f) {\n  return pipe(ma, chain(f));\n};\n\nvar filter_ = function (fa, predicate) {\n  return pipe(fa, filter(predicate));\n};\n\nvar filterMap_ = function (fa, f) {\n  return pipe(fa, filterMap(f));\n};\n\nvar partitionWithIndex_ = function (fa, predicateWithIndex) {\n  return pipe(fa, partitionWithIndex(predicateWithIndex));\n};\n\nvar partition_ = function (fa, predicate) {\n  return pipe(fa, partition(predicate));\n};\n\nvar partitionMap_ = function (fa, f) {\n  return pipe(fa, partitionMap(f));\n};\n\nvar partitionMapWithIndex_ = function (fa, f) {\n  return pipe(fa, partitionMapWithIndex(f));\n};\n\nvar alt_ = function (fa, that) {\n  return pipe(fa, alt(that));\n};\n\nvar reduce_ = function (fa, b, f) {\n  return pipe(fa, reduce(b, f));\n};\n\nvar foldMap_ = function (M) {\n  var foldMapM = foldMap(M);\n  return function (fa, f) {\n    return pipe(fa, foldMapM(f));\n  };\n};\n\nvar reduceRight_ = function (fa, b, f) {\n  return pipe(fa, reduceRight(b, f));\n};\n\nvar reduceWithIndex_ = function (fa, b, f) {\n  var l = fa.length;\n  var r = b;\n\n  for (var i = 0; i < l; i++) {\n    r = f(i, r, fa[i]);\n  }\n\n  return r;\n};\n\nvar foldMapWithIndex_ = function (M) {\n  return function (fa, f) {\n    return fa.reduce(function (b, a, i) {\n      return M.concat(b, f(i, a));\n    }, M.empty);\n  };\n};\n\nvar reduceRightWithIndex_ = function (fa, b, f) {\n  return pipe(fa, reduceRightWithIndex(b, f));\n};\n\nvar filterMapWithIndex_ = function (fa, f) {\n  return pipe(fa, filterMapWithIndex(f));\n};\n\nvar filterWithIndex_ = function (fa, predicateWithIndex) {\n  return pipe(fa, filterWithIndex(predicateWithIndex));\n};\n\nvar extend_ = function (fa, f) {\n  return pipe(fa, extend(f));\n};\n\nvar traverse_ = function (F) {\n  var traverseF = traverse(F);\n  return function (ta, f) {\n    return pipe(ta, traverseF(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar traverseWithIndex_ = function (F) {\n  var traverseWithIndexF = traverseWithIndex(F);\n  return function (ta, f) {\n    return pipe(ta, traverseWithIndexF(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar wither_ = function (F) {\n  var witherF = wither(F);\n  return function (fa, f) {\n    return pipe(fa, witherF(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar wilt_ = function (F) {\n  var wiltF = wilt(F);\n  return function (fa, f) {\n    return pipe(fa, wiltF(f));\n  };\n}; // -------------------------------------------------------------------------------------\n// pipeables\n// -------------------------------------------------------------------------------------\n\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\n\n\nexport var altW = function (that) {\n  return function (fa) {\n    return concat(fa, that());\n  };\n};\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.5.0\n */\n\nexport var alt = altW;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.5.0\n */\n\nexport var ap = function (fa) {\n  return chain(function (f) {\n    return pipe(fa, map(f));\n  });\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var apFirst = function (fb) {\n  return flow(map(function (a) {\n    return function () {\n      return a;\n    };\n  }), ap(fb));\n};\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var apSecond = function (fb) {\n  return flow(map(function () {\n    return function (b) {\n      return b;\n    };\n  }), ap(fb));\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.5.0\n */\n\nexport var chain = function (f) {\n  return function (ma) {\n    return pipe(ma, chainWithIndex(function (_, a) {\n      return f(a);\n    }));\n  };\n};\n/**\n * @since 2.7.0\n */\n\nexport var chainWithIndex = function (f) {\n  return function (ma) {\n    var outLen = 0;\n    var l = ma.length;\n    var temp = new Array(l);\n\n    for (var i = 0; i < l; i++) {\n      var e = ma[i];\n      var arr = f(i, e);\n      outLen += arr.length;\n      temp[i] = arr;\n    }\n\n    var out = Array(outLen);\n    var start = 0;\n\n    for (var i = 0; i < l; i++) {\n      var arr = temp[i];\n      var l_1 = arr.length;\n\n      for (var j = 0; j < l_1; j++) {\n        out[j + start] = arr[j];\n      }\n\n      start += l_1;\n    }\n\n    return out;\n  };\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Monad`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var chainFirst = function (f) {\n  return chain(function (a) {\n    return pipe(f(a), map(function () {\n      return a;\n    }));\n  });\n};\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.5.0\n */\n\nexport var map = function (f) {\n  return function (fa) {\n    return fa.map(function (a) {\n      return f(a);\n    });\n  };\n};\n/**\n * @category FunctorWithIndex\n * @since 2.5.0\n */\n\nexport var mapWithIndex = function (f) {\n  return function (fa) {\n    return fa.map(function (a, i) {\n      return f(i, a);\n    });\n  };\n};\n/**\n * @category Compactable\n * @since 2.5.0\n */\n\nexport var separate = function (fa) {\n  // tslint:disable-next-line: readonly-array\n  var left = []; // tslint:disable-next-line: readonly-array\n\n  var right = [];\n\n  for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n    var e = fa_1[_i];\n\n    if (e._tag === 'Left') {\n      left.push(e.left);\n    } else {\n      right.push(e.right);\n    }\n  }\n\n  return {\n    left: left,\n    right: right\n  };\n};\n/**\n * @category Filterable\n * @since 2.5.0\n */\n\nexport var filter = function (predicate) {\n  return function (fa) {\n    return fa.filter(predicate);\n  };\n};\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\n\nexport var filterMapWithIndex = function (f) {\n  return function (fa) {\n    // tslint:disable-next-line: readonly-array\n    var result = [];\n\n    for (var i = 0; i < fa.length; i++) {\n      var optionB = f(i, fa[i]);\n\n      if (O.isSome(optionB)) {\n        result.push(optionB.value);\n      }\n    }\n\n    return result;\n  };\n};\n/**\n * @category Filterable\n * @since 2.5.0\n */\n\nexport var filterMap = function (f) {\n  return filterMapWithIndex(function (_, a) {\n    return f(a);\n  });\n};\n/**\n * @category Compactable\n * @since 2.5.0\n */\n\nexport var compact = /*#__PURE__*/filterMap(identity);\n/**\n * @category Filterable\n * @since 2.5.0\n */\n\nexport var partition = function (predicate) {\n  return partitionWithIndex(function (_, a) {\n    return predicate(a);\n  });\n};\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\n\nexport var partitionWithIndex = function (predicateWithIndex) {\n  return function (fa) {\n    // tslint:disable-next-line: readonly-array\n    var left = []; // tslint:disable-next-line: readonly-array\n\n    var right = [];\n\n    for (var i = 0; i < fa.length; i++) {\n      var a = fa[i];\n\n      if (predicateWithIndex(i, a)) {\n        right.push(a);\n      } else {\n        left.push(a);\n      }\n    }\n\n    return {\n      left: left,\n      right: right\n    };\n  };\n};\n/**\n * @category Filterable\n * @since 2.5.0\n */\n\nexport var partitionMap = function (f) {\n  return partitionMapWithIndex(function (_, a) {\n    return f(a);\n  });\n};\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\n\nexport var partitionMapWithIndex = function (f) {\n  return function (fa) {\n    // tslint:disable-next-line: readonly-array\n    var left = []; // tslint:disable-next-line: readonly-array\n\n    var right = [];\n\n    for (var i = 0; i < fa.length; i++) {\n      var e = f(i, fa[i]);\n\n      if (e._tag === 'Left') {\n        left.push(e.left);\n      } else {\n        right.push(e.right);\n      }\n    }\n\n    return {\n      left: left,\n      right: right\n    };\n  };\n};\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\n\nexport var filterWithIndex = function (predicateWithIndex) {\n  return function (fa) {\n    return fa.filter(function (a, i) {\n      return predicateWithIndex(i, a);\n    });\n  };\n};\n/**\n * @category Extend\n * @since 2.5.0\n */\n\nexport var extend = function (f) {\n  return function (wa) {\n    return wa.map(function (_, i, as) {\n      return f(as.slice(i));\n    });\n  };\n};\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var duplicate = /*#__PURE__*/extend(identity);\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\n\nexport var foldMapWithIndex = function (M) {\n  var foldMapWithIndexM = foldMapWithIndex_(M);\n  return function (f) {\n    return function (fa) {\n      return foldMapWithIndexM(fa, f);\n    };\n  };\n};\n/**\n * @category Foldable\n * @since 2.5.0\n */\n\nexport var reduce = function (b, f) {\n  return reduceWithIndex(b, function (_, b, a) {\n    return f(b, a);\n  });\n};\n/**\n * @category Foldable\n * @since 2.5.0\n */\n\nexport var foldMap = function (M) {\n  var foldMapWithIndexM = foldMapWithIndex(M);\n  return function (f) {\n    return foldMapWithIndexM(function (_, a) {\n      return f(a);\n    });\n  };\n};\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\n\nexport var reduceWithIndex = function (b, f) {\n  return function (fa) {\n    return reduceWithIndex_(fa, b, f);\n  };\n};\n/**\n * @category Foldable\n * @since 2.5.0\n */\n\nexport var reduceRight = function (b, f) {\n  return reduceRightWithIndex(b, function (_, a, b) {\n    return f(a, b);\n  });\n};\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\n\nexport var reduceRightWithIndex = function (b, f) {\n  return function (fa) {\n    return fa.reduceRight(function (b, a, i) {\n      return f(i, a, b);\n    }, b);\n  };\n};\n/**\n * **for optimized and stack safe version check the data types `traverseArray` function**\n * @category Traversable\n * @since 2.6.3\n */\n\nexport var traverse = function (F) {\n  var traverseWithIndexF = traverseWithIndex(F);\n  return function (f) {\n    return traverseWithIndexF(function (_, a) {\n      return f(a);\n    });\n  };\n};\n/**\n * **for optimized and stack safe version check the data types `sequenceArray` function**\n * @category Traversable\n * @since 2.6.3\n */\n\nexport var sequence = function (F) {\n  return function (ta) {\n    return reduce_(ta, F.of(zero()), function (fas, fa) {\n      return F.ap(F.map(fas, function (as) {\n        return function (a) {\n          return snoc(as, a);\n        };\n      }), fa);\n    });\n  };\n};\n/**\n * **for optimized and stack safe version check the data types `traverseArrayWithIndex` function**\n * @category TraversableWithIndex\n * @since 2.6.3\n */\n\nexport var traverseWithIndex = function (F) {\n  return function (f) {\n    return reduceWithIndex(F.of(zero()), function (i, fbs, a) {\n      return F.ap(F.map(fbs, function (bs) {\n        return function (b) {\n          return snoc(bs, b);\n        };\n      }), f(i, a));\n    });\n  };\n};\n/**\n * @category Witherable\n * @since 2.6.5\n */\n\nexport var wither = function (F) {\n  var traverseF = traverse(F);\n  return function (f) {\n    return function (fa) {\n      return F.map(pipe(fa, traverseF(f)), compact);\n    };\n  };\n};\n/**\n * @category Witherable\n * @since 2.6.5\n */\n\nexport var wilt = function (F) {\n  var traverseF = traverse(F);\n  return function (f) {\n    return function (fa) {\n      return F.map(pipe(fa, traverseF(f)), separate);\n    };\n  };\n};\n/**\n * @category Unfoldable\n * @since 2.6.6\n */\n\nexport var unfold = function (b, f) {\n  // tslint:disable-next-line: readonly-array\n  var ret = [];\n  var bb = b;\n\n  while (true) {\n    var mt = f(bb);\n\n    if (O.isSome(mt)) {\n      var _a = mt.value,\n          a = _a[0],\n          b_1 = _a[1];\n      ret.push(a);\n      bb = b_1;\n    } else {\n      break;\n    }\n  }\n\n  return ret;\n}; // -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n\n/**\n * @category instances\n * @since 2.5.0\n */\n\nexport var URI = 'ReadonlyArray';\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Functor = {\n  URI: URI,\n  map: map_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var FunctorWithIndex = {\n  URI: URI,\n  map: map_,\n  mapWithIndex: mapWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Applicative = {\n  URI: URI,\n  map: map_,\n  ap: ap_,\n  of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Monad = {\n  URI: URI,\n  map: map_,\n  ap: ap_,\n  of: of,\n  chain: chain_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Unfoldable = {\n  URI: URI,\n  unfold: unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Alt = {\n  URI: URI,\n  map: map_,\n  alt: alt_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Alternative = {\n  URI: URI,\n  map: map_,\n  ap: ap_,\n  of: of,\n  alt: alt_,\n  zero: zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Extend = {\n  URI: URI,\n  map: map_,\n  extend: extend_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Compactable = {\n  URI: URI,\n  compact: compact,\n  separate: separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Filterable = {\n  URI: URI,\n  map: map_,\n  compact: compact,\n  separate: separate,\n  filter: filter_,\n  filterMap: filterMap_,\n  partition: partition_,\n  partitionMap: partitionMap_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var FilterableWithIndex = {\n  URI: URI,\n  map: map_,\n  mapWithIndex: mapWithIndex_,\n  compact: compact,\n  separate: separate,\n  filter: filter_,\n  filterMap: filterMap_,\n  partition: partition_,\n  partitionMap: partitionMap_,\n  partitionMapWithIndex: partitionMapWithIndex_,\n  partitionWithIndex: partitionWithIndex_,\n  filterMapWithIndex: filterMapWithIndex_,\n  filterWithIndex: filterWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Foldable = {\n  URI: URI,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var FoldableWithIndex = {\n  URI: URI,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_,\n  reduceWithIndex: reduceWithIndex_,\n  foldMapWithIndex: foldMapWithIndex_,\n  reduceRightWithIndex: reduceRightWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Traversable = {\n  URI: URI,\n  map: map_,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_,\n  traverse: traverse_,\n  sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var TraversableWithIndex = {\n  URI: URI,\n  map: map_,\n  mapWithIndex: mapWithIndex_,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_,\n  reduceWithIndex: reduceWithIndex_,\n  foldMapWithIndex: foldMapWithIndex_,\n  reduceRightWithIndex: reduceRightWithIndex_,\n  traverse: traverse_,\n  sequence: sequence,\n  traverseWithIndex: traverseWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Witherable = {\n  URI: URI,\n  map: map_,\n  compact: compact,\n  separate: separate,\n  filter: filter_,\n  filterMap: filterMap_,\n  partition: partition_,\n  partitionMap: partitionMap_,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_,\n  traverse: traverse_,\n  sequence: sequence,\n  wither: wither_,\n  wilt: wilt_\n}; // TODO: remove in v3\n\n/**\n * @category instances\n * @since 2.5.0\n */\n\nexport var readonlyArray = {\n  URI: URI,\n  compact: compact,\n  separate: separate,\n  map: map_,\n  ap: ap_,\n  of: of,\n  chain: chain_,\n  filter: filter_,\n  filterMap: filterMap_,\n  partition: partition_,\n  partitionMap: partitionMap_,\n  mapWithIndex: mapWithIndex_,\n  partitionMapWithIndex: partitionMapWithIndex_,\n  partitionWithIndex: partitionWithIndex_,\n  filterMapWithIndex: filterMapWithIndex_,\n  filterWithIndex: filterWithIndex_,\n  alt: alt_,\n  zero: zero,\n  unfold: unfold,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_,\n  traverse: traverse_,\n  sequence: sequence,\n  reduceWithIndex: reduceWithIndex_,\n  foldMapWithIndex: foldMapWithIndex_,\n  reduceRightWithIndex: reduceRightWithIndex_,\n  traverseWithIndex: traverseWithIndex_,\n  extend: extend_,\n  wither: wither_,\n  wilt: wilt_\n}; // -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n\n/**\n * @category unsafe\n * @since 2.5.0\n */\n\nexport function unsafeInsertAt(i, a, as) {\n  var xs = as.slice();\n  xs.splice(i, 0, a);\n  return xs;\n}\n/**\n * @category unsafe\n * @since 2.5.0\n */\n\nexport function unsafeUpdateAt(i, a, as) {\n  if (as[i] === a) {\n    return as;\n  } else {\n    var xs = as.slice();\n    xs[i] = a;\n    return xs;\n  }\n}\n/**\n * @category unsafe\n * @since 2.5.0\n */\n\nexport function unsafeDeleteAt(i, as) {\n  var xs = as.slice();\n  xs.splice(i, 1);\n  return xs;\n} // -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n\n/**\n * An empty array\n *\n * @since 2.5.0\n */\n\nexport var empty = [];\n/**\n * Check if a predicate holds true for every array member.\n *\n * @example\n * import { every } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], every(isPositive)), true)\n * assert.deepStrictEqual(pipe([1, 2, -3], every(isPositive)), false)\n *\n * @since 2.9.0\n */\n\nexport var every = function (predicate) {\n  return function (as) {\n    return as.every(predicate);\n  };\n};\n/**\n * Check if a predicate holds true for any array member.\n *\n * @example\n * import { some } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * assert.deepStrictEqual(pipe([-1, -2, 3], some(isPositive)), true)\n * assert.deepStrictEqual(pipe([-1, -2, -3], some(isPositive)), false)\n *\n * @since 2.9.0\n */\n\nexport var some = function (predicate) {\n  return function (as) {\n    return as.some(predicate);\n  };\n}; // -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.9.0\n */\n\nexport var Do = /*#__PURE__*/of({});\n/**\n * @since 2.8.0\n */\n\nexport var bindTo = function (name) {\n  return map(bindTo_(name));\n};\n/**\n * @since 2.8.0\n */\n\nexport var bind = function (name, f) {\n  return chain(function (a) {\n    return pipe(f(a), map(function (b) {\n      return bind_(a, name, b);\n    }));\n  });\n}; // -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.8.0\n */\n\nexport var apS = function (name, fb) {\n  return flow(map(function (a) {\n    return function (b) {\n      return bind_(a, name, b);\n    };\n  }), ap(fb));\n};","map":{"version":3,"names":["identity","pipe","bind_","bindTo_","flow","O","fromCompare","getMonoid","getOrdMonoid","ordNumber","fromArray","as","l","length","empty","ras","Array","i","toArray","getShow","S","show","map","join","concat","x","y","lenx","leny","r","getEq","E","equals","xs","ys","every","getOrd","a","b","aLen","bLen","len","Math","min","ordering","compare","makeBy","n","f","push","range","start","end","replicate","flatten","mma","rLen","arr","j","foldLeft","onEmpty","onCons","isEmpty","slice","foldRight","scanLeft","scanRight","isNonEmpty","isOutOfBound","lookup","undefined","none","some","cons","head","tail","snoc","init","last","takeLeft","takeRight","takeLeftWhile","predicate","spanIndexUncurry","spanLeft","rest","dropLeft","dropRight","dropLeftWhile","findIndex","findFirst","findFirstMap","v","isSome","findLast","findLastMap","findLastIndex","insertAt","unsafeInsertAt","updateAt","unsafeUpdateAt","deleteAt","unsafeDeleteAt","modifyAt","reverse","rights","_tag","right","lefts","left","sort","zipWith","fa","fb","fc","zip","bs","unzip","prependToAll","e","_i","xs_1","intersperse","rotate","abs","elem","elemE_1","element","uniq","elemS","sortBy","ords","M","reduce","chop","result","cs","_a","c","splitAt","chunksOf","comprehension","input","g","go","scope","apply","chain_","union","elemE","unionE_1","filter","intersection","intersectionE_1","difference","differenceE_1","of","zero","map_","mapWithIndex_","mapWithIndex","ap_","fab","ap","ma","chain","filter_","filterMap_","filterMap","partitionWithIndex_","predicateWithIndex","partitionWithIndex","partition_","partition","partitionMap_","partitionMap","partitionMapWithIndex_","partitionMapWithIndex","alt_","that","alt","reduce_","foldMap_","foldMapM","foldMap","reduceRight_","reduceRight","reduceWithIndex_","foldMapWithIndex_","reduceRightWithIndex_","reduceRightWithIndex","filterMapWithIndex_","filterMapWithIndex","filterWithIndex_","filterWithIndex","extend_","extend","traverse_","F","traverseF","traverse","ta","traverseWithIndex_","traverseWithIndexF","traverseWithIndex","wither_","witherF","wither","wilt_","wiltF","wilt","altW","apFirst","apSecond","chainWithIndex","_","outLen","temp","out","l_1","chainFirst","separate","fa_1","optionB","value","compact","wa","duplicate","foldMapWithIndex","foldMapWithIndexM","reduceWithIndex","sequence","fas","fbs","unfold","ret","bb","mt","b_1","URI","Functor","FunctorWithIndex","Applicative","Monad","Unfoldable","Alt","Alternative","Extend","Compactable","Filterable","FilterableWithIndex","Foldable","FoldableWithIndex","Traversable","TraversableWithIndex","Witherable","readonlyArray","splice","Do","bindTo","name","bind","apS"],"sources":["/Users/ngocban/Desktop/imx-integration-reactjs/node_modules/fp-ts/es6/ReadonlyArray.js"],"sourcesContent":["import { identity, pipe, bind_, bindTo_, flow } from './function';\nimport * as O from './Option';\nimport { fromCompare, getMonoid as getOrdMonoid, ordNumber } from './Ord';\n// -------------------------------------------------------------------------------------\n// model\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.5.0\n */\n// tslint:disable-next-line: readonly-array\nexport function fromArray(as) {\n    var l = as.length;\n    if (l === 0) {\n        return empty;\n    }\n    var ras = Array(l);\n    for (var i = 0; i < l; i++) {\n        ras[i] = as[i];\n    }\n    return ras;\n}\n/**\n * @category destructors\n * @since 2.5.0\n */\n// tslint:disable-next-line: readonly-array\nexport function toArray(ras) {\n    var l = ras.length;\n    var as = Array(l);\n    for (var i = 0; i < l; i++) {\n        as[i] = ras[i];\n    }\n    return as;\n}\n/**\n * @category instances\n * @since 2.5.0\n */\nexport function getShow(S) {\n    return {\n        show: function (as) { return \"[\" + as.map(S.show).join(', ') + \"]\"; }\n    };\n}\nvar concat = function (x, y) {\n    var lenx = x.length;\n    if (lenx === 0) {\n        return y;\n    }\n    var leny = y.length;\n    if (leny === 0) {\n        return x;\n    }\n    var r = Array(lenx + leny);\n    for (var i = 0; i < lenx; i++) {\n        r[i] = x[i];\n    }\n    for (var i = 0; i < leny; i++) {\n        r[i + lenx] = y[i];\n    }\n    return r;\n};\n/**\n * Returns a `Monoid` for `ReadonlyArray<A>`\n *\n * @example\n * import { getMonoid } from 'fp-ts/ReadonlyArray'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.5.0\n */\nexport function getMonoid() {\n    return {\n        concat: concat,\n        empty: empty\n    };\n}\n/**\n * Derives an `Eq` over the `ReadonlyArray` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import { eqString } from 'fp-ts/Eq'\n * import { getEq } from 'fp-ts/ReadonlyArray'\n *\n * const E = getEq(eqString)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.5.0\n */\nexport function getEq(E) {\n    return {\n        equals: function (xs, ys) { return xs === ys || (xs.length === ys.length && xs.every(function (x, i) { return E.equals(x, ys[i]); })); }\n    };\n}\n/**\n * Derives an `Ord` over the `ReadonlyArray` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/ReadonlyArray'\n * import { ordString } from 'fp-ts/Ord'\n *\n * const O = getOrd(ordString)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n *\n * @category instances\n * @since 2.5.0\n */\nexport function getOrd(O) {\n    return fromCompare(function (a, b) {\n        var aLen = a.length;\n        var bLen = b.length;\n        var len = Math.min(aLen, bLen);\n        for (var i = 0; i < len; i++) {\n            var ordering = O.compare(a[i], b[i]);\n            if (ordering !== 0) {\n                return ordering;\n            }\n        }\n        return ordNumber.compare(aLen, bLen);\n    });\n}\n/**\n * Return a list of length `n` with element `i` initialized with `f(i)`\n *\n * @example\n * import { makeBy } from 'fp-ts/ReadonlyArray'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.5.0\n */\nexport function makeBy(n, f) {\n    // tslint:disable-next-line: readonly-array\n    var r = [];\n    for (var i = 0; i < n; i++) {\n        r.push(f(i));\n    }\n    return r;\n}\n/**\n * Create an array containing a range of integers, including both endpoints\n *\n * @example\n * import { range } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.5.0\n */\nexport function range(start, end) {\n    return makeBy(end - start + 1, function (i) { return start + i; });\n}\n/**\n * Create an array containing a value repeated the specified number of times\n *\n * @example\n * import { replicate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.5.0\n */\nexport function replicate(n, a) {\n    return makeBy(n, function () { return a; });\n}\n/**\n * Removes one level of nesting\n *\n * Derivable from `Monad`.\n *\n * @example\n * import { flatten } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(flatten([[1], [2], [3]]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function flatten(mma) {\n    var rLen = 0;\n    var len = mma.length;\n    for (var i = 0; i < len; i++) {\n        rLen += mma[i].length;\n    }\n    var r = Array(rLen);\n    var start = 0;\n    for (var i = 0; i < len; i++) {\n        var arr = mma[i];\n        var l = arr.length;\n        for (var j = 0; j < l; j++) {\n            r[j + start] = arr[j];\n        }\n        start += l;\n    }\n    return r;\n}\n/**\n * Break an array into its first element and remaining elements\n *\n * @example\n * import { foldLeft } from 'fp-ts/ReadonlyArray'\n *\n * const len: <A>(as: ReadonlyArray<A>) => number = foldLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category destructors\n * @since 2.5.0\n */\nexport function foldLeft(onEmpty, onCons) {\n    return function (as) { return (isEmpty(as) ? onEmpty() : onCons(as[0], as.slice(1))); };\n}\n/**\n * Break an array into its initial elements and the last element\n *\n * @category destructors\n * @since 2.5.0\n */\nexport function foldRight(onEmpty, onCons) {\n    return function (as) { return (isEmpty(as) ? onEmpty() : onCons(as.slice(0, as.length - 1), as[as.length - 1])); };\n}\n/**\n * Same as `reduce` but it carries over the intermediate steps\n *\n * @example\n * import { scanLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function scanLeft(b, f) {\n    return function (as) {\n        var l = as.length;\n        // tslint:disable-next-line: readonly-array\n        var r = new Array(l + 1);\n        r[0] = b;\n        for (var i = 0; i < l; i++) {\n            r[i + 1] = f(r[i], as[i]);\n        }\n        return r;\n    };\n}\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function scanRight(b, f) {\n    return function (as) {\n        var l = as.length;\n        // tslint:disable-next-line: readonly-array\n        var r = new Array(l + 1);\n        r[l] = b;\n        for (var i = l - 1; i >= 0; i--) {\n            r[i] = f(as[i], r[i + 1]);\n        }\n        return r;\n    };\n}\n/**\n * Test whether an array is empty\n *\n * @example\n * import { isEmpty } from 'fp-ts/ReadonlyArray'\n *\n * assert.strictEqual(isEmpty([]), true)\n *\n * @since 2.5.0\n */\nexport function isEmpty(as) {\n    return as.length === 0;\n}\n/**\n * Test whether an array is non empty narrowing down the type to `NonEmptyReadonlyArray<A>`\n *\n * @category guards\n * @since 2.5.0\n */\nexport function isNonEmpty(as) {\n    return as.length > 0;\n}\n/**\n * Test whether an array contains a particular index\n *\n * @since 2.5.0\n */\nexport function isOutOfBound(i, as) {\n    return i < 0 || i >= as.length;\n}\nexport function lookup(i, as) {\n    return as === undefined ? function (as) { return lookup(i, as); } : isOutOfBound(i, as) ? O.none : O.some(as[i]);\n}\nexport function cons(head, tail) {\n    if (tail === undefined) {\n        return function (tail) { return cons(head, tail); };\n    }\n    var len = tail.length;\n    var r = Array(len + 1);\n    for (var i = 0; i < len; i++) {\n        r[i + 1] = tail[i];\n    }\n    r[0] = head;\n    return r;\n}\n// TODO: curry and make data-last in v3\n/**\n * Append an element to the end of an array, creating a new non empty array\n *\n * @example\n * import { snoc } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(snoc([1, 2, 3], 4), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.5.0\n */\nexport function snoc(init, end) {\n    var len = init.length;\n    var r = Array(len + 1);\n    for (var i = 0; i < len; i++) {\n        r[i] = init[i];\n    }\n    r[len] = end;\n    return r;\n}\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @since 2.5.0\n */\nexport function head(as) {\n    return isEmpty(as) ? O.none : O.some(as[0]);\n}\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @since 2.5.0\n */\nexport function last(as) {\n    return lookup(as.length - 1, as);\n}\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @since 2.5.0\n */\nexport function tail(as) {\n    return isEmpty(as) ? O.none : O.some(as.slice(1));\n}\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @since 2.5.0\n */\nexport function init(as) {\n    var len = as.length;\n    return len === 0 ? O.none : O.some(as.slice(0, len - 1));\n}\n/**\n * Keep only a number of elements from the start of an array, creating a new array.\n * `n` must be a natural number\n *\n * @example\n * import { takeLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(takeLeft(2)([1, 2, 3]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function takeLeft(n) {\n    return function (as) { return as.slice(0, n); };\n}\n/**\n * Keep only a number of elements from the end of an array, creating a new array.\n * `n` must be a natural number\n *\n * @example\n * import { takeRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(takeRight(2)([1, 2, 3, 4, 5]), [4, 5])\n *\n * @since 2.5.0\n */\nexport function takeRight(n) {\n    return function (as) { return (n === 0 ? empty : as.slice(-n)); };\n}\nexport function takeLeftWhile(predicate) {\n    return function (as) {\n        var i = spanIndexUncurry(as, predicate);\n        var init = Array(i);\n        for (var j = 0; j < i; j++) {\n            init[j] = as[j];\n        }\n        return init;\n    };\n}\nvar spanIndexUncurry = function (as, predicate) {\n    var l = as.length;\n    var i = 0;\n    for (; i < l; i++) {\n        if (!predicate(as[i])) {\n            break;\n        }\n    }\n    return i;\n};\nexport function spanLeft(predicate) {\n    return function (as) {\n        var i = spanIndexUncurry(as, predicate);\n        var init = Array(i);\n        for (var j = 0; j < i; j++) {\n            init[j] = as[j];\n        }\n        var l = as.length;\n        var rest = Array(l - i);\n        for (var j = i; j < l; j++) {\n            rest[j - i] = as[j];\n        }\n        return { init: init, rest: rest };\n    };\n}\n/**\n * Drop a number of elements from the start of an array, creating a new array\n *\n * @example\n * import { dropLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(dropLeft(2)([1, 2, 3]), [3])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function dropLeft(n) {\n    return function (as) { return as.slice(n, as.length); };\n}\n/**\n * Drop a number of elements from the end of an array, creating a new array\n *\n * @example\n * import { dropRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(dropRight(2)([1, 2, 3, 4, 5]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function dropRight(n) {\n    return function (as) { return as.slice(0, as.length - n); };\n}\n/**\n * Remove the longest initial subarray for which all element satisfy the specified predicate, creating a new array\n *\n * @example\n * import { dropLeftWhile } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(dropLeftWhile((n: number) => n % 2 === 1)([1, 3, 2, 4, 5]), [2, 4, 5])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function dropLeftWhile(predicate) {\n    return function (as) {\n        var i = spanIndexUncurry(as, predicate);\n        var l = as.length;\n        var rest = Array(l - i);\n        for (var j = i; j < l; j++) {\n            rest[j - i] = as[j];\n        }\n        return rest;\n    };\n}\n/**\n * Find the first index for which a predicate holds\n *\n * @example\n * import { findIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.5.0\n */\nexport function findIndex(predicate) {\n    return function (as) {\n        var len = as.length;\n        for (var i = 0; i < len; i++) {\n            if (predicate(as[i])) {\n                return O.some(i);\n            }\n        }\n        return O.none;\n    };\n}\nexport function findFirst(predicate) {\n    return function (as) {\n        var len = as.length;\n        for (var i = 0; i < len; i++) {\n            if (predicate(as[i])) {\n                return O.some(as[i]);\n            }\n        }\n        return O.none;\n    };\n}\n/**\n * Find the first element returned by an option based selector function\n *\n * @example\n * import { findFirstMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   name: string\n *   age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the first person that has an age\n * assert.deepStrictEqual(findFirstMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Mary'))\n *\n * @since 2.5.0\n */\nexport function findFirstMap(f) {\n    return function (as) {\n        var len = as.length;\n        for (var i = 0; i < len; i++) {\n            var v = f(as[i]);\n            if (O.isSome(v)) {\n                return v;\n            }\n        }\n        return O.none;\n    };\n}\nexport function findLast(predicate) {\n    return function (as) {\n        var len = as.length;\n        for (var i = len - 1; i >= 0; i--) {\n            if (predicate(as[i])) {\n                return O.some(as[i]);\n            }\n        }\n        return O.none;\n    };\n}\n/**\n * Find the last element returned by an option based selector function\n *\n * @example\n * import { findLastMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   name: string\n *   age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the last person that has an age\n * assert.deepStrictEqual(findLastMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Joey'))\n *\n * @since 2.5.0\n */\nexport function findLastMap(f) {\n    return function (as) {\n        var len = as.length;\n        for (var i = len - 1; i >= 0; i--) {\n            var v = f(as[i]);\n            if (O.isSome(v)) {\n                return v;\n            }\n        }\n        return O.none;\n    };\n}\n/**\n * Returns the index of the last element of the list which matches the predicate\n *\n * @example\n * import { findLastIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   a: number\n *   b: number\n * }\n * const xs: ReadonlyArray<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { a: number }) => x.a === 4)(xs), none)\n *\n *\n * @since 2.5.0\n */\nexport function findLastIndex(predicate) {\n    return function (as) {\n        var len = as.length;\n        for (var i = len - 1; i >= 0; i--) {\n            if (predicate(as[i])) {\n                return O.some(i);\n            }\n        }\n        return O.none;\n    };\n}\n/**\n * Insert an element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { insertAt } from 'fp-ts/ReadonlyArray'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.5.0\n */\nexport function insertAt(i, a) {\n    return function (as) { return (i < 0 || i > as.length ? O.none : O.some(unsafeInsertAt(i, a, as))); };\n}\n/**\n * Change the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { updateAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.5.0\n */\nexport function updateAt(i, a) {\n    return function (as) { return (isOutOfBound(i, as) ? O.none : O.some(unsafeUpdateAt(i, a, as))); };\n}\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { deleteAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.5.0\n */\nexport function deleteAt(i) {\n    return function (as) { return (isOutOfBound(i, as) ? O.none : O.some(unsafeDeleteAt(i, as))); };\n}\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds\n *\n * @example\n * import { modifyAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.5.0\n */\nexport function modifyAt(i, f) {\n    return function (as) { return (isOutOfBound(i, as) ? O.none : O.some(unsafeUpdateAt(i, f(as[i]), as))); };\n}\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function reverse(as) {\n    if (isEmpty(as)) {\n        return as;\n    }\n    return as.slice().reverse();\n}\n/**\n * Extracts from an array of `Either` all the `Right` elements. All the `Right` elements are extracted in order\n *\n * @example\n * import { rights } from 'fp-ts/ReadonlyArray'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function rights(as) {\n    // tslint:disable-next-line: readonly-array\n    var r = [];\n    var len = as.length;\n    for (var i = 0; i < len; i++) {\n        var a = as[i];\n        if (a._tag === 'Right') {\n            r.push(a.right);\n        }\n    }\n    return r;\n}\n/**\n * Extracts from an array of `Either` all the `Left` elements. All the `Left` elements are extracted in order\n *\n * @example\n * import { lefts } from 'fp-ts/ReadonlyArray'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @since 2.5.0\n */\nexport function lefts(as) {\n    // tslint:disable-next-line: readonly-array\n    var r = [];\n    var len = as.length;\n    for (var i = 0; i < len; i++) {\n        var a = as[i];\n        if (a._tag === 'Left') {\n            r.push(a.left);\n        }\n    }\n    return r;\n}\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/ReadonlyArray'\n * import { ordNumber } from 'fp-ts/Ord'\n *\n * assert.deepStrictEqual(sort(ordNumber)([3, 2, 1]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var sort = function (O) { return function (as) {\n    return as.length <= 1 ? as : as.slice().sort(O.compare);\n}; };\n// TODO: curry and make data-last in v3\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function zipWith(fa, fb, f) {\n    // tslint:disable-next-line: readonly-array\n    var fc = [];\n    var len = Math.min(fa.length, fb.length);\n    for (var i = 0; i < len; i++) {\n        fc[i] = f(fa[i], fb[i]);\n    }\n    return fc;\n}\nexport function zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return zipWith(as, bs, function (a, b) { return [a, b]; });\n}\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @since 2.5.0\n */\nexport function unzip(as) {\n    // tslint:disable-next-line: readonly-array\n    var fa = [];\n    // tslint:disable-next-line: readonly-array\n    var fb = [];\n    for (var i = 0; i < as.length; i++) {\n        fa[i] = as[i][0];\n        fb[i] = as[i][1];\n    }\n    return [fa, fb];\n}\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependToAll } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(prependToAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\nexport var prependToAll = function (e) { return function (xs) {\n    // tslint:disable-next-line: readonly-array\n    var ys = [];\n    for (var _i = 0, xs_1 = xs; _i < xs_1.length; _i++) {\n        var x = xs_1[_i];\n        ys.push(e, x);\n    }\n    return ys;\n}; };\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\nexport function intersperse(e) {\n    return function (as) {\n        var length = as.length;\n        if (length === 0) {\n            return as;\n        }\n        return cons(as[0], prependToAll(e)(as.slice(1, as.length)));\n    };\n}\n/**\n * Rotate an array to the right by `n` steps\n *\n * @example\n * import { rotate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function rotate(n) {\n    return function (as) {\n        var len = as.length;\n        if (n === 0 || len <= 1 || len === Math.abs(n)) {\n            return as;\n        }\n        else if (n < 0) {\n            return rotate(len + n)(as);\n        }\n        else {\n            return as.slice(-n).concat(as.slice(0, len - n));\n        }\n    };\n}\nexport function elem(E) {\n    return function (a, as) {\n        if (as === undefined) {\n            var elemE_1 = elem(E);\n            return function (as) { return elemE_1(a, as); };\n        }\n        var predicate = function (element) { return E.equals(element, a); };\n        var i = 0;\n        var len = as.length;\n        for (; i < len; i++) {\n            if (predicate(as[i])) {\n                return true;\n            }\n        }\n        return false;\n    };\n}\n/**\n * Remove duplicates from an array, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/ReadonlyArray'\n * import { eqNumber } from 'fp-ts/Eq'\n *\n * assert.deepStrictEqual(uniq(eqNumber)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function uniq(E) {\n    var elemS = elem(E);\n    return function (as) {\n        var len = as.length;\n        if (len <= 1) {\n            return as;\n        }\n        // tslint:disable-next-line: readonly-array\n        var r = [];\n        var i = 0;\n        for (; i < len; i++) {\n            var a = as[i];\n            if (!elemS(a, r)) {\n                r.push(a);\n            }\n        }\n        return len === r.length ? as : r;\n    };\n}\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/ReadonlyArray'\n * import { ord, ordString, ordNumber } from 'fp-ts/Ord'\n *\n * interface Person {\n *   name: string\n *   age: number\n * }\n * const byName = ord.contramap(ordString, (p: Person) => p.name)\n * const byAge = ord.contramap(ordNumber, (p: Person) => p.age)\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function sortBy(ords) {\n    var M = getOrdMonoid();\n    return sort(ords.reduce(M.concat, M.empty));\n}\n/**\n * A useful recursion pattern for processing an array to produce a new array, often used for \"chopping\" up the input\n * array. Typically chop is called with some function that will consume an initial prefix of the array and produce a\n * value and the rest of the array.\n *\n * @example\n * import { Eq, eqNumber } from 'fp-ts/Eq'\n * import { chop, spanLeft } from 'fp-ts/ReadonlyArray'\n *\n * const group = <A>(S: Eq<A>): ((as: ReadonlyArray<A>) => ReadonlyArray<ReadonlyArray<A>>) => {\n *   return chop(as => {\n *     const { init, rest } = spanLeft((a: A) => S.equals(a, as[0]))(as)\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(eqNumber)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var chop = function (f) { return function (as) {\n    // tslint:disable-next-line: readonly-array\n    var result = [];\n    var cs = as;\n    while (isNonEmpty(cs)) {\n        var _a = f(cs), b = _a[0], c = _a[1];\n        result.push(b);\n        cs = c;\n    }\n    return result;\n}; };\n/**\n * Splits an array into two pieces, the first piece has `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @since 2.5.0\n */\nexport function splitAt(n) {\n    return function (as) { return [as.slice(0, n), as.slice(n)]; };\n}\n/**\n * Splits an array into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the array. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `xs`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n *\n * @since 2.5.0\n */\nexport function chunksOf(n) {\n    var f = chop(splitAt(n));\n    return function (as) { return (as.length === 0 ? empty : isOutOfBound(n - 1, as) ? [as] : f(as)); };\n}\nexport function comprehension(input, f, g) {\n    if (g === void 0) { g = function () { return true; }; }\n    var go = function (scope, input) {\n        if (input.length === 0) {\n            return g.apply(void 0, scope) ? [f.apply(void 0, scope)] : empty;\n        }\n        else {\n            return chain_(input[0], function (x) { return go(snoc(scope, x), input.slice(1)); });\n        }\n    };\n    return go(empty, input);\n}\nexport function union(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var unionE_1 = union(E);\n            return function (ys) { return unionE_1(ys, xs); };\n        }\n        return concat(xs, ys.filter(function (a) { return !elemE(a, xs); }));\n    };\n}\nexport function intersection(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var intersectionE_1 = intersection(E);\n            return function (ys) { return intersectionE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return elemE(a, ys); });\n    };\n}\nexport function difference(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var differenceE_1 = difference(E);\n            return function (ys) { return differenceE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return !elemE(a, ys); });\n    };\n}\n/**\n * Wrap a value into the type constructor.\n *\n * @category Applicative\n * @since 2.5.0\n */\nexport var of = function (a) { return [a]; };\n/**\n * @category Alternative\n * @since 2.7.0\n */\nexport var zero = function () { return empty; };\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar map_ = function (fa, f) { return pipe(fa, map(f)); };\nvar mapWithIndex_ = function (fa, f) { return pipe(fa, mapWithIndex(f)); };\nvar ap_ = function (fab, fa) { return pipe(fab, ap(fa)); };\nvar chain_ = function (ma, f) {\n    return pipe(ma, chain(f));\n};\nvar filter_ = function (fa, predicate) { return pipe(fa, filter(predicate)); };\nvar filterMap_ = function (fa, f) { return pipe(fa, filterMap(f)); };\nvar partitionWithIndex_ = function (fa, predicateWithIndex) { return pipe(fa, partitionWithIndex(predicateWithIndex)); };\nvar partition_ = function (fa, predicate) { return pipe(fa, partition(predicate)); };\nvar partitionMap_ = function (fa, f) { return pipe(fa, partitionMap(f)); };\nvar partitionMapWithIndex_ = function (fa, f) { return pipe(fa, partitionMapWithIndex(f)); };\nvar alt_ = function (fa, that) { return pipe(fa, alt(that)); };\nvar reduce_ = function (fa, b, f) { return pipe(fa, reduce(b, f)); };\nvar foldMap_ = function (M) {\n    var foldMapM = foldMap(M);\n    return function (fa, f) { return pipe(fa, foldMapM(f)); };\n};\nvar reduceRight_ = function (fa, b, f) { return pipe(fa, reduceRight(b, f)); };\nvar reduceWithIndex_ = function (fa, b, f) {\n    var l = fa.length;\n    var r = b;\n    for (var i = 0; i < l; i++) {\n        r = f(i, r, fa[i]);\n    }\n    return r;\n};\nvar foldMapWithIndex_ = function (M) { return function (fa, f) {\n    return fa.reduce(function (b, a, i) { return M.concat(b, f(i, a)); }, M.empty);\n}; };\nvar reduceRightWithIndex_ = function (fa, b, f) {\n    return pipe(fa, reduceRightWithIndex(b, f));\n};\nvar filterMapWithIndex_ = function (fa, f) {\n    return pipe(fa, filterMapWithIndex(f));\n};\nvar filterWithIndex_ = function (fa, predicateWithIndex) { return pipe(fa, filterWithIndex(predicateWithIndex)); };\nvar extend_ = function (fa, f) { return pipe(fa, extend(f)); };\nvar traverse_ = function (F) {\n    var traverseF = traverse(F);\n    return function (ta, f) { return pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar traverseWithIndex_ = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (ta, f) { return pipe(ta, traverseWithIndexF(f)); };\n};\n/* istanbul ignore next */\nvar wither_ = function (F) {\n    var witherF = wither(F);\n    return function (fa, f) { return pipe(fa, witherF(f)); };\n};\n/* istanbul ignore next */\nvar wilt_ = function (F) {\n    var wiltF = wilt(F);\n    return function (fa, f) { return pipe(fa, wiltF(f)); };\n};\n// -------------------------------------------------------------------------------------\n// pipeables\n// -------------------------------------------------------------------------------------\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nexport var altW = function (that) { return function (fa) { return concat(fa, that()); }; };\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.5.0\n */\nexport var alt = altW;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.5.0\n */\nexport var ap = function (fa) {\n    return chain(function (f) { return pipe(fa, map(f)); });\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var apFirst = function (fb) {\n    return flow(map(function (a) { return function () { return a; }; }), ap(fb));\n};\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var apSecond = function (fb) {\n    return flow(map(function () { return function (b) { return b; }; }), ap(fb));\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.5.0\n */\nexport var chain = function (f) { return function (ma) {\n    return pipe(ma, chainWithIndex(function (_, a) { return f(a); }));\n}; };\n/**\n * @since 2.7.0\n */\nexport var chainWithIndex = function (f) { return function (ma) {\n    var outLen = 0;\n    var l = ma.length;\n    var temp = new Array(l);\n    for (var i = 0; i < l; i++) {\n        var e = ma[i];\n        var arr = f(i, e);\n        outLen += arr.length;\n        temp[i] = arr;\n    }\n    var out = Array(outLen);\n    var start = 0;\n    for (var i = 0; i < l; i++) {\n        var arr = temp[i];\n        var l_1 = arr.length;\n        for (var j = 0; j < l_1; j++) {\n            out[j + start] = arr[j];\n        }\n        start += l_1;\n    }\n    return out;\n}; };\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Monad`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var chainFirst = function (f) {\n    return chain(function (a) {\n        return pipe(f(a), map(function () { return a; }));\n    });\n};\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.5.0\n */\nexport var map = function (f) { return function (fa) {\n    return fa.map(function (a) { return f(a); });\n}; };\n/**\n * @category FunctorWithIndex\n * @since 2.5.0\n */\nexport var mapWithIndex = function (f) { return function (fa) { return fa.map(function (a, i) { return f(i, a); }); }; };\n/**\n * @category Compactable\n * @since 2.5.0\n */\nexport var separate = function (fa) {\n    // tslint:disable-next-line: readonly-array\n    var left = [];\n    // tslint:disable-next-line: readonly-array\n    var right = [];\n    for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n        var e = fa_1[_i];\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return {\n        left: left,\n        right: right\n    };\n};\n/**\n * @category Filterable\n * @since 2.5.0\n */\nexport var filter = function (predicate) { return function (fa) { return fa.filter(predicate); }; };\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nexport var filterMapWithIndex = function (f) { return function (fa) {\n    // tslint:disable-next-line: readonly-array\n    var result = [];\n    for (var i = 0; i < fa.length; i++) {\n        var optionB = f(i, fa[i]);\n        if (O.isSome(optionB)) {\n            result.push(optionB.value);\n        }\n    }\n    return result;\n}; };\n/**\n * @category Filterable\n * @since 2.5.0\n */\nexport var filterMap = function (f) {\n    return filterMapWithIndex(function (_, a) { return f(a); });\n};\n/**\n * @category Compactable\n * @since 2.5.0\n */\nexport var compact = \n/*#__PURE__*/\nfilterMap(identity);\n/**\n * @category Filterable\n * @since 2.5.0\n */\nexport var partition = function (predicate) {\n    return partitionWithIndex(function (_, a) { return predicate(a); });\n};\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nexport var partitionWithIndex = function (predicateWithIndex) { return function (fa) {\n    // tslint:disable-next-line: readonly-array\n    var left = [];\n    // tslint:disable-next-line: readonly-array\n    var right = [];\n    for (var i = 0; i < fa.length; i++) {\n        var a = fa[i];\n        if (predicateWithIndex(i, a)) {\n            right.push(a);\n        }\n        else {\n            left.push(a);\n        }\n    }\n    return {\n        left: left,\n        right: right\n    };\n}; };\n/**\n * @category Filterable\n * @since 2.5.0\n */\nexport var partitionMap = function (f) {\n    return partitionMapWithIndex(function (_, a) { return f(a); });\n};\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nexport var partitionMapWithIndex = function (f) { return function (fa) {\n    // tslint:disable-next-line: readonly-array\n    var left = [];\n    // tslint:disable-next-line: readonly-array\n    var right = [];\n    for (var i = 0; i < fa.length; i++) {\n        var e = f(i, fa[i]);\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return {\n        left: left,\n        right: right\n    };\n}; };\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nexport var filterWithIndex = function (predicateWithIndex) { return function (fa) {\n    return fa.filter(function (a, i) { return predicateWithIndex(i, a); });\n}; };\n/**\n * @category Extend\n * @since 2.5.0\n */\nexport var extend = function (f) { return function (wa) { return wa.map(function (_, i, as) { return f(as.slice(i)); }); }; };\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var duplicate = \n/*#__PURE__*/\nextend(identity);\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nexport var foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = foldMapWithIndex_(M);\n    return function (f) { return function (fa) { return foldMapWithIndexM(fa, f); }; };\n};\n/**\n * @category Foldable\n * @since 2.5.0\n */\nexport var reduce = function (b, f) {\n    return reduceWithIndex(b, function (_, b, a) { return f(b, a); });\n};\n/**\n * @category Foldable\n * @since 2.5.0\n */\nexport var foldMap = function (M) {\n    var foldMapWithIndexM = foldMapWithIndex(M);\n    return function (f) { return foldMapWithIndexM(function (_, a) { return f(a); }); };\n};\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nexport var reduceWithIndex = function (b, f) { return function (fa) { return reduceWithIndex_(fa, b, f); }; };\n/**\n * @category Foldable\n * @since 2.5.0\n */\nexport var reduceRight = function (b, f) {\n    return reduceRightWithIndex(b, function (_, a, b) { return f(a, b); });\n};\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nexport var reduceRightWithIndex = function (b, f) { return function (fa) { return fa.reduceRight(function (b, a, i) { return f(i, a, b); }, b); }; };\n/**\n * **for optimized and stack safe version check the data types `traverseArray` function**\n * @category Traversable\n * @since 2.6.3\n */\nexport var traverse = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\n/**\n * **for optimized and stack safe version check the data types `sequenceArray` function**\n * @category Traversable\n * @since 2.6.3\n */\nexport var sequence = function (F) { return function (ta) {\n    return reduce_(ta, F.of(zero()), function (fas, fa) {\n        return F.ap(F.map(fas, function (as) { return function (a) { return snoc(as, a); }; }), fa);\n    });\n}; };\n/**\n * **for optimized and stack safe version check the data types `traverseArrayWithIndex` function**\n * @category TraversableWithIndex\n * @since 2.6.3\n */\nexport var traverseWithIndex = function (F) { return function (f) {\n    return reduceWithIndex(F.of(zero()), function (i, fbs, a) {\n        return F.ap(F.map(fbs, function (bs) { return function (b) { return snoc(bs, b); }; }), f(i, a));\n    });\n}; };\n/**\n * @category Witherable\n * @since 2.6.5\n */\nexport var wither = function (F) {\n    var traverseF = traverse(F);\n    return function (f) { return function (fa) { return F.map(pipe(fa, traverseF(f)), compact); }; };\n};\n/**\n * @category Witherable\n * @since 2.6.5\n */\nexport var wilt = function (F) {\n    var traverseF = traverse(F);\n    return function (f) { return function (fa) { return F.map(pipe(fa, traverseF(f)), separate); }; };\n};\n/**\n * @category Unfoldable\n * @since 2.6.6\n */\nexport var unfold = function (b, f) {\n    // tslint:disable-next-line: readonly-array\n    var ret = [];\n    var bb = b;\n    while (true) {\n        var mt = f(bb);\n        if (O.isSome(mt)) {\n            var _a = mt.value, a = _a[0], b_1 = _a[1];\n            ret.push(a);\n            bb = b_1;\n        }\n        else {\n            break;\n        }\n    }\n    return ret;\n};\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var URI = 'ReadonlyArray';\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: map_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FunctorWithIndex = {\n    URI: URI,\n    map: map_,\n    mapWithIndex: mapWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n    URI: URI,\n    map: map_,\n    ap: ap_,\n    of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n    URI: URI,\n    map: map_,\n    ap: ap_,\n    of: of,\n    chain: chain_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Unfoldable = {\n    URI: URI,\n    unfold: unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n    URI: URI,\n    map: map_,\n    alt: alt_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alternative = {\n    URI: URI,\n    map: map_,\n    ap: ap_,\n    of: of,\n    alt: alt_,\n    zero: zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Extend = {\n    URI: URI,\n    map: map_,\n    extend: extend_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Compactable = {\n    URI: URI,\n    compact: compact,\n    separate: separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Filterable = {\n    URI: URI,\n    map: map_,\n    compact: compact,\n    separate: separate,\n    filter: filter_,\n    filterMap: filterMap_,\n    partition: partition_,\n    partitionMap: partitionMap_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FilterableWithIndex = {\n    URI: URI,\n    map: map_,\n    mapWithIndex: mapWithIndex_,\n    compact: compact,\n    separate: separate,\n    filter: filter_,\n    filterMap: filterMap_,\n    partition: partition_,\n    partitionMap: partitionMap_,\n    partitionMapWithIndex: partitionMapWithIndex_,\n    partitionWithIndex: partitionWithIndex_,\n    filterMapWithIndex: filterMapWithIndex_,\n    filterWithIndex: filterWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FoldableWithIndex = {\n    URI: URI,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    reduceWithIndex: reduceWithIndex_,\n    foldMapWithIndex: foldMapWithIndex_,\n    reduceRightWithIndex: reduceRightWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n    URI: URI,\n    map: map_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var TraversableWithIndex = {\n    URI: URI,\n    map: map_,\n    mapWithIndex: mapWithIndex_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    reduceWithIndex: reduceWithIndex_,\n    foldMapWithIndex: foldMapWithIndex_,\n    reduceRightWithIndex: reduceRightWithIndex_,\n    traverse: traverse_,\n    sequence: sequence,\n    traverseWithIndex: traverseWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Witherable = {\n    URI: URI,\n    map: map_,\n    compact: compact,\n    separate: separate,\n    filter: filter_,\n    filterMap: filterMap_,\n    partition: partition_,\n    partitionMap: partitionMap_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: sequence,\n    wither: wither_,\n    wilt: wilt_\n};\n// TODO: remove in v3\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var readonlyArray = {\n    URI: URI,\n    compact: compact,\n    separate: separate,\n    map: map_,\n    ap: ap_,\n    of: of,\n    chain: chain_,\n    filter: filter_,\n    filterMap: filterMap_,\n    partition: partition_,\n    partitionMap: partitionMap_,\n    mapWithIndex: mapWithIndex_,\n    partitionMapWithIndex: partitionMapWithIndex_,\n    partitionWithIndex: partitionWithIndex_,\n    filterMapWithIndex: filterMapWithIndex_,\n    filterWithIndex: filterWithIndex_,\n    alt: alt_,\n    zero: zero,\n    unfold: unfold,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: sequence,\n    reduceWithIndex: reduceWithIndex_,\n    foldMapWithIndex: foldMapWithIndex_,\n    reduceRightWithIndex: reduceRightWithIndex_,\n    traverseWithIndex: traverseWithIndex_,\n    extend: extend_,\n    wither: wither_,\n    wilt: wilt_\n};\n// -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n/**\n * @category unsafe\n * @since 2.5.0\n */\nexport function unsafeInsertAt(i, a, as) {\n    var xs = as.slice();\n    xs.splice(i, 0, a);\n    return xs;\n}\n/**\n * @category unsafe\n * @since 2.5.0\n */\nexport function unsafeUpdateAt(i, a, as) {\n    if (as[i] === a) {\n        return as;\n    }\n    else {\n        var xs = as.slice();\n        xs[i] = a;\n        return xs;\n    }\n}\n/**\n * @category unsafe\n * @since 2.5.0\n */\nexport function unsafeDeleteAt(i, as) {\n    var xs = as.slice();\n    xs.splice(i, 1);\n    return xs;\n}\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * An empty array\n *\n * @since 2.5.0\n */\nexport var empty = [];\n/**\n * Check if a predicate holds true for every array member.\n *\n * @example\n * import { every } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], every(isPositive)), true)\n * assert.deepStrictEqual(pipe([1, 2, -3], every(isPositive)), false)\n *\n * @since 2.9.0\n */\nexport var every = function (predicate) { return function (as) { return as.every(predicate); }; };\n/**\n * Check if a predicate holds true for any array member.\n *\n * @example\n * import { some } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * assert.deepStrictEqual(pipe([-1, -2, 3], some(isPositive)), true)\n * assert.deepStrictEqual(pipe([-1, -2, -3], some(isPositive)), false)\n *\n * @since 2.9.0\n */\nexport var some = function (predicate) { return function (as) { return as.some(predicate); }; };\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexport var Do = \n/*#__PURE__*/\nof({});\n/**\n * @since 2.8.0\n */\nexport var bindTo = function (name) {\n    return map(bindTo_(name));\n};\n/**\n * @since 2.8.0\n */\nexport var bind = function (name, f) {\n    return chain(function (a) {\n        return pipe(f(a), map(function (b) { return bind_(a, name, b); }));\n    });\n};\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexport var apS = function (name, fb) {\n    return flow(map(function (a) { return function (b) { return bind_(a, name, b); }; }), ap(fb));\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}