{"ast":null,"code":"var _jsxFileName = \"/Users/ngocban/Desktop/imx-integration-reactjs/src/Bridging.tsx\",\n    _s = $RefreshSig$();\n\nimport { ERC721TokenType, ETHTokenType, ImmutableRollupStatus } from \"@imtbl/imx-sdk\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire(\"dotenv\").config();\n\nconst Bridging = _ref => {\n  _s();\n\n  let {\n    client,\n    link,\n    wallet\n  } = _ref;\n  // withdrawals\n  const [preparingWithdrawals, setPreparingWithdrawals] = useState(Object);\n  const [readyWithdrawals, setReadyWithdrawals] = useState(Object);\n  const [completedWithdrawals, setCompletedWithdrawals] = useState(Object); // eth\n\n  const [depositAmount, setDepositAmount] = useState(\"\");\n  const [prepareAmount, setPrepareAmount] = useState(\"\"); // nft\n\n  const [depositTokenId, setDepositTokenId] = useState(\"\");\n  const [depositTokenAddress, setDepositTokenAddress] = useState(\"\");\n  const [prepareTokenId, setPrepareTokenId] = useState(\"\");\n  const [prepareTokenAddress, setPrepareTokenAddress] = useState(\"\");\n  const [completeTokenId, setCompleteTokenId] = useState(\"\");\n  const [completeTokenAddress, setCompleteTokenAddress] = useState(\"\");\n  const metaDataPreparing = preparingWithdrawals;\n  const metaDataReady = readyWithdrawals;\n  const metaDataCompleted = completedWithdrawals;\n  useEffect(() => {\n    load();\n  }, []);\n\n  async function load() {\n    setPreparingWithdrawals(await client.getWithdrawals({\n      user: wallet,\n      rollup_status: ImmutableRollupStatus.included\n    })); // included in batch awaiting confirmation\n\n    setReadyWithdrawals(await client.getWithdrawals({\n      user: wallet,\n      rollup_status: ImmutableRollupStatus.confirmed,\n      withdrawn_to_wallet: false\n    })); // confirmed on-chain in a batch and ready to be withdrawn\n\n    setCompletedWithdrawals(await client.getWithdrawals({\n      user: wallet,\n      withdrawn_to_wallet: true\n    })); // confirmed on-chain in a batch and already withdrawn to L1 wallet\n  } // deposit an NFT\n\n\n  async function depositNFT() {\n    await link.deposit({\n      type: ERC721TokenType.ERC721,\n      tokenId: depositTokenId,\n      tokenAddress: depositTokenAddress\n    });\n  } // deposit eth\n\n\n  async function depositETH() {\n    await link.deposit({\n      type: ETHTokenType.ETH,\n      amount: depositAmount\n    });\n  } // prepare an NFT withdrawal\n\n\n  async function prepareWithdrawalNFT() {\n    await link.prepareWithdrawal({\n      type: ERC721TokenType.ERC721,\n      tokenId: prepareTokenId,\n      tokenAddress: prepareTokenAddress\n    });\n  } // prepare an eth withdrawal\n\n\n  async function prepareWithdrawalETH() {\n    await link.prepareWithdrawal({\n      type: ETHTokenType.ETH,\n      amount: prepareAmount\n    });\n  } // complete an NFT withdrawal\n\n\n  async function completeWithdrawalNFT() {\n    await link.completeWithdrawal({\n      type: ERC721TokenType.ERC721,\n      tokenId: completeTokenId,\n      tokenAddress: completeTokenAddress\n    });\n  } // complete an eth withdrawal\n\n\n  async function completeWithdrawalETH() {\n    await link.completeWithdrawal({\n      type: ETHTokenType.ETH\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"border border-info bg-black text-center rounded\",\n      children: \"ERC20\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-body-filter\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border border-white rounded p-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Deposit ETH:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount (ETH):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: depositAmount,\n          onChange: e => setDepositAmount(e.target.value),\n          className: \"form-control bg-black border-info text-white ms-1 mt-1 mb-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-info filter-button text-white\",\n          onClick: depositETH,\n          children: \"Deposit ETH\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border border-white rounded p-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Prepare ETH for withdrawal (submit to be rolled up and confirmed on chain in the next batch):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount (ETH):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: prepareAmount,\n          onChange: e => setPrepareAmount(e.target.value),\n          className: \"form-control bg-black border-info text-white ms-1 mt-1 mb-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-info filter-button text-white\",\n          onClick: prepareWithdrawalETH,\n          children: \"Prepare ETH Withdrawal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border border-white rounded p-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Complete ETH withdrawal (withdraws entire eth balance that is ready for withdrawal to L1 wallet):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-info filter-button text-white\",\n          onClick: completeWithdrawalETH,\n          children: \"Complete ETH Withdrawal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-body-filter\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"border border-info bg-black text-center rounded\",\n        children: \"ERC721\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border border-white rounded p-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Deposit NFT:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Token ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: depositTokenId,\n          onChange: e => setDepositTokenId(e.target.value),\n          className: \"form-control bg-black border-info text-white ms-1 mt-1 mb-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Token Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: depositTokenAddress,\n          onChange: e => setDepositTokenAddress(e.target.value),\n          className: \"form-control bg-black border-info text-white ms-1 mt-1 mb-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-info filter-button text-white\",\n          onClick: depositNFT,\n          children: \"Deposit NFT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border border-white rounded p-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Prepare NFT for withdrawal (submit to be rolled up and confirmed on chain in the next batch):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Token ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: prepareTokenId,\n          onChange: e => setPrepareTokenId(e.target.value),\n          className: \"form-control bg-black border-info text-white ms-1 mt-1 mb-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Token Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: prepareTokenAddress,\n          onChange: e => setPrepareTokenAddress(e.target.value),\n          className: \"form-control bg-black border-info text-white ms-1 mt-1 mb-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-info filter-button text-white\",\n          onClick: prepareWithdrawalNFT,\n          children: \"Prepare NFT Withdrawal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border border-white rounded p-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Complete NFT withdrawal (withdraws single NFT that is ready for withdrawal to L1 wallet):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Token ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: completeTokenId,\n          onChange: e => setCompleteTokenId(e.target.value),\n          className: \"form-control bg-black border-info text-white ms-1 mt-1 mb-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Token Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: completeTokenAddress,\n          onChange: e => setCompleteTokenAddress(e.target.value),\n          className: \"form-control bg-black border-info text-white ms-1 mt-1 mb-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-info filter-button text-white\",\n          onClick: completeWithdrawalNFT,\n          children: \"Complete NFT Withdrawal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Withdrawals being prepared:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), JSON.stringify(preparingWithdrawals)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ready for withdrawal:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), JSON.stringify(readyWithdrawals)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Withdrawn to wallet:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), JSON.stringify(completedWithdrawals)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Bridging, \"UYAgiTvAaq/gCKtTMM5JBFkL2zY=\");\n\n_c = Bridging;\nexport default Bridging;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bridging\");","map":{"version":3,"names":["ERC721TokenType","ETHTokenType","ImmutableRollupStatus","useEffect","useState","require","config","Bridging","client","link","wallet","preparingWithdrawals","setPreparingWithdrawals","Object","readyWithdrawals","setReadyWithdrawals","completedWithdrawals","setCompletedWithdrawals","depositAmount","setDepositAmount","prepareAmount","setPrepareAmount","depositTokenId","setDepositTokenId","depositTokenAddress","setDepositTokenAddress","prepareTokenId","setPrepareTokenId","prepareTokenAddress","setPrepareTokenAddress","completeTokenId","setCompleteTokenId","completeTokenAddress","setCompleteTokenAddress","metaDataPreparing","metaDataReady","metaDataCompleted","load","getWithdrawals","user","rollup_status","included","confirmed","withdrawn_to_wallet","depositNFT","deposit","type","ERC721","tokenId","tokenAddress","depositETH","ETH","amount","prepareWithdrawalNFT","prepareWithdrawal","prepareWithdrawalETH","completeWithdrawalNFT","completeWithdrawal","completeWithdrawalETH","e","target","value","JSON","stringify"],"sources":["/Users/ngocban/Desktop/imx-integration-reactjs/src/Bridging.tsx"],"sourcesContent":["import {\n  Link,\n  ImmutableXClient,\n  ImmutableMethodResults,\n  ERC721TokenType,\n  ETHTokenType,\n  ImmutableRollupStatus,\n} from \"@imtbl/imx-sdk\";\nimport { useEffect, useState } from \"react\";\nrequire(\"dotenv\").config();\n\ninterface BridgingProps {\n  client: ImmutableXClient;\n  link: Link;\n  wallet: string;\n}\n\nconst Bridging = ({ client, link, wallet }: BridgingProps) => {\n  // withdrawals\n  const [preparingWithdrawals, setPreparingWithdrawals] =\n    useState<ImmutableMethodResults.ImmutableGetWithdrawalsResult>(Object);\n  const [readyWithdrawals, setReadyWithdrawals] =\n    useState<ImmutableMethodResults.ImmutableGetWithdrawalsResult>(Object);\n  const [completedWithdrawals, setCompletedWithdrawals] =\n    useState<ImmutableMethodResults.ImmutableGetWithdrawalsResult>(Object);\n  // eth\n  const [depositAmount, setDepositAmount] = useState(\"\");\n  const [prepareAmount, setPrepareAmount] = useState(\"\");\n  // nft\n  const [depositTokenId, setDepositTokenId] = useState(\"\");\n  const [depositTokenAddress, setDepositTokenAddress] = useState(\"\");\n  const [prepareTokenId, setPrepareTokenId] = useState(\"\");\n  const [prepareTokenAddress, setPrepareTokenAddress] = useState(\"\");\n  const [completeTokenId, setCompleteTokenId] = useState(\"\");\n  const [completeTokenAddress, setCompleteTokenAddress] = useState(\"\");\n\n  const metaDataPreparing = preparingWithdrawals;\n  const metaDataReady = readyWithdrawals;\n  const metaDataCompleted = completedWithdrawals;\n\n  useEffect(() => {\n    load();\n  }, []);\n\n  async function load(): Promise<void> {\n    setPreparingWithdrawals(\n      await client.getWithdrawals({\n        user: wallet,\n        rollup_status: ImmutableRollupStatus.included,\n      })\n    ); // included in batch awaiting confirmation\n    setReadyWithdrawals(\n      await client.getWithdrawals({\n        user: wallet,\n        rollup_status: ImmutableRollupStatus.confirmed,\n        withdrawn_to_wallet: false,\n      })\n    ); // confirmed on-chain in a batch and ready to be withdrawn\n    setCompletedWithdrawals(\n      await client.getWithdrawals({\n        user: wallet,\n        withdrawn_to_wallet: true,\n      })\n    ); // confirmed on-chain in a batch and already withdrawn to L1 wallet\n  }\n\n  // deposit an NFT\n  async function depositNFT() {\n    await link.deposit({\n      type: ERC721TokenType.ERC721,\n      tokenId: depositTokenId,\n      tokenAddress: depositTokenAddress,\n    });\n  }\n\n  // deposit eth\n  async function depositETH() {\n    await link.deposit({\n      type: ETHTokenType.ETH,\n      amount: depositAmount,\n    });\n  }\n\n  // prepare an NFT withdrawal\n  async function prepareWithdrawalNFT() {\n    await link.prepareWithdrawal({\n      type: ERC721TokenType.ERC721,\n      tokenId: prepareTokenId,\n      tokenAddress: prepareTokenAddress,\n    });\n  }\n\n  // prepare an eth withdrawal\n  async function prepareWithdrawalETH() {\n    await link.prepareWithdrawal({\n      type: ETHTokenType.ETH,\n      amount: prepareAmount,\n    });\n  }\n\n  // complete an NFT withdrawal\n  async function completeWithdrawalNFT() {\n    await link.completeWithdrawal({\n      type: ERC721TokenType.ERC721,\n      tokenId: completeTokenId,\n      tokenAddress: completeTokenAddress,\n    });\n  }\n\n  // complete an eth withdrawal\n  async function completeWithdrawalETH() {\n    await link.completeWithdrawal({\n      type: ETHTokenType.ETH,\n    });\n  }\n\n  return (\n    <div>\n      <h2 className=\"border border-info bg-black text-center rounded\">ERC20</h2>\n\n      <div className=\"text-body-filter\">\n        <div className=\"border border-white rounded p-3\">\n          <h4>Deposit ETH:</h4>\n          <br />\n          <label>Amount (ETH):</label>\n          <input\n            type=\"text\"\n            value={depositAmount}\n            onChange={(e) => setDepositAmount(e.target.value)}\n            className=\"form-control bg-black border-info text-white ms-1 mt-1 mb-1\"\n          />\n          <button\n            type=\"button\"\n            className=\"btn btn-info filter-button text-white\"\n            onClick={depositETH}\n          >\n            Deposit ETH\n          </button>\n        </div>\n        <br />\n        <br />\n        <div className=\"border border-white rounded p-3\">\n          <h4>\n            Prepare ETH for withdrawal (submit to be rolled up and confirmed on\n            chain in the next batch):\n          </h4>\n          <br />\n          <label>Amount (ETH):</label>\n          <input\n            type=\"text\"\n            value={prepareAmount}\n            onChange={(e) => setPrepareAmount(e.target.value)}\n            className=\"form-control bg-black border-info text-white ms-1 mt-1 mb-1\"\n          />\n\n          <button\n            type=\"button\"\n            className=\"btn btn-info filter-button text-white\"\n            onClick={prepareWithdrawalETH}\n          >\n            Prepare ETH Withdrawal\n          </button>\n        </div>\n        <br />\n        <br />\n        <div className=\"border border-white rounded p-3\">\n          <h4>\n            Complete ETH withdrawal (withdraws entire eth balance that is ready\n            for withdrawal to L1 wallet):\n          </h4>\n          <br />\n          <button\n            type=\"button\"\n            className=\"btn btn-info filter-button text-white\"\n            onClick={completeWithdrawalETH}\n          >\n            Complete ETH Withdrawal\n          </button>\n        </div>\n      </div>\n      <br />\n      <div className=\"text-body-filter\">\n        <h2 className=\"border border-info bg-black text-center rounded\">\n          ERC721\n        </h2>\n\n        <div className=\"border border-white rounded p-3\">\n          <h4>Deposit NFT:</h4>\n          <br />\n          <label>Token ID:</label>\n          <input\n            type=\"text\"\n            value={depositTokenId}\n            onChange={(e) => setDepositTokenId(e.target.value)}\n            className=\"form-control bg-black border-info text-white ms-1 mt-1 mb-1\"\n          />\n\n          <label>Token Address:</label>\n          <input\n            type=\"text\"\n            value={depositTokenAddress}\n            onChange={(e) => setDepositTokenAddress(e.target.value)}\n            className=\"form-control bg-black border-info text-white ms-1 mt-1 mb-1\"\n          />\n\n          <button\n            type=\"button\"\n            className=\"btn btn-info filter-button text-white\"\n            onClick={depositNFT}\n          >\n            Deposit NFT\n          </button>\n        </div>\n        <br />\n        <br />\n        <div className=\"border border-white rounded p-3\">\n          <h4>\n            Prepare NFT for withdrawal (submit to be rolled up and confirmed on\n            chain in the next batch):\n          </h4>\n          <br />\n          <label>Token ID:</label>\n          <input\n            type=\"text\"\n            value={prepareTokenId}\n            onChange={(e) => setPrepareTokenId(e.target.value)}\n            className=\"form-control bg-black border-info text-white ms-1 mt-1 mb-1\"\n          />\n\n          <label>Token Address:</label>\n          <input\n            type=\"text\"\n            value={prepareTokenAddress}\n            onChange={(e) => setPrepareTokenAddress(e.target.value)}\n            className=\"form-control bg-black border-info text-white ms-1 mt-1 mb-1\"\n          />\n\n          <button\n            type=\"button\"\n            className=\"btn btn-info filter-button text-white\"\n            onClick={prepareWithdrawalNFT}\n          >\n            Prepare NFT Withdrawal\n          </button>\n        </div>\n        <br />\n        <br />\n        <div className=\"border border-white rounded p-3\">\n          <h4>\n            Complete NFT withdrawal (withdraws single NFT that is ready for\n            withdrawal to L1 wallet):\n          </h4>\n          <br />\n          <label>Token ID:</label>\n          <input\n            type=\"text\"\n            value={completeTokenId}\n            onChange={(e) => setCompleteTokenId(e.target.value)}\n            className=\"form-control bg-black border-info text-white ms-1 mt-1 mb-1\"\n          />\n\n          <label>Token Address:</label>\n          <input\n            type=\"text\"\n            value={completeTokenAddress}\n            onChange={(e) => setCompleteTokenAddress(e.target.value)}\n            className=\"form-control bg-black border-info text-white ms-1 mt-1 mb-1\"\n          />\n\n          <button\n            type=\"button\"\n            className=\"btn btn-info filter-button text-white\"\n            onClick={completeWithdrawalNFT}\n          >\n            Complete NFT Withdrawal\n          </button>\n        </div>\n      </div>\n      <br />\n      <br />\n      <br />\n      <p>\n        <h3>Withdrawals being prepared:</h3>\n        {JSON.stringify(preparingWithdrawals)}\n      </p>\n      <br />\n      <br />\n      <p>\n        <h3>Ready for withdrawal:</h3>\n        {JSON.stringify(readyWithdrawals)}\n      </p>\n      <br />\n      <br />\n      <p>\n        <h3>Withdrawn to wallet:</h3>\n        {JSON.stringify(completedWithdrawals)}\n      </p>\n    </div>\n  );\n};\n\nexport default Bridging;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}