{"ast":null,"code":"var _jsxFileName = \"/Users/ngocban/Desktop/imx-integration-reactjs/src/Marketplace.tsx\",\n    _s = $RefreshSig$();\n\nimport { ImmutableOrderStatus } from \"@imtbl/imx-sdk\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire(\"dotenv\").config();\n\nconst Marketplace = _ref => {\n  _s();\n\n  let {\n    client,\n    link\n  } = _ref;\n  const [marketplace, setMarketplace] = useState(Object);\n  const [buyOrderId, setBuyOrderId] = useState(\"\");\n  useEffect(() => {\n    load();\n  }, []);\n\n  async function load() {\n    // setMarketplace(await client.getOrders({status: ImmutableOrderStatus.active, user: '0xc120a52ad90bb926bafcdfc9161740dcf4a2cea1'}))\n    setMarketplace(await client.getOrders({\n      status: ImmutableOrderStatus.active\n    }));\n  } // buy an asset\n\n\n  async function buyNFT() {\n    await link.buy({\n      orderIds: [buyOrderId]\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-body-filter \",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Buy Asset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Order ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control bg-black border-info text-white\",\n          value: buyOrderId,\n          onChange: e => setBuyOrderId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-info filter-button text-white\",\n          onClick: buyNFT,\n          children: \"Buy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-body-filter\",\n      children: \"Marketplace (active sell orders):\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), JSON.stringify(marketplace.result)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Marketplace, \"ly2DaTWknSN3r7FSFrdNDcXdkrk=\");\n\n_c = Marketplace;\nexport default Marketplace;\n\nvar _c;\n\n$RefreshReg$(_c, \"Marketplace\");","map":{"version":3,"names":["ImmutableOrderStatus","useEffect","useState","require","config","Marketplace","client","link","marketplace","setMarketplace","Object","buyOrderId","setBuyOrderId","load","getOrders","status","active","buyNFT","buy","orderIds","e","target","value","JSON","stringify","result"],"sources":["/Users/ngocban/Desktop/imx-integration-reactjs/src/Marketplace.tsx"],"sourcesContent":["import {\n  Link,\n  ImmutableXClient,\n  ImmutableMethodResults,\n  ImmutableOrderStatus,\n} from \"@imtbl/imx-sdk\";\nimport { useEffect, useState } from \"react\";\nrequire(\"dotenv\").config();\n\ninterface MarketplaceProps {\n  client: ImmutableXClient;\n  link: Link;\n}\n\nconst Marketplace = ({ client, link }: MarketplaceProps) => {\n  const [marketplace, setMarketplace] =\n    useState<ImmutableMethodResults.ImmutableGetOrdersResult>(Object);\n  const [buyOrderId, setBuyOrderId] = useState(\"\");\n\n  useEffect(() => {\n    load();\n  }, []);\n\n  async function load(): Promise<void> {\n    // setMarketplace(await client.getOrders({status: ImmutableOrderStatus.active, user: '0xc120a52ad90bb926bafcdfc9161740dcf4a2cea1'}))\n    setMarketplace(\n      await client.getOrders({ status: ImmutableOrderStatus.active })\n    );\n  }\n\n  // buy an asset\n  async function buyNFT() {\n    await link.buy({\n      orderIds: [buyOrderId],\n    });\n  }\n\n  return (\n    <div>\n      <div className=\"text-body-filter \">\n        <h2> Buy Asset</h2>\n        <br />\n        <label>Order ID:</label>\n        <div>\n          <input\n            type=\"text\"\n            className=\"form-control bg-black border-info text-white\"\n            value={buyOrderId}\n            onChange={(e) => setBuyOrderId(e.target.value)}\n          />\n          <button\n            type=\"button\"\n            className=\"btn btn-info filter-button text-white\"\n            onClick={buyNFT}\n          >\n            Buy\n          </button>\n        </div>\n      </div>\n      <br />\n      <br />\n      <br />\n      <h1 className=\"text-body-filter\">Marketplace (active sell orders):</h1>\n      <p>\n        <br />\n        {JSON.stringify(marketplace.result)}\n      </p>\n    </div>\n  );\n};\n\nexport default Marketplace;\n"],"mappings":";;;AAAA,SAIEA,oBAJF,QAKO,gBALP;AAMA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AACAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAOA,MAAMC,WAAW,GAAG,QAAwC;EAAA;;EAAA,IAAvC;IAAEC,MAAF;IAAUC;EAAV,CAAuC;EAC1D,MAAM,CAACC,WAAD,EAAcC,cAAd,IACJP,QAAQ,CAAkDQ,MAAlD,CADV;EAEA,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;EAEAD,SAAS,CAAC,MAAM;IACdY,IAAI;EACL,CAFQ,EAEN,EAFM,CAAT;;EAIA,eAAeA,IAAf,GAAqC;IACnC;IACAJ,cAAc,CACZ,MAAMH,MAAM,CAACQ,SAAP,CAAiB;MAAEC,MAAM,EAAEf,oBAAoB,CAACgB;IAA/B,CAAjB,CADM,CAAd;EAGD,CAdyD,CAgB1D;;;EACA,eAAeC,MAAf,GAAwB;IACtB,MAAMV,IAAI,CAACW,GAAL,CAAS;MACbC,QAAQ,EAAE,CAACR,UAAD;IADG,CAAT,CAAN;EAGD;;EAED,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,mBAAf;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE;QAAA,wBACE;UACE,IAAI,EAAC,MADP;UAEE,SAAS,EAAC,8CAFZ;UAGE,KAAK,EAAEA,UAHT;UAIE,QAAQ,EAAGS,CAAD,IAAOR,aAAa,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV;QAJhC;UAAA;UAAA;UAAA;QAAA,QADF,eAOE;UACE,IAAI,EAAC,QADP;UAEE,SAAS,EAAC,uCAFZ;UAGE,OAAO,EAAEL,MAHX;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAPF;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAqBE;MAAA;MAAA;MAAA;IAAA,QArBF,eAsBE;MAAA;MAAA;MAAA;IAAA,QAtBF,eAuBE;MAAA;MAAA;MAAA;IAAA,QAvBF,eAwBE;MAAI,SAAS,EAAC,kBAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAxBF,eAyBE;MAAA,wBACE;QAAA;QAAA;QAAA;MAAA,QADF,EAEGM,IAAI,CAACC,SAAL,CAAehB,WAAW,CAACiB,MAA3B,CAFH;IAAA;MAAA;MAAA;MAAA;IAAA,QAzBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgCD,CAvDD;;GAAMpB,W;;KAAAA,W;AAyDN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}