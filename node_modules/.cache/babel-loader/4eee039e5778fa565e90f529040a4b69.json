{"ast":null,"code":"var _jsxFileName = \"/Users/ngocban/Desktop/imx-integration-reactjs/src/Inventory.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire(\"dotenv\").config();\n\nconst Inventory = _ref => {\n  _s();\n\n  let {\n    client,\n    link,\n    wallet\n  } = _ref;\n  const [inventory, setInventory] = useState(Object); // buying and selling\n\n  const [sellAmount, setSellAmount] = useState(\"\");\n  const [sellTokenId, setSellTokenId] = useState(\"\");\n  const [sellTokenAddress, setSellTokenAddress] = useState(\"\");\n  const [sellCancelOrder, setSellCancelOrder] = useState(\"\");\n  const metaData = inventory.result;\n  useEffect(() => {\n    load();\n  }, []);\n\n  async function load() {\n    setInventory(await client.getAssets({\n      user: wallet,\n      sell_orders: true\n    }));\n  } // sell an asset\n\n\n  async function sellNFT() {\n    await link.sell({\n      amount: sellAmount,\n      tokenId: sellTokenId,\n      tokenAddress: sellTokenAddress\n    });\n    setInventory(await client.getAssets({\n      user: wallet,\n      sell_orders: true\n    }));\n  } // cancel sell order\n\n\n  async function cancelSell() {\n    await link.cancel({\n      orderId: sellCancelOrder\n    });\n    setInventory(await client.getAssets({\n      user: wallet,\n      sell_orders: true\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Sell asset (create sell order):\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Amount (ETH):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: sellAmount,\n          onChange: e => setSellAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Token ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: sellTokenId,\n          onChange: e => setSellTokenId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Token Address:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: sellTokenAddress,\n          onChange: e => setSellTokenAddress(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sellNFT,\n        children: \"Sell\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Cancel sell order:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Order ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: sellCancelOrder,\n          onChange: e => setSellCancelOrder(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: cancelSell,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Inventory:\", JSON.stringify(inventory.result)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Inventory, \"CW07a5LkIZIMR46dqjnUR+BqP9M=\");\n\n_c = Inventory;\nexport default Inventory;\n\nvar _c;\n\n$RefreshReg$(_c, \"Inventory\");","map":{"version":3,"names":["useEffect","useState","require","config","Inventory","client","link","wallet","inventory","setInventory","Object","sellAmount","setSellAmount","sellTokenId","setSellTokenId","sellTokenAddress","setSellTokenAddress","sellCancelOrder","setSellCancelOrder","metaData","result","load","getAssets","user","sell_orders","sellNFT","sell","amount","tokenId","tokenAddress","cancelSell","cancel","orderId","e","target","value","JSON","stringify"],"sources":["/Users/ngocban/Desktop/imx-integration-reactjs/src/Inventory.tsx"],"sourcesContent":["import { Link, ImmutableXClient, ImmutableMethodResults } from \"@imtbl/imx-sdk\";\nimport { useEffect, useState } from \"react\";\nrequire(\"dotenv\").config();\n\ninterface InventoryProps {\n  client: ImmutableXClient;\n  link: Link;\n  wallet: string;\n}\n\nconst Inventory = ({ client, link, wallet }: InventoryProps) => {\n  const [inventory, setInventory] =\n    useState<ImmutableMethodResults.ImmutableGetAssetsResult>(Object);\n  // buying and selling\n  const [sellAmount, setSellAmount] = useState(\"\");\n  const [sellTokenId, setSellTokenId] = useState(\"\");\n  const [sellTokenAddress, setSellTokenAddress] = useState(\"\");\n  const [sellCancelOrder, setSellCancelOrder] = useState(\"\");\n  const metaData = inventory.result;\n\n  useEffect(() => {\n    load();\n  }, []);\n\n  async function load(): Promise<void> {\n    setInventory(await client.getAssets({ user: wallet, sell_orders: true }));\n  }\n\n  // sell an asset\n  async function sellNFT() {\n    await link.sell({\n      amount: sellAmount,\n      tokenId: sellTokenId,\n      tokenAddress: sellTokenAddress,\n    });\n    setInventory(await client.getAssets({ user: wallet, sell_orders: true }));\n  }\n\n  // cancel sell order\n  async function cancelSell() {\n    await link.cancel({\n      orderId: sellCancelOrder,\n    });\n    setInventory(await client.getAssets({ user: wallet, sell_orders: true }));\n  }\n\n  return (\n    <div>\n      <div>\n        Sell asset (create sell order):\n        <br />\n        <label>\n          Amount (ETH):\n          <input\n            type=\"text\"\n            value={sellAmount}\n            onChange={(e) => setSellAmount(e.target.value)}\n          />\n        </label>\n        <label>\n          Token ID:\n          <input\n            type=\"text\"\n            value={sellTokenId}\n            onChange={(e) => setSellTokenId(e.target.value)}\n          />\n        </label>\n        <label>\n          Token Address:\n          <input\n            type=\"text\"\n            value={sellTokenAddress}\n            onChange={(e) => setSellTokenAddress(e.target.value)}\n          />\n        </label>\n        <button onClick={sellNFT}>Sell</button>\n      </div>\n      <br />\n      <div>\n        Cancel sell order:\n        <br />\n        <label>\n          Order ID:\n          <input\n            type=\"text\"\n            value={sellCancelOrder}\n            onChange={(e) => setSellCancelOrder(e.target.value)}\n          />\n        </label>\n        <button onClick={cancelSell}>Cancel</button>\n      </div>\n      <br />\n      <br />\n      <br />\n      <div>\n        Inventory:\n        {JSON.stringify(inventory.result)}\n      </div>\n    </div>\n  );\n};\n\nexport default Inventory;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}